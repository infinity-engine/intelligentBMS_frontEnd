var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/components/AddBatteryPackComponent.html",[0,0.348,1,1.057]],["body/components/AddBatteryPackComponent.html",[0,0.593,1,1.904,2,1.849,3,0.128,4,0.112,5,1.475,6,1.475,7,1.475,8,1.475,9,0.081,10,3.264,11,3.504,12,2.172,13,3.504,14,3.805,15,1.475,16,2.309,17,2.235,18,2.124,19,3.968,20,1.676,21,6.045,22,1.676,23,5.45,24,0.193,25,0.012,26,0.609,27,0.128,28,0.433,29,4.538,30,4.538,31,1.475,32,1.911,33,1.849,34,1.475,35,2.241,36,1.475,37,0.759,38,1.911,39,1.253,40,2.241,41,1.253,42,1.623,43,1.911,44,1.294,45,1.475,46,1.253,47,1.911,48,1.213,49,1.911,50,1.253,51,1.294,52,1.475,53,0.844,54,1.213,55,1.475,56,1.253,57,1.427,58,1.475,59,1.253,60,1.475,61,1.253,62,1.381,63,1.475,64,1.253,65,1.475,66,1.253,67,1.984,68,1.253,69,1.253,70,1.294,71,1.475,72,1.911,73,1.294,74,1.475,75,1.174,76,1.475,77,1.294,78,2.119,79,1.253,80,1.849,81,1.253,82,1.253,83,1.253,84,1.475,85,1.253,86,1.859,87,1.253,88,1.253,89,1.337,90,1.475,91,1.475,92,0.009,93,0.009]],["title/components/AddCellsComponent.html",[0,0.348,39,1.057]],["body/components/AddCellsComponent.html",[0,0.391,1,0.601,2,1.087,3,0.061,4,0.054,5,1.732,6,0.708,7,0.708,8,0.708,9,0.039,12,1.471,15,0.708,16,2.16,17,2.091,18,1.915,20,0.985,22,0.985,24,0.262,25,0.013,26,0.292,27,0.061,28,0.208,31,0.708,32,1.123,33,1.087,34,0.708,35,1.588,36,0.708,37,0.871,38,1.123,39,1.349,40,1.588,41,0.601,42,1.442,43,1.123,44,0.621,45,0.708,46,0.601,47,1.123,48,0.582,49,1.123,50,0.601,51,0.621,52,0.708,53,0.991,54,0.582,55,0.708,56,0.601,57,0.685,58,0.708,59,0.601,60,0.708,61,0.601,62,0.663,63,0.708,64,0.601,65,0.708,66,0.601,67,1.307,68,0.601,69,0.601,70,0.621,71,0.708,72,1.123,73,0.621,74,0.708,75,0.564,76,0.708,77,0.621,78,1.396,79,0.601,80,1.087,81,0.601,82,0.601,83,0.601,84,0.708,85,0.601,86,1.393,87,0.601,88,0.601,89,0.642,90,0.708,91,0.708,92,0.008,93,0.005,94,6.571,95,5.472,96,1.682,97,1.052,98,1.492,99,1.914,100,3.109,101,3.315,102,2.668,103,0.179,104,0.428,105,3.901,106,1.052,107,3.981,108,3.315,109,3.981,110,3.599,111,3.315,112,1.99,113,3.59,114,3.315,115,0.954,116,2.485,117,2.178,118,1.757,119,5.255,120,3.772,121,0.785,122,1.827,123,3.114,124,3.315,125,2.68,126,3.088,127,2.456,128,3.415,129,2.736,130,3.298,131,1.816,132,3.203,133,0.985,134,0.623,135,2.668,136,2.736,137,0.878,138,2.314,139,2.374,140,1.938,141,1.895,142,1.471,143,1.931,144,2.314,145,2.02,146,2.314,147,2.02,148,2.898,149,2.02,150,3.831,151,2.02,152,1.698,153,2.747,154,2.02,155,2.263,156,2.314,157,3.259,158,1.827,159,2.02,160,2.527,161,2.02,162,2.02,163,0.87,164,1.253,165,1.253,166,1.253,167,1.682,168,2.02,169,0.685,170,2.02,171,1.915,172,1.307,173,1.601,174,2.02,175,1.827,176,2.02,177,2.02,178,1.567,179,2.314,180,1.75,181,3.669,182,2.02,183,2.02,184,2.02,185,2.02,186,2.02,187,2.02,188,2.02,189,2.02,190,2.02,191,2.02,192,2.02,193,2.02,194,2.02,195,2.02,196,2.02,197,2.02,198,2.02,199,2.02,200,2.02,201,4.559,202,1.714,203,3.315,204,2.088,205,3.599,206,1.914,207,1.682,208,0.732,209,2.668,210,0.783,211,2.314,212,2.314,213,1.195,214,1.471,215,1.682,216,2.485,217,1.895,218,1.682,219,1.682,220,1.777,221,1.682,222,2.02,223,1.567,224,1.567,225,1.567,226,0.902,227,1.567,228,1.682,229,2.02,230,1.567,231,1.987,232,2.668,233,1.682,234,3.315,235,1.682,236,1.682,237,1.201,238,1.682,239,1.682,240,1.682,241,1.682,242,1.471,243,1.682,244,1.827,245,2.668,246,1.682,247,1.682,248,1.682,249,2.02,250,1.143,251,1.895,252,4.096,253,2.332,254,3.203,255,3.203,256,1.601,257,2.668,258,1.895,259,3.203,260,3.772,261,3.298,262,1.379,263,4.377,264,2.485,265,2.668,266,2.332,267,2.668,268,3.203,269,2.953,270,3.203,271,3.203,272,3.669,273,3.203,274,4.53,275,1.895,276,4.684,277,4.096,278,2.332,279,3.203,280,2.897,281,2.897,282,3.203,283,1.987,284,4.096,285,3.203,286,5.658,287,2.897,288,6.028,289,2.791,290,3.203,291,2.668,292,3.203,293,1.43,294,2.485,295,4.53,296,2.332,297,4.096,298,4.53,299,2.668,300,2.332,301,2.202,302,2.202,303,2.332,304,2.485,305,2.088,306,1.666,307,2.02,308,1.253,309,1.317,310,2.02,311,1.195,312,1.682,313,1.682,314,1.895,315,1.682,316,1.682,317,1.095,318,1.682,319,1.682,320,1.567,321,1.682,322,1.736,323,3.315,324,1.682,325,2.668,326,2.332,327,1.682,328,1.682,329,3.203]],["title/components/AddTestChamberComponent.html",[0,0.348,41,1.057]],["body/components/AddTestChamberComponent.html",[0,0.42,1,0.673,2,1.187,3,0.069,4,0.06,5,0.793,6,0.793,7,0.793,8,0.793,9,0.044,12,1.552,15,0.793,16,2.189,17,2.119,18,1.854,20,1.076,22,1.076,24,0.263,25,0.013,26,0.327,27,0.069,28,0.233,31,0.793,32,1.227,33,1.187,34,0.793,35,1.689,36,0.793,37,0.826,38,1.227,39,0.673,40,1.689,41,1.435,42,1.787,43,1.227,44,0.696,45,0.793,46,0.673,47,1.227,48,0.652,49,1.227,50,0.673,51,0.696,52,1.827,53,1.046,54,0.652,55,0.793,56,0.673,57,0.767,58,0.793,59,0.673,60,0.793,61,0.673,62,0.743,63,0.793,64,0.673,65,0.793,66,0.673,67,1.405,68,0.673,69,0.673,70,0.696,71,0.793,72,1.227,73,0.696,74,0.793,75,0.631,76,0.793,77,0.696,78,1.501,79,0.673,80,1.187,81,0.673,82,0.673,83,0.673,84,0.793,85,0.673,86,1.317,87,0.673,88,0.673,89,1.36,90,0.793,91,0.793,92,0.008,93,0.006,97,1.149,99,2.059,103,0.201,104,0.468,106,0.841,108,3.565,110,3.871,111,3.565,112,2.14,113,3.746,114,3.565,115,1.042,116,2.715,117,2.317,120,4.013,121,0.858,124,2.915,125,2.851,126,3.321,127,2.612,128,3.564,129,2.943,130,3.509,131,1.769,133,1.076,134,0.583,136,2.943,137,0.934,139,2.388,140,1.949,141,2.071,142,1.275,143,1.689,152,1.806,153,2.65,155,2.075,157,3.513,160,2.506,163,0.974,164,1.403,165,1.403,166,1.403,169,0.767,171,2.021,172,0.743,173,1.131,180,1.112,202,1.507,203,3.565,204,2.281,205,2.045,206,1.683,207,1.884,208,0.82,209,2.915,210,0.877,213,1.338,214,1.647,215,1.884,216,2.715,217,2.071,218,1.884,219,1.884,220,1.911,221,1.884,222,2.262,223,1.755,224,1.755,225,1.755,226,1.01,227,1.755,228,1.884,229,2.262,230,1.755,231,2.171,232,1.884,233,2.915,234,3.565,235,1.884,236,1.884,237,1.312,238,1.884,239,1.884,240,1.884,241,1.884,242,1.647,243,1.884,244,2.045,245,2.915,246,1.884,247,1.884,248,1.884,250,1.28,251,2.071,260,2.915,262,1.507,263,4.013,264,2.715,265,2.915,266,2.548,267,2.915,269,3.141,294,3.738,296,2.548,299,2.915,300,2.548,301,2.406,302,2.406,303,3.509,304,2.715,305,2.281,306,1.821,307,2.262,308,1.403,309,1.474,310,2.262,311,1.338,312,1.884,313,1.884,314,2.071,315,1.884,316,1.884,317,1.226,318,1.884,319,1.884,320,1.755,321,1.884,322,1.897,323,3.565,324,1.884,325,2.915,326,2.548,327,1.884,328,1.884,330,4.991,331,5.359,332,5.359,333,2.045,334,3.712,335,4.281,336,3.5,337,2.262,338,3.117,339,2.851,340,3.5,341,2.591,342,2.591,343,2.591,344,2.943,345,2.591,346,2.262,347,2.262,348,2.262,349,2.262,350,2.262,351,1.403,352,1.555,353,1.897,354,2.045,355,2.591,356,0.974,357,2.262,358,1.755,359,2.591,360,1.755,361,1.338,362,1.403,363,3.5,364,3.738,365,3.5,366,2.715,367,2.715,368,3.312,369,3.5,370,2.915,371,3.165,372,2.715,373,3.5,374,2.262,375,4.323,376,2.409,377,5.511,378,5.511,379,4.819,380,4.819,381,4.819,382,2.409,383,1.868,384,2.915,385,3.5,386,3.165,387,3.165,388,1.621,389,2.071,390,2.915,391,3.5,392,1.884,393,2.262,394,2.262]],["title/classes/Anim.html",[28,0.365,395,2.753]],["body/classes/Anim.html",[0,0.512,3,0.12,4,0.105,9,0.076,16,1.213,17,1.555,20,1.213,22,1.213,24,0.239,25,0.013,26,0.571,27,0.12,28,0.603,37,0.727,53,1.385,75,1.1,92,0.009,93,0.009,97,1.294,98,1.958,103,0.35,104,0.783,106,0.911,115,1.555,118,1.529,121,0.966,131,1.897,133,1.606,134,0.636,142,1.744,143,2.186,180,1.253,372,4.051,382,3.242,395,4.051,396,3.058,397,3.284,398,4.553,399,5.354,400,5.865,401,5.296,402,5.637,403,3.379,404,4.349,405,4.516,406,5.982,407,4.516,408,4.516,409,4.516,410,4.516,411,4.723,412,4.516,413,2.051,414,3.566,415,3.284,416,4.723,417,3.566,418,3.284,419,3.566,420,4.723,421,3.566,422,3.566,423,3.566,424,3.566,425,3.566,426,3.566,427,3.566,428,3.566,429,3.566,430,3.566,431,3.566,432,3.566,433,3.566,434,3.566,435,4.723,436,4.723,437,3.566,438,3.566,439,4.723,440,4.723,441,3.566,442,3.566,443,3.566,444,3.566,445,3.058,446,3.566,447,3.284,448,3.566,449,2.711,450,4.542,451,3.566,452,3.566,453,1.826,454,3.566,455,3.566,456,3.566,457,3.566,458,3.566,459,3.566,460,3.566,461,3.566,462,3.566,463,3.566,464,3.566,465,3.566,466,3.566,467,3.566,468,3.566,469,3.566,470,3.566,471,3.566,472,3.566,473,3.566,474,3.566,475,3.566,476,3.566,477,3.566,478,3.566,479,3.566,480,2.871,481,3.058,482,3.566,483,3.058,484,2.137,485,2.711,486,2.711,487,3.566,488,2.711,489,2.711]],["title/components/AppComponent.html",[0,0.348,44,1.091]],["body/components/AppComponent.html",[0,0.517,1,0.96,2,1.543,3,0.098,4,0.086,5,1.13,6,1.13,7,1.13,8,1.13,9,0.062,12,1.799,15,1.13,16,2.265,17,2.193,18,1.57,20,1.399,22,1.399,24,0.263,25,0.013,26,0.467,27,0.098,28,0.332,31,1.13,32,1.595,33,1.543,34,1.13,35,2.008,36,1.13,37,0.841,38,1.595,39,0.96,40,2.008,41,0.96,42,1.481,43,1.595,44,1.762,45,1.13,46,0.96,47,1.595,48,0.929,49,1.595,50,0.96,51,0.991,52,1.13,53,0.647,54,0.929,55,1.13,56,0.96,57,1.093,58,1.13,59,0.96,60,1.13,61,0.96,62,1.058,63,1.13,64,0.96,65,1.13,66,0.96,67,1.731,68,0.96,69,0.96,70,0.991,71,1.13,72,1.595,73,0.991,74,1.13,75,0.899,76,1.13,77,0.991,78,1.849,79,0.96,80,1.543,81,0.96,82,0.96,83,0.96,84,1.13,85,0.96,86,1.622,87,0.96,88,0.96,89,1.024,90,1.13,91,1.13,92,0.008,93,0.008,97,1.493,98,1.976,103,0.404,104,0.608,106,1.054,115,1.355,118,2.221,121,1.115,127,3.105,131,1.893,133,1.622,134,0.657,137,1.171,139,2.51,140,2.049,142,1.57,143,2.008,152,2.264,153,2.188,155,2.833,164,1.999,165,1.999,171,1.764,217,1.907,306,2.366,308,1.999,447,2.684,449,2.215,490,3.223,491,2.574,492,6.039,493,5.211,494,6.039,495,6.039,496,5.273,497,6.039,498,5.19,499,2.983,500,5.211,501,5.211,502,3.691,503,6.039,504,4.77,505,5.211,506,3.789,507,5.211,508,3.691,509,1.849,510,3.691,511,5.211,512,3.691,513,2.031,514,3.691,515,4.549,516,3.691,517,3.789,518,3.691,519,3.691,520,3.691,521,3.691,522,3.223,523,3.691,524,3.691,525,3.691,526,3.691,527,3.691,528,3.691,529,3.691,530,3.691,531,3.691,532,3.691,533,3.691,534,3.691,535,1.676,536,3.691,537,1.676,538,2.366,539,2.821,540,3.223,541,2.215,542,3.691,543,2.215,544,2.914,545,2.101,546,2.347,547,3.691,548,3.691,549,2.684]],["title/modules/AppModule.html",[550,2.008,551,2.955]],["body/modules/AppModule.html",[3,0.118,4,0.104,9,0.075,17,1.158,24,0.339,25,0.013,26,0.563,27,0.118,28,0.4,44,2.197,54,1.914,56,1.977,59,1.977,61,1.977,64,1.977,70,2.042,73,2.042,75,1.853,92,0.009,93,0.009,202,2.228,445,3.018,484,2.109,551,6.212,552,1.944,553,3.374,554,3.89,555,3.89,556,3.89,557,3.89,558,5.15,559,4.327,560,3.769,561,2.833,562,4.456,563,3.769,564,2.929,565,3.792,566,5.929,567,5.176,568,4.456,569,5.929,570,3.518,571,3.24,572,2.302,573,4.456,574,2.929,575,3.018,576,4.456,577,4.456,578,3.518,579,5.929,580,4.456,581,3.518,582,3.89,583,3.89,584,3.89,585,3.89,586,4.456,587,3.374,588,3.063,589,4.456,590,3.21,591,3.518,592,3.24,593,3.89,594,3.24,595,3.89,596,5.929,597,3.21,598,5.929,599,5.929,600,3.89,601,3.24,602,3.89,603,5.929,604,2.536,605,4.456,606,4.456,607,3.89,608,4.456,609,4.456,610,4.456,611,4.456,612,4.456,613,3.518,614,4.456,615,4.456]],["title/modules/AppRoutingModule.html",[550,2.008,558,2.753]],["body/modules/AppRoutingModule.html",[0,0.666,3,0.128,4,0.112,9,0.081,12,1.624,24,0.327,25,0.013,26,0.61,27,0.128,28,0.434,42,1.337,48,1.215,54,1.572,56,1.624,57,1.429,59,1.624,61,1.624,62,1.383,64,1.624,75,1.522,89,1.339,92,0.009,93,0.009,100,2.493,139,2.267,163,1.814,172,1.383,450,4.692,552,2.106,558,4.231,564,2.384,574,3.086,582,4.214,583,4.214,584,4.214,585,4.214,593,4.214,594,3.509,595,4.214,600,4.214,601,3.509,602,4.214,616,4.826,617,3.268,618,3.81,619,4.231,620,3.81,621,3.972,622,3.942,623,5.327,624,4.826,625,5.313,626,3.268,627,6.048,628,6.048,629,4.826,630,7.326,631,4.826,632,4.826,633,2.896,634,6.247,635,3.268,636,4.826,637,6.928,638,4.826,639,4.826,640,3.268,641,4.826,642,4.826,643,6.928,644,6.928,645,6.928,646,4.214,647,4.826,648,4.826,649,4.826,650,3.068]],["title/guards/AuthGuard.html",[623,2.955,651,3.209]],["body/guards/AuthGuard.html",[3,0.148,4,0.13,9,0.094,24,0.323,25,0.013,26,0.705,27,0.148,28,0.501,37,0.832,92,0.01,93,0.01,97,1.598,103,0.432,106,1.042,115,1.779,121,1.193,129,3.347,131,1.668,133,1.838,134,0.586,142,1.45,163,2.096,169,1.651,453,2.255,491,2.755,572,2.881,587,3.173,588,2.881,623,4.976,627,6.741,652,5.576,653,4.869,654,4.869,655,6.741,656,5.576,657,5.403,658,6.844,659,7.721,660,5.846,661,7.721,662,5.576,663,4.707,664,3.545,665,2.572,666,5.576,667,3.173,668,2.881,669,2.255,670,5.576,671,5.576,672,5.576,673,5.576,674,5.576,675,5.576,676,5.576]],["title/components/BatteryPacksComponent.html",[0,0.348,46,1.057]],["body/components/BatteryPacksComponent.html",[0,0.597,1,1.27,2,1.865,3,0.129,4,0.113,5,1.495,6,1.495,7,1.495,8,1.495,9,0.082,10,3.308,12,2.156,15,1.495,16,2.311,17,2.237,18,1.811,20,1.691,22,1.691,24,0.195,25,0.012,26,0.617,27,0.129,28,0.439,29,4.578,30,4.578,31,1.495,32,1.927,33,1.865,34,1.495,35,2.253,36,1.495,37,0.765,38,1.927,39,1.27,40,2.253,41,1.27,42,1.63,43,1.927,44,1.311,45,1.495,46,1.913,47,1.927,48,1.229,49,1.927,50,1.27,51,1.311,52,1.495,53,0.856,54,1.229,55,1.495,56,1.27,57,1.446,58,1.495,59,1.27,60,1.495,61,1.27,62,1.4,63,1.495,64,1.27,65,1.495,66,1.27,67,1.997,68,1.27,69,1.27,70,1.311,71,1.495,72,1.927,73,1.311,74,1.495,75,1.19,76,1.495,77,1.311,78,2.133,79,1.27,80,1.865,81,1.27,82,1.27,83,1.27,84,1.495,85,1.27,86,1.871,87,1.27,88,1.27,89,1.355,90,1.495,91,1.495,92,0.009,93,0.009,633,3.779,635,3.308,677,3.856,678,6.083,679,5.497]],["title/modules/BatteryPacksModule.html",[550,2.008,680,2.955]],["body/modules/BatteryPacksModule.html",[1,2.084,3,0.144,4,0.126,9,0.092,11,3.958,12,2.113,13,3.958,24,0.325,25,0.013,26,0.688,27,0.144,28,0.489,46,2.084,66,2.084,85,2.084,92,0.01,93,0.01,413,2.472,484,2.576,552,2.376,553,3.837,560,4.286,561,3.461,563,4.286,564,3.331,574,3.331,575,3.687,633,3.267,635,4.566,680,6.163,681,4.753,682,4.753,683,4.753,684,5.43,685,3.958,686,5.444,687,5.323,688,6.684,689,5.887,690,4.902,691,3.958,692,3.958,693,5.887]],["title/modules/BatteryPacksRoutingModule.html",[550,2.008,684,2.753]],["body/modules/BatteryPacksRoutingModule.html",[0,0.667,1,1.806,3,0.151,4,0.133,9,0.096,11,4.156,12,2.109,13,4.156,18,1.486,24,0.325,25,0.013,26,0.723,27,0.151,28,0.514,46,1.806,66,1.806,67,1.638,85,1.806,86,1.535,92,0.01,93,0.01,163,2.148,172,1.638,552,2.494,564,2.824,574,3.432,617,3.871,621,4.417,622,4.26,625,4.95,633,3.43,635,4.705,650,3.634,684,4.705,685,4.156,688,6.798,689,6.066,690,5.051,691,4.156,692,4.156,693,6.066,694,4.156]],["title/components/BatteryTestComponent.html",[0,0.348,48,1.023]],["body/components/BatteryTestComponent.html",[0,0.471,1,0.813,2,1.369,3,0.083,4,0.073,5,0.957,6,0.957,7,0.957,8,0.957,9,0.053,12,2.036,15,0.957,16,2.232,17,2.161,18,1.429,20,1.241,22,1.241,24,0.272,25,0.013,26,0.395,27,0.083,28,0.281,31,0.957,32,1.415,33,1.369,34,0.957,35,1.859,36,0.957,37,0.668,38,1.415,39,0.813,40,1.859,41,0.813,42,1.72,43,1.415,44,0.84,45,0.957,46,0.813,47,1.415,48,1.529,49,1.415,50,0.813,51,0.84,52,1.984,53,1.135,54,0.787,55,0.957,56,0.813,57,0.926,58,0.957,59,0.813,60,0.957,61,0.813,62,0.896,63,0.957,64,0.813,65,0.957,66,0.813,67,1.576,68,0.813,69,0.813,70,0.84,71,0.957,72,1.415,73,0.84,74,0.957,75,0.762,76,0.957,77,0.84,78,1.683,79,0.813,80,1.369,81,1.946,82,0.813,83,0.813,84,0.957,85,0.813,86,1.476,87,0.813,88,0.813,89,0.867,90,0.957,91,0.957,92,0.007,93,0.007,97,1.325,98,1.799,99,2.308,103,0.242,104,0.54,106,0.987,112,2.399,115,1.201,117,2.55,118,2.056,121,0.989,128,3.8,131,1.85,133,0.84,134,0.601,139,2.203,140,1.799,142,1.579,143,2.077,152,1.512,153,1.94,160,2.721,163,1.175,169,0.926,171,1.861,173,2.399,213,1.615,220,2.142,226,1.218,250,1.545,251,2.387,262,1.737,305,2.63,306,2.497,338,3.495,339,3.137,351,1.693,352,1.877,362,1.693,367,2.117,382,2.961,383,1.565,388,1.868,413,1.42,485,1.877,486,1.877,488,1.877,489,1.877,509,1.415,517,3.36,537,2.099,538,1.42,539,1.693,543,1.877,592,2.273,619,5.203,695,5.203,696,2.73,697,5.498,698,4.622,699,4.8,700,5.498,701,4.8,702,5.498,703,4.795,704,6.074,705,2.468,706,4.622,707,3.127,708,3.127,709,3.127,710,3.127,711,1.055,712,2.938,713,3.127,714,3.127,715,2.399,716,3.127,717,3.127,718,3.127,719,2.273,720,4.622,721,3.127,722,2.117,723,3.127,724,2.73,725,3.127,726,4.622,727,4.035,728,1.988,729,2.468,730,3.127,731,4.035,732,4.795,733,4.622,734,6.481,735,4.622,736,2.017,737,4.622,738,4.035,739,4.035,740,4.035,741,4.035,742,4.622,743,4.622,744,4.622,745,5.303,746,2.63,747,2.73,748,2.117,749,2.117,750,2.273,751,1.877,752,3.13,753,1.693,754,1.693,755,3.127,756,3.127,757,3.127,758,3.127,759,3.127,760,2.273,761,2.117,762,1.988]],["title/modules/BatteryTestModule.html",[550,2.008,763,2.955]],["body/modules/BatteryTestModule.html",[3,0.132,4,0.115,9,0.084,12,1.292,24,0.334,25,0.013,26,0.628,27,0.132,28,0.447,42,1.503,48,1.972,51,2.104,53,1.115,77,2.104,79,2.037,81,1.655,82,2.037,92,0.009,93,0.009,163,1.868,256,2.169,413,2.257,484,2.352,552,2.169,553,3.623,559,4.459,560,4.048,561,3.16,563,4.048,564,3.145,565,2.828,571,3.614,574,3.145,575,3.366,590,3.447,604,2.828,618,6.046,619,4.312,620,5.027,621,4.048,685,3.614,687,5.027,763,6.197,764,4.34,765,4.34,766,4.34,767,5.306,768,5.697,769,4.97,770,6.367,771,3.924,772,3.366,773,4.312,774,4.312,775,6.134,776,3.924,777,3.924,778,5.027,779,5.027,780,3.614]],["title/modules/BatteryTestRoutingModule.html",[550,2.008,767,2.753]],["body/modules/BatteryTestRoutingModule.html",[0,0.68,3,0.149,4,0.13,9,0.094,18,1.459,24,0.323,25,0.013,26,0.709,27,0.149,28,0.504,42,1.589,48,1.729,51,1.845,53,1.203,79,1.786,81,1.786,82,1.93,86,1.507,92,0.01,93,0.01,163,2.109,172,1.608,552,2.448,564,2.772,574,3.393,617,3.8,618,6.108,619,4.652,620,5.423,621,4.367,622,4.225,625,5.046,628,5.997,650,3.567,685,4.079,694,4.079,767,4.652,773,4.652,774,4.652,775,5.997,778,5.423,781,6.869]],["title/interfaces/BreadCrumbs.html",[782,0.299,783,2.955]],["body/interfaces/BreadCrumbs.html",[0,0.624,3,0.126,4,0.111,9,0.08,16,1.277,17,1.237,19,3.935,20,1.277,22,1.277,24,0.31,25,0.013,26,0.601,27,0.126,28,0.428,33,1.409,37,0.836,54,1.197,62,1.363,92,0.009,93,0.009,97,1.363,98,2.025,99,2.598,103,0.368,104,0.723,106,1.179,112,2.701,117,1.997,118,1.61,121,1.018,127,2.251,128,2.576,134,0.589,137,1.233,143,1.895,153,2.598,155,2.586,160,1.997,163,1.788,164,2.576,165,2.576,169,1.409,171,2.329,180,1.32,202,1.788,226,1.854,366,3.222,384,3.459,480,3.024,509,2.106,626,3.222,782,0.349,783,4.5,784,1.237,785,3.756,786,5.432,787,4.887,788,6.189,789,3.222,790,4.153,791,4.153,792,3.024,793,3.756,794,4.153,795,5.404,796,4.153,797,4.153,798,4.153,799,4.153,800,4.153,801,4.153,802,4.153,803,4.153,804,4.153,805,4.153,806,4.153,807,4.153,808,4.153,809,3.222,810,4.153,811,4.153,812,4.153,813,4.153,814,4.153,815,4.153,816,5.404,817,4.153,818,6.007,819,4.153,820,4.153,821,4.153,822,4.153,823,3.222,824,4.153,825,4.153,826,4.153,827,4.153,828,4.153,829,4.153,830,4.153,831,4.153,832,4.153,833,3.756,834,5.404,835,2.457,836,4.153,837,4.153,838,4.153,839,4.153,840,4.153,841,4.153,842,4.153,843,2.457,844,4.153,845,3.756,846,4.153,847,4.153,848,3.756,849,4.153,850,2.576,851,4.153,852,5.404,853,4.153,854,4.153,855,3.756]],["title/interfaces/Cell.html",[105,1.924,782,0.299]],["body/interfaces/Cell.html",[3,0.121,4,0.106,9,0.077,24,0.182,25,0.013,27,0.159,28,0.409,92,0.009,93,0.009,97,1.306,103,0.353,104,0.702,105,3.188,106,1.312,113,4.077,121,0.975,134,0.73,137,1.456,148,2.896,166,2.467,204,4.077,208,2.357,210,2.426,276,4.736,353,3.391,398,4.698,711,1.946,782,0.335,784,1.184,856,3.597,857,6.504,858,5.881,859,6.504,860,6.504,861,5.881,862,6.504,863,6.504,864,6.504,865,6.504,866,6.504,867,6.256,868,5.253,869,3.977,870,3.312,871,3.977,872,3.977]],["title/classes/CellClass.html",[28,0.365,148,2.584]],["body/classes/CellClass.html",[3,0.112,4,0.098,9,0.071,24,0.169,25,0.013,27,0.151,28,0.379,37,0.512,92,0.008,93,0.008,97,1.637,103,0.326,104,0.667,105,3.066,106,1.296,113,2.398,121,1.222,131,2,133,1.132,134,0.719,137,1.456,148,3.631,166,2.282,204,2.398,208,2.297,210,1.427,276,4.757,353,2.703,396,2.854,398,4.901,711,1.951,782,0.31,856,3.327,857,6.533,858,5.907,859,6.533,860,6.533,861,5.907,862,6.533,863,6.533,864,6.533,865,6.533,866,6.533,867,3.68,869,3.68,870,3.064,871,3.68,872,3.68,873,3.68,874,4.214,875,6.446,876,4.214,877,4.214,878,4.214,879,4.214,880,4.214,881,4.214,882,4.214,883,4.214,884,4.214,885,4.214,886,4.214,887,4.214,888,4.214]],["title/injectables/CellService.html",[123,2.439,665,1.528]],["body/injectables/CellService.html",[3,0.192,4,0.098,9,0.071,24,0.306,25,0.013,26,0.532,27,0.111,28,0.378,37,0.929,53,1.215,92,0.008,93,0.008,100,2.172,103,0.326,105,3.774,106,1.165,115,1.482,121,0.9,123,3.422,131,1.896,133,2.054,134,0.666,137,1.335,141,3.342,142,1.988,169,1.245,171,2.19,175,5.477,206,1.765,226,2.222,237,1.376,269,3.245,303,3.625,453,1.7,491,2.077,509,1.287,572,2.172,587,2.393,588,2.172,597,2.277,664,2.673,665,2.143,667,2.393,668,2.172,669,3.189,850,2.277,875,3.32,889,2.393,890,3.671,891,5.702,892,3.862,893,5.702,894,5.702,895,5.702,896,5.702,897,2.673,898,3.948,899,4.205,900,3.245,901,5.702,902,4.205,903,3.422,904,4.164,905,4.205,906,5.702,907,4.205,908,5.702,909,4.205,910,3.926,911,4.205,912,5.702,913,4.205,914,5.702,915,4.205,916,1.93,917,2.848,918,4.698,919,3.422,920,2.848,921,2.848,922,2.848,923,3.671,924,5.064,925,5.702,926,4.205,927,2.848,928,2.848,929,5.064,930,4.205,931,2.848,932,3.32,933,3.671,934,1.7,935,1.58,936,5.491,937,4.205,938,4.205,939,4.205,940,6.937,941,5.702,942,4.205,943,4.205,944,3.422,945,2.848,946,2.277,947,2.077,948,2.524,949,2.524,950,2.524,951,2.524,952,2.524,953,2.524]],["title/interfaces/CellTemplate.html",[150,2.753,782,0.299]],["body/interfaces/CellTemplate.html",[3,0.144,4,0.126,9,0.091,25,0.013,27,0.144,92,0.01,93,0.01,103,0.42,104,0.785,106,1.29,134,0.728,137,1.448,150,4.554,208,2.419,214,4.648,276,4.86,711,1.94,782,0.398,784,1.409,858,6.035,861,6.035,954,4.732,955,7.644,956,7.644,957,7.644,958,7.644,959,7.644,960,7.644,961,4.732,962,5.419]],["title/components/CellsComponent.html",[0,0.348,50,1.057]],["body/components/CellsComponent.html",[0,0.452,1,0.758,2,1.3,3,0.077,4,0.068,5,0.893,6,0.893,7,0.893,8,0.893,9,0.049,12,2.115,15,0.893,16,2.217,17,2.146,18,1.636,20,1.178,22,1.178,24,0.252,25,0.013,26,0.369,27,0.077,28,0.262,31,0.893,32,1.343,33,1.3,34,0.893,35,1.796,36,0.893,37,0.641,38,1.343,39,0.758,40,1.796,41,0.758,42,1.468,43,1.343,44,0.783,45,0.893,46,0.758,47,1.343,48,0.734,49,1.343,50,1.526,51,0.783,52,0.893,53,0.924,54,0.734,55,0.893,56,0.758,57,0.864,58,0.893,59,0.758,60,0.893,61,0.758,62,0.836,63,0.893,64,0.758,65,0.893,66,0.758,67,1.512,68,0.758,69,0.758,70,0.783,71,0.893,72,1.343,73,0.783,74,0.893,75,0.711,76,0.893,77,0.783,78,1.615,79,0.758,80,1.3,81,1.371,82,0.758,83,0.758,84,0.893,85,0.758,86,1.417,87,0.758,88,0.758,89,0.809,90,0.893,91,0.893,92,0.009,93,0.007,97,1.258,98,1.726,99,2.215,100,4.11,101,3.836,102,3.191,103,0.409,104,0.512,105,3.482,106,0.444,112,2.302,115,1.141,117,2.464,118,1.987,121,0.939,123,3.522,128,3.58,131,1.533,133,0.783,134,0.452,135,3.836,139,1.592,140,1.3,142,1.141,143,1.796,152,1.436,153,1.843,160,2.215,163,1.097,167,2.121,169,0.864,171,1.786,172,0.836,173,1.273,180,0.809,202,1.097,213,1.507,220,2.577,237,2.164,242,2.79,250,1.441,252,3.465,261,2.79,273,5.124,278,3.731,283,3.178,306,2.665,314,2.267,317,1.381,326,2.79,344,2.634,361,1.507,362,1.579,367,2.972,371,3.465,382,2.994,413,1.325,481,2.972,485,1.751,486,1.751,488,1.751,489,1.751,537,2.396,538,3.116,539,3.178,541,3.166,545,2.498,546,1.855,549,3.191,732,3.465,746,4.017,748,1.976,751,2.634,760,3.191,761,1.976,762,2.79,843,1.507,845,2.303,963,2.547,964,5.276,965,2.917,966,4.389,967,2.917,968,2.917,969,2.917,970,2.917,971,2.547,972,2.917,973,4.389,974,3.975,975,4.389,976,4.389,977,4.389,978,4.389,979,5.869,980,4.389,981,2.79,982,4.389,983,5.99,984,4.389,985,3.832,986,3.975,987,5.124,988,4.389,989,4.389,990,3.832,991,3.832,992,2.634,993,3.465,994,4.389,995,4.389,996,4.389,997,3.832,998,4.389,999,3.832,1000,4.389,1001,4.389,1002,3.832,1003,4.389,1004,3.832,1005,4.389,1006,4.389,1007,3.191,1008,3.832,1009,4.389,1010,2.376,1011,4.389,1012,4.389,1013,3.573,1014,2.303,1015,2.547,1016,3.731,1017,2.121,1018,2.303,1019,2.303,1020,2.79,1021,2.121,1022,1.915,1023,2.547,1024,3.581,1025,2.547,1026,2.547,1027,3.832,1028,3.832,1029,3.465,1030,3.832,1031,2.303,1032,2.547,1033,2.547,1034,2.972,1035,2.972,1036,2.547,1037,1.855,1038,2.121,1039,3.777,1040,2.547,1041,2.547,1042,2.547,1043,2.547,1044,2.547,1045,2.725,1046,2.121,1047,2.547,1048,2.547,1049,2.303,1050,3.465,1051,2.547,1052,2.547,1053,1.66,1054,2.547,1055,2.547,1056,1.976,1057,2.547,1058,2.547,1059,2.547,1060,1.579,1061,2.303,1062,2.303,1063,2.303,1064,2.547,1065,2.303,1066,1.855,1067,2.303,1068,2.547,1069,2.547,1070,2.547,1071,3.465,1072,2.547,1073,2.121,1074,2.303,1075,2.972,1076,2.547,1077,2.547,1078,2.547]],["title/modules/CellsModule.html",[550,2.008,1079,2.955]],["body/modules/CellsModule.html",[3,0.142,4,0.124,9,0.09,24,0.33,25,0.013,26,0.675,27,0.142,28,0.48,39,2.075,50,2.075,68,2.075,87,2.075,92,0.01,93,0.01,95,3.883,100,2.759,256,2.331,484,2.527,552,2.331,553,3.792,559,4.541,560,4.236,561,3.395,563,4.236,564,3.291,565,3.039,571,3.883,574,3.291,575,3.617,590,3.608,604,3.039,768,5.802,779,5.26,780,3.883,1079,6.212,1080,4.663,1081,4.663,1082,4.663,1083,5.404,1084,5.34,1085,4.663,1086,3.883,1087,6.341,1088,4.663,1089,3.883,1090,4.663,1091,4.663]],["title/modules/CellsRoutingModule.html",[550,2.008,1083,2.753]],["body/modules/CellsRoutingModule.html",[0,0.672,3,0.155,4,0.136,9,0.098,18,1.517,24,0.326,25,0.013,26,0.738,27,0.155,28,0.524,39,1.829,50,1.829,68,1.829,86,1.567,87,1.829,92,0.01,93,0.01,95,4.242,163,2.193,172,1.672,552,2.546,564,2.882,574,3.475,617,3.951,621,4.472,622,4.298,625,4.984,650,3.709,694,4.242,1083,4.764,1085,5.094,1086,4.242,1087,6.594,1088,5.094,1089,4.242,1090,5.094,1091,5.094,1092,5.834,1093,5.834]],["title/interfaces/Channel.html",[388,1.643,782,0.299]],["body/interfaces/Channel.html",[3,0.114,4,0.1,9,0.072,24,0.171,25,0.013,27,0.212,92,0.009,93,0.009,103,0.332,104,0.674,106,1.145,134,0.625,137,1.354,208,1.827,210,1.45,289,1.732,293,1.669,356,1.61,383,2.211,388,2.641,509,2.392,513,3.045,711,1.953,715,1.869,736,3.492,782,0.588,784,1.114,916,1.45,934,1.732,935,1.61,1094,2.116,1095,3.558,1096,3.884,1097,2.826,1098,3.77,1099,3.454,1100,3.787,1101,3.953,1102,3.787,1103,3.953,1104,2.023,1105,2.116,1106,2.852,1107,2.983,1108,2.852,1109,2.213,1110,2.733,1111,1.945,1112,2.983,1113,2.213,1114,2.213,1115,2.213,1116,2.213,1117,2.213,1118,2.213,1119,2.213,1120,2.733,1121,1.669,1122,1.554,1123,2.213,1124,2.213,1125,1.945,1126,2.116,1127,2.116,1128,2.116,1129,2.116,1130,3.314,1131,2.213,1132,2.213,1133,2.213,1134,2.622,1135,2.116,1136,2.116,1137,2.116,1138,2.213,1139,2.213,1140,2.213,1141,2.213,1142,2.027,1143,1.945]],["title/interfaces/ChannelFields.html",[782,0.299,1144,2.201]],["body/interfaces/ChannelFields.html",[3,0.09,4,0.079,9,0.097,24,0.137,25,0.013,27,0.196,37,0.769,92,0.007,93,0.007,103,0.264,104,0.575,134,0.722,137,1.184,140,2.476,152,2.531,155,2.871,172,0.978,180,2.188,202,3.071,256,3.053,258,3.271,262,3.113,275,4.135,322,3.311,376,2.763,383,1.155,389,1.763,403,2.736,499,1.686,535,3.275,711,1.88,782,0.53,784,0.887,835,3.614,910,3.428,916,1.155,1010,3.905,1022,3.222,1097,2.38,1104,2.587,1121,2.467,1122,2.538,1144,3.13,1145,1.848,1146,3.8,1147,3.8,1148,3.8,1149,3.8,1150,3.8,1151,2.545,1152,2.048,1153,3.886,1154,4.484,1155,4.713,1156,3.814,1157,3.29,1158,2.804,1159,3.29,1160,3.726,1161,2.987,1162,3.821,1163,1.942,1164,3.428,1165,2.804,1166,1.942,1167,2.996,1168,2.804,1169,2.667,1170,2.804,1171,2.667,1172,3.603,1173,2.804,1174,3.29,1175,1.942,1176,2.048]],["title/interfaces/Charts.html",[772,2.753,782,0.299]],["body/interfaces/Charts.html",[0,0.297,3,0.057,4,0.05,9,0.058,16,0.579,17,0.56,20,0.579,22,0.579,24,0.276,25,0.013,26,0.272,27,0.057,28,0.194,37,0.8,42,1.248,53,0.377,67,0.617,80,1.288,82,0.56,92,0.005,93,0.005,97,0.617,98,1.134,99,1.455,103,0.167,104,0.405,105,2.358,106,0.888,112,0.94,117,0.904,121,0.461,126,1.459,127,1.64,128,2.354,129,1.293,130,2.203,134,0.468,137,1.079,143,1.061,152,1.134,153,1.825,155,0.81,160,2.292,163,0.81,164,1.166,165,1.166,169,0.638,171,1.974,172,1.886,173,1.512,178,1.459,180,0.598,202,2.686,213,1.113,216,1.459,217,1.113,220,0.84,223,1.459,224,1.459,225,1.459,226,0.84,237,2.339,250,1.712,253,1.37,261,1.37,287,1.701,289,1.401,293,1.694,303,2.203,317,1.02,334,2.785,338,1.37,339,1.79,351,1.166,352,1.293,358,4.152,360,1.459,361,1.113,362,1.166,370,2.52,375,3.167,376,0.94,382,1.897,388,1.401,404,1.566,413,0.978,481,1.459,509,1.331,517,1.566,535,1.975,565,1.226,590,1.166,604,1.226,625,1.37,669,0.871,695,1.459,711,1.332,712,2.764,719,1.566,722,2.944,728,1.37,736,1.512,771,1.701,772,4.574,773,1.459,774,1.459,782,0.158,784,0.56,786,3.933,843,3.013,992,2.609,1046,3.969,1095,2.058,1100,1.64,1102,1.64,1125,1.975,1130,2.479,1134,1.975,1136,1.064,1137,1.064,1143,2.479,1177,1.566,1178,6.581,1179,6.581,1180,7.146,1181,1.566,1182,2.736,1183,2.154,1184,1.881,1185,2.154,1186,1.881,1187,3.466,1188,2.154,1189,1.701,1190,2.154,1191,2.154,1192,2.154,1193,1.701,1194,1.701,1195,4.348,1196,2.154,1197,2.154,1198,2.154,1199,2.154,1200,1.566,1201,1.459,1202,2.154,1203,2.154,1204,2.154,1205,1.701,1206,1.701,1207,1.566,1208,1.881,1209,1.881,1210,2.154,1211,2.154,1212,2.154,1213,2.154,1214,2.154,1215,2.154,1216,1.701,1217,1.701,1218,1.701,1219,2.154,1220,3.466,1221,4.982,1222,4.348,1223,2.154,1224,3.466,1225,2.154,1226,2.154,1227,3.466,1228,2.154,1229,2.154,1230,3.466,1231,2.154,1232,1.701,1233,2.154,1234,2.154,1235,2.154,1236,3.026,1237,5.092,1238,6.581,1239,3.466,1240,2.154,1241,2.154,1242,2.154,1243,2.154,1244,2.154,1245,2.154,1246,2.154,1247,5.832,1248,2.154,1249,2.154,1250,3.466,1251,5.459,1252,5.459,1253,5.459,1254,5.459,1255,5.459,1256,5.459,1257,6.755,1258,4.574,1259,6.755,1260,5.459,1261,5.459,1262,5.459,1263,2.154,1264,2.154,1265,3.466,1266,2.154,1267,2.154,1268,3.466,1269,2.154,1270,2.154,1271,3.466,1272,4.348,1273,2.154,1274,2.154,1275,2.154,1276,2.154,1277,2.154,1278,3.466,1279,4.348,1280,2.154,1281,2.154,1282,2.154,1283,2.154,1284,2.154,1285,3.466,1286,2.154,1287,2.154,1288,2.154,1289,2.154,1290,3.466,1291,2.154,1292,2.154,1293,2.154,1294,2.154,1295,3.466,1296,1.881,1297,2.154,1298,2.154,1299,2.154,1300,2.154,1301,2.154,1302,2.154,1303,2.154,1304,2.154,1305,2.154,1306,2.154,1307,2.154,1308,2.154,1309,2.154,1310,2.154,1311,2.154,1312,3.466,1313,2.154,1314,2.154,1315,2.154,1316,3.466,1317,2.154,1318,2.154,1319,2.154,1320,2.154,1321,2.154,1322,2.154,1323,3.466,1324,2.154,1325,2.154,1326,2.154,1327,6.581,1328,2.154,1329,2.154,1330,2.154,1331,2.154,1332,2.154,1333,2.154,1334,2.154,1335,2.154,1336,2.154,1337,2.154,1338,1.881,1339,2.154,1340,3.466,1341,2.154,1342,3.466,1343,4.982,1344,2.154,1345,2.154,1346,2.154,1347,3.466,1348,3.466,1349,3.026,1350,1.881,1351,1.881,1352,2.736,1353,2.52,1354,2.736,1355,2.736,1356,1.701,1357,2.154,1358,2.736,1359,3.026,1360,2.154,1361,2.736,1362,2.736,1363,2.736,1364,2.736,1365,2.154,1366,3.466,1367,2.154,1368,2.154,1369,2.154,1370,2.736,1371,2.736,1372,1.881,1373,3.796,1374,1.881,1375,2.154,1376,1.881,1377,3.026,1378,1.881,1379,2.154,1380,2.154,1381,2.154,1382,2.154,1383,3.796,1384,2.154,1385,2.154,1386,2.154,1387,2.154,1388,2.154,1389,2.154,1390,1.566,1391,2.154,1392,2.154,1393,1.37,1394,2.154,1395,2.154,1396,2.154,1397,1.881,1398,2.154,1399,2.154,1400,2.154,1401,2.154,1402,3.466,1403,2.154,1404,2.154,1405,3.466,1406,2.154,1407,2.154,1408,2.154,1409,1.881]],["title/injectables/ComponentStoreService.html",[127,1.924,665,1.528]],["body/injectables/ComponentStoreService.html",[3,0.144,4,0.127,9,0.092,24,0.293,25,0.013,26,0.689,27,0.144,28,0.49,37,0.663,53,1.182,92,0.01,93,0.01,103,0.422,104,0.788,106,0.83,115,1.754,121,1.568,127,3.194,131,1.866,133,1.464,134,0.578,139,2.448,140,1.999,142,1.417,143,1.669,169,1.615,171,2.482,172,1.562,217,3.787,220,2.124,253,4.29,398,4.565,491,2.693,498,5.506,506,4.907,522,4.76,540,5.892,665,2.537,668,2.816,748,3.692,889,3.102,1393,3.466,1410,6.874,1411,4.76,1412,7.33,1413,6.749,1414,6.749,1415,6.749,1416,5.452,1417,6.749,1418,7.33,1419,5.452,1420,5.452,1421,5.452,1422,5.452,1423,5.452,1424,6.749,1425,5.452,1426,4.76,1427,5.452,1428,5.452]],["title/components/DashboardComponent.html",[0,0.348,54,1.023]],["body/components/DashboardComponent.html",[0,0.537,1,0.752,2,1.292,3,0.077,4,0.067,5,0.886,6,0.886,7,0.886,8,0.886,9,0.049,12,1.63,15,0.886,16,2.215,17,2.144,18,1.365,19,4.668,20,1.171,22,1.171,24,0.264,25,0.013,26,0.366,27,0.077,28,0.26,31,0.886,32,1.335,33,1.555,34,0.886,35,1.789,36,0.886,37,0.638,38,1.335,39,0.752,40,1.789,41,0.752,42,1.342,43,1.335,44,0.777,45,0.886,46,0.752,47,1.335,48,0.728,49,1.335,50,0.752,51,0.777,52,0.886,53,0.507,54,1.471,55,0.886,56,0.752,57,0.857,58,0.886,59,0.752,60,0.886,61,0.752,62,2.018,63,0.886,64,0.752,65,0.886,66,0.752,67,1.505,68,0.752,69,0.752,70,0.777,71,0.886,72,1.335,73,0.777,74,1.607,75,0.705,76,0.886,77,0.777,78,1.607,79,0.752,80,1.292,81,0.752,82,0.752,83,0.752,84,0.886,85,0.752,86,1.41,87,0.752,88,0.752,89,0.803,90,0.886,91,0.886,92,0.006,93,0.006,97,1.25,98,1.718,99,2.204,103,0.224,104,0.509,106,0.441,112,1.904,115,1.134,117,2.454,118,1.979,121,0.933,127,2.485,128,3.396,131,1.817,133,0.777,134,0.586,139,2.392,140,1.952,142,1.52,143,2.018,152,0.947,153,1.832,155,2.709,160,1.832,163,1.088,164,1.567,165,1.567,169,0.857,171,1.778,180,0.803,202,1.64,220,1.7,226,1.128,231,1.567,237,1.913,257,2.104,283,2.362,289,1.764,293,1.7,306,2.655,311,2.712,314,2.712,317,1.37,366,1.96,375,2.773,384,2.104,449,2.618,480,1.84,496,2.527,506,3.172,509,1.789,537,1.981,538,2.385,539,3.396,543,2.618,545,1.647,546,1.84,591,2.285,626,2.954,711,0.996,746,1.647,749,1.96,750,2.104,751,1.737,752,3.959,753,1.567,754,2.362,782,0.213,783,4.25,785,2.285,789,3.556,790,2.527,791,2.527,792,2.773,793,2.285,794,2.527,795,3.809,796,2.527,797,2.527,798,2.527,799,3.809,800,4.584,801,2.527,802,2.527,803,2.527,804,2.527,805,2.527,806,2.527,807,2.527,808,2.527,809,2.954,810,2.527,811,2.527,812,2.527,813,2.527,814,2.527,815,2.527,816,3.809,817,5.104,818,4.584,819,5.104,820,2.527,821,2.527,822,2.527,823,1.96,824,2.527,825,2.527,826,2.527,827,2.527,828,2.527,829,2.527,830,2.527,831,2.527,832,2.527,833,2.285,834,3.809,835,1.495,836,2.527,837,2.527,838,2.527,839,2.527,840,2.527,841,2.527,842,2.527,843,1.495,844,2.527,845,2.285,846,2.527,847,2.527,848,4.145,849,2.527,850,1.567,851,2.527,852,3.809,853,2.527,854,2.527,855,2.285,1022,2.291,1024,2.483,1039,3.508,1045,3.24,1053,3.894,1060,3.705,1066,1.84,1071,2.285,1073,3.172,1429,4.362,1430,5.845,1431,5.845,1432,4.362,1433,2.894,1434,4.362,1435,2.894,1436,2.894,1437,2.894,1438,2.894,1439,2.894,1440,2.894,1441,2.894,1442,2.894,1443,2.894,1444,2.894,1445,3.809,1446,4.362,1447,6.292,1448,4.362,1449,4.362,1450,4.362,1451,2.894,1452,3.809,1453,4.362,1454,6.842,1455,4.362,1456,3.809,1457,4.362,1458,2.894,1459,2.894,1460,3.959,1461,4.247,1462,4.362,1463,2.773,1464,4.145,1465,4.145,1466,2.894,1467,2.894,1468,2.894,1469,3.172,1470,2.894,1471,2.894,1472,2.894,1473,2.894,1474,2.527,1475,2.894,1476,2.894,1477,2.894,1478,2.894,1479,2.894,1480,2.894,1481,2.894,1482,2.894,1483,2.894,1484,3.809,1485,2.894,1486,3.172,1487,2.894,1488,2.894,1489,4.362,1490,2.894,1491,2.894,1492,2.894,1493,2.894,1494,2.527,1495,2.894,1496,2.894,1497,2.894,1498,2.894,1499,2.894]],["title/components/DeviceDataComponent.html",[0,0.348,56,1.057]],["body/components/DeviceDataComponent.html",[0,0.555,1,1.097,2,1.693,3,0.112,4,0.098,5,1.292,6,1.292,7,1.292,8,1.292,9,0.071,12,1.887,15,1.292,16,2.288,17,2.215,18,1.685,20,1.535,22,1.535,24,0.259,25,0.013,26,0.533,27,0.112,28,0.379,31,1.292,32,1.749,33,1.693,34,1.292,35,2.127,36,1.292,37,0.788,38,1.749,39,1.097,40,2.127,41,1.097,42,1.553,43,1.749,44,1.133,45,1.292,46,1.097,47,1.749,48,1.062,49,1.749,50,1.097,51,1.133,52,1.292,53,0.739,54,1.062,55,1.292,56,1.806,57,2.363,58,1.292,59,1.097,60,1.292,61,1.097,62,1.209,63,1.292,64,1.097,65,1.292,66,1.097,67,1.858,68,1.097,69,1.097,70,1.133,71,1.292,72,1.749,73,1.133,74,1.292,75,1.028,76,1.292,77,1.133,78,1.984,79,1.097,80,1.693,81,1.097,82,1.097,83,1.097,84,1.292,85,1.097,86,1.74,87,1.097,88,1.097,89,1.17,90,1.292,91,1.292,92,0.008,93,0.008,97,1.638,98,2.121,99,2.721,103,0.327,104,0.667,106,0.987,112,2.829,115,1.486,117,2.917,118,2.352,121,0.903,129,3.43,130,4.417,131,1.769,133,1.133,134,0.555,137,0.967,139,1.531,140,1.25,142,1.486,143,2.127,160,2.721,163,1.586,169,1.25,172,1.209,173,1.841,250,2.084,361,2.18,362,2.285,453,1.706,594,5.442,843,3.589,1500,6.535,1501,3.684,1502,6.482,1503,5.715,1504,6.482,1505,4.219,1506,5.715,1507,4.219,1508,4.219,1509,4.219,1510,4.219,1511,4.219,1512,4.219,1513,4.219,1514,4.99]],["title/interfaces/DeviceDataLight.html",[782,0.299,792,2.584]],["body/interfaces/DeviceDataLight.html",[3,0.148,4,0.13,9,0.094,25,0.013,27,0.148,37,0.9,92,0.01,93,0.01,103,0.432,104,0.799,134,0.72,137,1.307,262,2.783,711,1.91,782,0.41,784,1.45,792,4.351,1515,4.869,1516,7.404,1517,7.404,1518,7.404,1519,7.404,1520,7.404,1521,7.404,1522,7.404,1523,7.404,1524,7.404,1525,6.844,1526,5.975,1527,6.844,1528,6.844,1529,6.844,1530,6.844,1531,5.576,1532,5.576,1533,5.576,1534,5.576,1535,5.576,1536,5.576,1537,5.576,1538,5.576,1539,5.576,1540,5.576,1541,5.576]],["title/injectables/DeviceDataService.html",[665,1.528,789,2.753]],["body/injectables/DeviceDataService.html",[3,0.147,4,0.129,9,0.093,24,0.316,25,0.013,26,0.7,27,0.147,28,0.497,37,0.828,53,0.969,92,0.01,93,0.01,103,0.429,106,1.037,115,1.771,121,1.184,131,1.798,133,1.829,134,0.584,142,1.771,169,1.639,171,2.498,226,2.654,237,1.811,453,2.237,491,2.734,509,1.694,597,2.997,665,2.56,667,3.149,668,2.859,669,2.754,789,4.613,792,3.518,793,4.369,850,2.997,889,3.149,892,4.613,897,3.518,898,4.199,900,3.149,903,3.321,904,4.429,917,3.748,919,3.321,944,3.321,947,2.734,948,3.321,949,3.321,950,3.321,951,3.321,952,3.321,953,3.321,1542,6.723,1543,4.369,1544,7.7,1545,4.832,1546,4.832,1547,4.832,1548,5.534,1549,5.534,1550,4.369,1551,4.832,1552,5.534,1553,4.832,1554,4.832,1555,4.832]],["title/components/DevicesComponent.html",[0,0.348,59,1.057]],["body/components/DevicesComponent.html",[0,0.602,1,1.292,2,1.886,3,0.132,4,0.115,5,1.521,6,1.521,7,1.521,8,1.521,9,0.084,12,1.991,15,1.521,16,2.313,17,2.24,18,1.826,20,1.71,22,1.71,24,0.199,25,0.012,26,0.628,27,0.132,28,0.447,31,1.521,32,1.949,33,1.886,34,1.521,35,2.268,36,1.521,37,0.774,38,1.949,39,1.292,40,2.268,41,1.292,42,1.639,43,1.949,44,1.335,45,1.521,46,1.292,47,1.949,48,1.251,49,1.949,50,1.292,51,1.335,52,1.521,53,0.871,54,1.251,55,1.521,56,1.292,57,1.472,58,1.521,59,1.926,60,1.521,61,1.292,62,2.013,63,1.521,64,1.292,65,1.521,66,1.292,67,2.013,68,1.292,69,1.292,70,1.335,71,1.521,72,1.949,73,1.335,74,1.521,75,1.211,76,1.521,77,1.335,78,2.15,79,1.292,80,1.886,81,1.292,82,1.292,83,1.292,84,1.521,85,1.292,86,1.886,87,1.292,88,1.292,89,1.379,90,1.521,91,1.521,92,0.009,93,0.009,1556,4.34,1557,7.025,1558,6.367]],["title/components/DevicesDefaultComponent.html",[0,0.348,61,1.057]],["body/components/DevicesDefaultComponent.html",[0,0.454,1,0.765,2,1.308,3,0.078,4,0.068,5,0.901,6,0.901,7,0.901,8,0.901,9,0.05,12,2.109,15,0.901,16,2.219,17,2.148,18,1.642,19,3.372,20,1.186,22,1.186,24,0.212,25,0.013,26,0.372,27,0.078,28,0.265,31,0.901,32,1.352,33,1.308,34,0.901,35,1.804,36,0.901,37,0.645,38,1.352,39,0.765,40,1.804,41,0.765,42,1.683,43,1.352,44,0.79,45,0.901,46,0.765,47,1.352,48,0.741,49,1.352,50,0.765,51,0.79,52,0.901,53,0.516,54,0.741,55,0.901,56,0.765,57,2.294,58,0.901,59,0.765,60,0.901,61,1.532,62,2.113,63,0.901,64,0.765,65,0.901,66,0.765,67,1.811,68,0.765,69,0.765,70,0.79,71,0.901,72,1.352,73,0.79,74,1.934,75,0.717,76,0.901,77,0.79,78,1.623,79,0.765,80,1.308,81,1.379,82,0.765,83,0.765,84,0.901,85,0.765,86,1.696,87,0.765,88,0.765,89,2.008,90,0.901,91,0.901,92,0.007,93,0.007,98,0.963,100,3.656,103,0.228,104,0.516,105,3.257,106,0.448,115,1.148,118,1.996,121,0.63,131,1.436,133,1.424,134,0.454,139,2.139,140,1.308,142,0.765,143,1.352,173,1.928,180,0.816,220,2.462,231,1.593,237,1.446,278,4.218,283,2.872,291,3.212,305,3.018,306,2.677,308,1.593,317,1.393,334,2.409,382,2.895,390,3.212,404,2.14,413,1.337,415,3.212,453,1.19,485,1.766,486,1.766,488,1.766,489,1.766,537,2.409,538,1.337,539,2.392,541,1.766,543,3.538,544,2.324,545,3.018,572,2.282,601,4.593,613,4.654,633,3.982,660,2.324,705,2.324,711,0.672,722,1.993,745,2.57,746,4.028,747,2.57,748,1.993,749,1.993,751,4.345,753,1.593,754,1.593,762,1.871,809,2.992,933,4.631,981,2.809,986,3.992,990,3.857,999,3.857,1002,3.857,1013,4.66,1014,4.187,1015,2.57,1016,2.809,1017,2.14,1018,2.324,1019,2.324,1020,2.809,1021,2.14,1022,2.573,1024,3.018,1031,2.324,1038,4.286,1045,2.282,1053,3.018,1056,3.992,1060,2.872,1062,2.324,1063,2.324,1066,1.871,1258,2.992,1460,1.993,1461,2.992,1463,1.871,1464,2.324,1465,2.324,1486,3.212,1559,5.516,1560,2.57,1561,5.304,1562,4.418,1563,5.304,1564,4.418,1565,2.943,1566,2.943,1567,2.943,1568,2.943,1569,2.57,1570,2.57,1571,2.943,1572,2.943,1573,2.943,1574,2.943,1575,2.943,1576,2.943,1577,2.943,1578,2.943,1579,2.943,1580,2.57,1581,4.418,1582,2.943,1583,2.943,1584,4.418,1585,4.418,1586,5.895,1587,4.418,1588,3.857,1589,4.418,1590,5.147,1591,3.857,1592,4.418,1593,4.418,1594,4.418,1595,4.418,1596,5.895,1597,4.418,1598,3.857,1599,3.857,1600,4.418,1601,3.857,1602,4.418,1603,3.857,1604,4.418,1605,4.418,1606,4.418,1607,4.418,1608,3.488,1609,3.857,1610,4.418,1611,4.418,1612,3.857,1613,3.857,1614,4.418,1615,4.418,1616,2.324,1617,2.943,1618,2.943,1619,2.57,1620,2.943,1621,2.943,1622,2.943,1623,3.857,1624,3.488,1625,3.488,1626,2.943,1627,2.943,1628,2.943,1629,2.943,1630,2.57,1631,2.57,1632,2.943,1633,2.324,1634,2.943,1635,2.57,1636,2.943,1637,2.943,1638,4.418,1639,2.943,1640,2.943]],["title/components/DocsComponent.html",[0,0.348,64,1.057]],["body/components/DocsComponent.html",[0,0.591,1,1.243,2,1.839,3,0.127,4,0.111,5,1.464,6,1.464,7,1.464,8,1.464,9,0.08,12,1.967,15,1.464,16,2.308,17,2.234,18,1.793,20,1.668,22,1.668,24,0.191,25,0.012,26,0.604,27,0.127,28,0.43,31,1.464,32,1.901,33,1.839,34,1.464,35,2.235,36,1.464,37,0.755,38,1.901,39,1.243,40,2.235,41,1.243,42,1.619,43,1.901,44,1.284,45,1.464,46,1.243,47,1.901,48,1.203,49,1.901,50,1.243,51,1.284,52,1.464,53,0.838,54,1.203,55,1.464,56,1.243,57,1.416,58,1.464,59,1.243,60,1.464,61,1.243,62,1.37,63,1.464,64,1.898,65,1.464,66,1.243,67,1.977,68,1.243,69,1.243,70,1.284,71,1.464,72,1.901,73,1.284,74,1.464,75,1.165,76,1.464,77,1.284,78,2.111,79,1.243,80,1.839,81,1.243,82,1.243,83,1.243,84,1.464,85,1.243,86,1.852,87,1.243,88,1.243,89,1.326,90,1.464,91,1.464,92,0.009,93,0.009,97,1.78,98,2.257,103,0.37,115,1.614,118,2.472,121,1.476,131,1.513,142,1.243,143,1.901,646,6.374,1514,5.422,1641,4.175,1642,6.897,1643,6.21,1644,4.782,1645,4.782]],["title/classes/Dot.html",[28,0.365,399,2.753]],["body/classes/Dot.html",[0,0.522,3,0.123,4,0.108,9,0.078,16,1.247,17,1.584,20,1.247,22,1.247,24,0.244,25,0.013,26,0.587,27,0.123,28,0.611,37,0.74,53,1.393,75,1.131,92,0.009,93,0.009,97,1.33,98,1.993,103,0.36,104,0.794,106,0.928,115,1.584,118,1.572,121,0.993,131,1.759,133,1.636,134,0.618,142,1.207,143,1.865,180,1.288,372,5.209,382,3.271,395,3.144,396,3.144,397,3.375,398,4.461,399,5.209,400,4.809,401,3.665,402,3.665,403,2.197,411,3.665,413,2.108,414,3.665,415,3.375,416,5.918,417,3.665,418,3.375,419,3.665,420,4.809,421,3.665,422,3.665,423,3.665,424,3.665,425,3.665,426,3.665,427,4.809,428,3.665,429,3.665,430,3.665,431,3.665,432,3.665,433,3.665,434,3.665,435,4.809,436,4.809,437,3.665,438,3.665,439,4.809,440,5.368,441,3.665,442,3.665,443,3.665,444,3.665,445,3.144,446,3.665,447,3.375,448,3.665,449,2.786,450,4.604,451,3.665,452,3.665,453,1.877,454,3.665,455,3.665,456,3.665,457,3.665,458,3.665,459,3.665,460,3.665,461,3.665,462,3.665,463,3.665,464,3.665,465,3.665,466,3.665,467,3.665,468,3.665,469,3.665,470,3.665,471,3.665,472,3.665,473,3.665,474,3.665,475,3.665,476,3.665,477,3.665,478,3.665,479,3.665,480,2.951,481,3.144,482,3.665,483,3.144,484,2.197,485,2.786,486,2.786,487,3.665,488,2.786,489,2.786,1646,6.091,1647,4.642,1648,4.642,1649,6.091,1650,4.642]],["title/interfaces/DriveCycle.html",[782,0.299,1151,2.1]],["body/interfaces/DriveCycle.html",[3,0.166,4,0.146,9,0.105,25,0.012,27,0.166,92,0.011,93,0.011,103,0.485,104,0.857,106,1.222,134,0.667,293,3.033,711,1.892,782,0.46,784,1.628,1135,3.844,1151,3.791,1651,5.469,1652,6.795,1653,6.264,1654,6.264,1655,6.264]],["title/components/EditBatteryPackComponent.html",[0,0.348,66,1.057]],["body/components/EditBatteryPackComponent.html",[0,0.593,1,1.253,2,1.849,3,0.128,4,0.112,5,1.475,6,1.475,7,1.475,8,1.475,9,0.081,10,3.264,12,2.172,14,3.805,15,1.475,16,2.309,17,2.235,18,1.8,19,3.968,20,1.676,21,6.045,22,1.676,23,5.45,24,0.193,25,0.012,26,0.609,27,0.128,28,0.433,29,4.538,30,4.538,31,1.475,32,1.911,33,1.849,34,1.475,35,2.241,36,1.475,37,0.759,38,1.911,39,1.253,40,2.241,41,1.253,42,1.623,43,1.911,44,1.294,45,1.475,46,1.253,47,1.911,48,1.213,49,1.911,50,1.253,51,1.294,52,1.475,53,0.844,54,1.213,55,1.475,56,1.253,57,1.427,58,1.475,59,1.253,60,1.475,61,1.253,62,1.381,63,1.475,64,1.253,65,1.475,66,1.904,67,2.342,68,1.253,69,1.253,70,1.294,71,1.475,72,1.911,73,1.294,74,1.475,75,1.174,76,1.475,77,1.294,78,2.119,79,1.253,80,1.849,81,1.253,82,1.253,83,1.253,84,1.475,85,1.253,86,1.859,87,1.253,88,1.253,89,1.337,90,1.475,91,1.475,92,0.009,93,0.009,691,3.504,692,3.504]],["title/components/EditCellsComponent.html",[0,0.348,68,1.057]],["body/components/EditCellsComponent.html",[0,0.353,1,0.518,2,0.964,3,0.053,4,0.046,5,1.605,6,0.61,7,0.61,8,0.61,9,0.034,12,1.363,15,0.61,16,2.118,17,2.05,18,1.072,20,0.874,22,0.874,24,0.256,25,0.013,26,0.252,27,0.053,28,0.179,31,0.61,32,0.996,33,0.964,34,0.61,35,1.457,36,0.61,37,0.836,38,0.996,39,0.518,40,1.457,41,0.518,42,1.371,43,0.996,44,0.535,45,0.61,46,0.518,47,0.996,48,0.502,49,0.996,50,0.518,51,0.535,52,0.61,53,0.722,54,0.502,55,0.61,56,0.518,57,0.59,58,0.61,59,0.518,60,0.61,61,0.518,62,0.571,63,0.61,64,0.518,65,0.61,66,0.518,67,1.972,68,1.237,69,0.518,70,0.535,71,0.61,72,0.996,73,0.535,74,0.61,75,0.486,76,0.61,77,0.535,78,1.262,79,0.518,80,0.964,81,0.518,82,0.518,83,0.518,84,0.61,85,0.518,86,1.594,87,0.518,88,0.518,89,0.553,90,0.61,91,0.61,92,0.005,93,0.005,96,1.449,97,0.933,98,1.35,99,1.731,100,2.459,101,2.998,102,2.366,103,0.154,104,0.38,105,3.887,106,1.083,107,3.601,108,2.998,109,3.601,110,3.256,111,2.998,112,1.8,113,3.645,114,2.998,115,0.846,116,2.204,117,1.998,118,1.611,119,4.913,120,4.091,121,0.696,122,1.574,123,2.857,124,2.998,125,2.459,126,2.793,127,2.253,128,3.214,129,2.475,130,3.026,131,1.866,132,1.741,133,0.874,134,0.642,135,2.366,136,2.475,137,1.048,139,2.447,140,1.998,141,1.681,142,1.463,143,1.895,145,2.841,148,2.622,149,1.741,150,3.552,152,1.558,153,2.363,155,2.115,157,3.617,158,1.574,160,2.363,162,1.741,163,0.749,164,1.079,165,1.079,166,1.079,167,1.449,168,1.741,169,0.59,170,1.741,171,1.905,172,1.182,173,2.077,174,2.841,175,1.574,176,1.741,177,1.741,178,1.35,180,0.903,182,1.741,183,1.741,184,1.741,185,1.741,186,1.741,187,1.741,188,1.741,189,1.741,190,1.741,191,1.741,192,1.741,193,1.741,194,1.741,195,1.741,196,1.741,197,1.741,198,1.741,199,1.741,200,1.741,202,1.789,203,2.998,204,1.852,205,1.574,206,1.998,207,2.366,208,1.506,209,3.813,210,1.102,213,1.681,214,1.267,215,1.449,216,3.223,217,2.459,219,1.449,220,2.193,221,2.366,223,2.204,224,2.204,225,2.204,226,1.268,227,1.35,228,1.449,230,1.35,231,2.577,232,1.449,233,1.449,234,2.998,235,1.449,236,1.449,237,1.065,238,1.449,239,1.449,240,1.449,241,1.449,242,1.267,243,1.449,244,1.574,245,2.366,246,1.449,247,1.449,248,1.449,249,1.741,250,0.985,251,1.681,252,2.569,253,2.069,254,2.841,255,2.841,256,1.42,257,2.366,258,1.681,259,2.841,260,3.461,261,3.936,262,1.223,263,3.461,264,2.204,265,2.366,266,2.069,267,2.366,268,2.841,269,2.347,276,4.519,277,3.758,278,2.069,279,2.841,280,2.569,281,2.569,282,2.841,283,1.762,284,3.758,285,2.841,286,5.433,287,2.569,288,5.752,289,2.664,290,2.841,291,2.366,292,2.841,293,1.268,294,2.204,295,4.156,296,2.069,297,3.758,298,4.156,299,2.366,300,2.069,301,2.857,302,1.953,303,2.069,304,2.204,305,1.852,306,2.162,308,1.079,309,1.134,311,1.681,312,1.449,313,1.449,314,1.681,315,1.449,316,1.449,317,0.943,318,1.449,319,1.449,320,1.35,321,1.449,322,1.54,323,2.998,324,1.449,325,2.366,326,2.069,327,1.449,328,1.449,329,2.841,353,1.952,356,1.789,360,1.35,361,2.13,370,1.449,499,1.608,537,0.905,538,0.905,565,1.134,590,1.079,604,1.134,669,0.806,712,2.069,728,1.267,729,1.574,753,1.079,754,1.079,910,2.233,935,1.789,946,1.079,947,0.985,992,1.196,1045,1.03,1060,1.079,1089,5.601,1181,1.449,1182,3.758,1189,1.574,1205,4.141,1206,4.141,1216,2.569,1217,3.256,1218,3.256,1232,1.574,1352,1.574,1353,1.449,1354,1.574,1355,1.574,1356,1.574,1358,1.574,1361,1.574,1362,1.574,1363,1.574,1364,1.574,1370,1.574,1371,1.574,1393,2.069,1656,6.725,1657,3.601,1658,3.601,1659,4.156,1660,1.994,1661,1.994,1662,1.994,1663,1.994,1664,1.994,1665,1.994,1666,1.994,1667,1.994,1668,1.741,1669,1.994,1670,1.994,1671,1.994,1672,1.994,1673,1.994,1674,1.994,1675,1.994,1676,1.994,1677,1.741,1678,1.741,1679,1.741,1680,1.994,1681,1.994,1682,1.994,1683,1.994,1684,1.994,1685,1.994,1686,1.741,1687,1.741,1688,1.994,1689,2.841,1690,1.741,1691,1.741,1692,1.741,1693,1.741,1694,1.994,1695,1.994,1696,1.741,1697,2.841,1698,1.741,1699,1.741,1700,1.741,1701,1.741,1702,1.741,1703,1.994,1704,1.994,1705,1.741,1706,1.741,1707,2.841,1708,3.254,1709,3.254,1710,2.841,1711,1.741]],["title/components/EditTestChamberComponent.html",[0,0.348,69,1.057]],["body/components/EditTestChamberComponent.html",[0,0.363,1,0.539,2,0.995,3,0.055,4,0.048,5,0.635,6,0.635,7,0.635,8,0.635,9,0.035,12,1.392,15,0.635,16,2.129,17,2.061,18,1.101,20,0.902,22,0.902,24,0.252,25,0.013,26,0.262,27,0.055,28,0.186,31,0.635,32,1.029,33,0.995,34,0.635,35,1.491,36,0.635,37,0.811,38,1.029,39,0.539,40,1.491,41,0.539,42,1.783,43,1.029,44,0.557,45,0.635,46,0.539,47,1.029,48,0.522,49,1.029,50,0.539,51,0.557,52,0.635,53,0.742,54,0.522,55,0.635,56,0.539,57,0.614,58,0.635,59,0.539,60,0.635,61,0.539,62,0.594,63,0.635,64,0.539,65,0.635,66,0.539,67,1.995,68,0.539,69,1.267,70,0.557,71,0.635,72,1.029,73,0.557,74,0.635,75,0.505,76,0.635,77,0.557,78,1.297,79,0.539,80,0.995,81,0.539,82,0.539,83,0.539,84,0.635,85,0.539,86,1.621,87,0.539,88,0.539,89,1.175,90,0.635,91,0.635,92,0.009,93,0.005,97,0.963,98,1.387,99,1.779,103,0.161,104,0.392,106,0.957,108,3.081,111,3.081,112,1.849,113,3.696,114,3.081,115,0.874,116,2.276,117,2.046,118,1.649,120,4.167,121,0.719,124,2.443,125,2.517,126,2.869,127,2.306,128,3.268,129,2.543,130,3.097,131,1.826,133,0.902,134,0.606,136,2.543,137,1.129,139,2.357,140,1.924,141,1.736,142,1.392,143,1.848,152,1.594,153,2.406,155,1.831,157,3.595,160,2.248,163,0.779,164,1.123,165,1.123,166,1.123,169,0.614,171,1.94,172,1.396,173,1.849,180,1.352,202,1.831,203,3.081,204,1.912,206,2.046,207,2.443,208,1.542,209,4.167,210,1.138,213,1.736,214,1.318,215,1.508,216,3.3,217,2.517,219,2.443,220,2.234,221,2.443,223,2.276,224,2.276,225,2.276,226,1.31,227,1.404,228,1.508,230,1.404,231,2.638,232,1.508,233,2.443,234,3.081,235,1.508,236,1.508,237,1.1,238,1.508,239,1.508,240,1.508,241,1.508,242,1.318,243,1.508,245,3.542,246,2.443,247,2.443,248,2.443,250,1.024,251,1.736,260,2.443,262,1.263,263,3.542,264,2.276,265,2.443,266,2.136,267,2.443,269,2.411,294,3.3,296,2.136,299,2.443,300,2.136,301,2.924,302,2.017,303,3.996,304,2.276,305,1.912,306,2.213,308,1.123,309,1.18,311,1.736,312,1.508,313,1.508,314,1.736,315,1.508,316,1.508,317,0.981,318,1.508,319,1.508,320,1.404,321,1.508,322,1.59,323,3.081,324,1.508,325,2.443,326,2.136,327,1.508,328,1.508,330,5.117,333,1.637,334,3.614,335,3.699,336,2.934,337,1.811,338,2.694,339,2.517,340,1.811,344,2.543,346,1.811,347,1.811,348,1.811,349,1.811,350,1.811,351,1.123,352,1.245,353,2.005,354,1.637,356,1.831,357,1.811,358,2.276,360,2.276,361,1.736,362,1.123,363,2.934,364,3.3,365,2.934,366,2.276,367,2.276,368,2.924,369,2.934,370,3.081,371,2.653,372,2.276,373,2.934,374,1.811,375,3.996,376,2.126,377,5.004,378,5.004,379,4.254,380,4.254,381,4.254,382,2.126,383,1.649,384,2.443,385,2.934,386,2.653,387,2.653,388,1.359,389,1.736,390,2.443,391,4.254,392,2.443,393,1.811,394,2.934,499,1.66,535,1.526,537,0.942,538,0.942,565,1.18,590,1.123,604,1.18,669,0.838,712,2.136,728,1.318,729,1.637,753,1.123,754,1.123,935,1.831,946,1.123,947,1.024,992,1.245,1045,1.071,1060,1.123,1181,1.508,1182,3.847,1189,1.637,1201,2.869,1205,4.227,1206,4.227,1216,2.653,1217,3.345,1218,3.345,1232,1.637,1237,1.811,1338,1.811,1352,1.637,1353,1.508,1354,1.637,1355,1.637,1356,1.637,1358,1.637,1361,1.637,1362,1.637,1363,1.637,1364,1.637,1370,1.637,1371,1.637,1393,2.136,1657,3.699,1658,3.699,1659,4.254,1668,1.811,1677,1.811,1678,1.811,1679,1.811,1686,1.811,1687,1.811,1689,2.934,1690,1.811,1691,1.811,1692,1.811,1693,1.811,1696,1.811,1697,2.934,1698,1.811,1699,1.811,1700,1.811,1701,1.811,1702,1.811,1705,1.811,1706,1.811,1707,2.934,1710,2.934,1711,1.811,1712,5.493,1713,5.493,1714,3.361,1715,2.074,1716,2.074,1717,2.074,1718,2.074,1719,2.074,1720,2.074,1721,2.074,1722,2.074,1723,2.074,1724,2.074,1725,1.18,1726,2.074,1727,2.074,1728,2.074,1729,2.074,1730,2.074,1731,2.074,1732,2.074,1733,2.074,1734,2.074,1735,3.361]],["title/interfaces/FileField.html",[782,0.299,1161,2.1]],["body/interfaces/FileField.html",[3,0.093,4,0.082,9,0.099,24,0.141,25,0.013,27,0.197,37,0.781,92,0.007,93,0.007,103,0.273,104,0.588,134,0.722,137,1.087,140,2.497,152,2.48,155,2.414,172,1.009,180,2.2,202,3.083,256,3.085,258,3.318,262,3.145,275,4.155,322,3.346,376,2.803,383,1.192,389,1.819,403,2.785,499,1.739,535,3.442,711,1.873,782,0.535,784,0.915,835,3.652,910,1.906,916,1.192,1010,3.942,1022,3.249,1097,2.414,1104,2.25,1121,1.372,1122,2.135,1144,2.728,1145,1.906,1146,2.113,1147,2.113,1148,2.113,1149,2.113,1150,2.113,1151,3.318,1152,2.113,1153,3.916,1154,4.531,1155,4.762,1156,3.846,1157,3.348,1158,2.867,1159,3.348,1160,3.761,1161,3.318,1162,3.868,1163,2.004,1164,3.478,1165,2.867,1166,2.004,1167,3.04,1168,2.867,1169,2.728,1170,2.867,1171,2.728,1172,3.655,1173,2.867,1174,3.348,1175,2.004,1176,2.113]],["title/components/FootNavComponent.html",[0,0.348,70,1.091]],["body/components/FootNavComponent.html",[0,0.493,1,0.88,2,1.45,3,0.09,4,0.079,5,1.036,6,1.036,7,1.036,8,1.036,9,0.057,12,1.952,15,1.036,16,2.248,17,2.176,18,1.496,20,1.315,22,1.315,24,0.135,25,0.013,26,0.428,27,0.09,28,0.304,31,1.036,32,1.499,33,1.45,34,1.036,35,1.93,36,1.036,37,0.766,38,1.499,39,0.88,40,1.93,41,0.88,42,1.539,43,1.499,44,0.909,45,1.036,46,0.88,47,1.499,48,0.852,49,1.499,50,0.88,51,0.909,52,1.036,53,0.593,54,0.852,55,1.036,56,0.88,57,1.002,58,1.036,59,0.88,60,1.036,61,0.88,62,1.649,63,1.036,64,0.88,65,1.036,66,0.88,67,1.649,68,0.88,69,0.88,70,1.693,71,2.255,72,1.499,73,0.909,74,1.499,75,0.825,76,1.036,77,0.909,78,1.761,79,0.88,80,1.45,81,0.88,82,0.88,83,0.88,84,1.036,85,0.88,86,1.545,87,0.88,88,0.88,89,0.939,90,1.036,91,1.036,92,0.007,93,0.007,97,1.403,98,1.883,103,0.262,104,0.572,115,1.273,118,2.135,121,1.231,131,1.402,134,0.29,139,1.228,140,1.002,142,0.88,143,1.499,206,1.421,220,2.718,227,3.316,237,1.602,257,2.46,278,3.113,283,3.415,297,3.866,306,2.224,309,2.787,311,1.748,314,1.748,450,3.316,537,2.224,538,2.864,539,3.623,541,3.454,543,3.785,545,3.808,578,4.979,626,3.316,746,3.589,749,2.292,750,2.46,751,2.939,761,3.897,762,2.151,786,3.866,787,2.672,843,2.53,1013,3.316,1016,3.113,1020,3.113,1022,2.752,1024,3.589,1039,3.454,1045,1.748,1046,3.56,1050,2.672,1053,2.787,1056,4.271,1060,1.832,1061,2.672,1065,2.672,1066,3.658,1067,2.672,1258,2.292,1390,4.585,1447,2.955,1460,2.292,1461,2.292,1463,2.151,1469,2.46,1474,4.275,1484,2.955,1569,2.955,1580,2.955,1608,3.866,1616,2.672,1624,2.672,1625,2.672,1631,2.955,1736,5.506,1737,2.672,1738,4.275,1739,5.024,1740,4.275,1741,6.976,1742,2.955,1743,3.384,1744,2.672,1745,6.306,1746,4.897,1747,4.897,1748,4.897,1749,4.897,1750,4.897,1751,3.384,1752,4.275,1753,4.897,1754,4.897,1755,4.897,1756,4.897,1757,4.897,1758,4.275,1759,4.897,1760,4.897,1761,4.275,1762,4.275,1763,4.897,1764,3.866,1765,6.306,1766,4.897,1767,4.897,1768,4.897,1769,4.897,1770,3.384,1771,4.897,1772,4.897,1773,4.897,1774,4.897,1775,3.384,1776,3.384,1777,3.384,1778,3.384,1779,3.384,1780,3.384,1781,3.384,1782,3.384,1783,3.384,1784,3.384,1785,4.897,1786,3.384,1787,3.384,1788,3.384,1789,3.384,1790,3.384,1791,2.955,1792,2.955,1793,3.384,1794,4.897,1795,2.955,1796,3.384,1797,3.384,1798,3.384,1799,3.384,1800,3.384,1801,2.955,1802,4.897,1803,3.384,1804,3.384,1805,3.384,1806,3.384,1807,3.384,1808,4.897,1809,2.955,1810,4.275,1811,2.955,1812,2.955,1813,2.955,1814,3.384]],["title/components/HeadNavComponent.html",[0,0.348,73,1.091]],["body/components/HeadNavComponent.html",[0,0.467,1,0.802,2,1.355,3,0.082,4,0.072,5,0.944,6,0.944,7,0.944,8,0.944,9,0.052,12,1.906,15,0.944,16,2.229,17,2.158,18,1.418,20,1.229,22,1.229,24,0.27,25,0.013,26,0.39,27,0.082,28,0.277,31,0.944,32,1.4,33,1.355,34,0.944,35,1.847,36,0.944,37,0.663,38,1.4,39,0.802,40,1.847,41,0.802,42,1.569,43,1.4,44,0.828,45,0.944,46,0.802,47,1.4,48,0.776,49,1.4,50,0.802,51,0.828,52,0.944,53,0.54,54,0.776,55,0.944,56,0.802,57,1.787,58,0.944,59,0.802,60,0.944,61,0.802,62,1.563,63,0.944,64,0.802,65,0.944,66,0.802,67,1.563,68,0.802,69,0.802,70,0.828,71,0.944,72,1.4,73,1.62,74,2.197,75,0.752,76,0.944,77,0.828,78,1.669,79,0.802,80,1.355,81,0.802,82,0.802,83,0.802,84,0.944,85,0.802,86,1.465,87,0.802,88,0.802,89,1.513,90,0.944,91,0.944,92,0.007,93,0.007,97,1.311,98,1.785,99,2.29,100,2.364,103,0.354,104,0.534,106,0.982,115,1.189,117,2.533,118,2.043,121,0.979,125,3.117,131,1.703,133,0.828,134,0.467,142,1.568,143,2.066,157,2.817,160,2.29,166,1.67,169,0.913,171,1.846,172,0.884,173,2.38,206,2.705,217,1.593,220,2.351,230,2.089,237,2.595,275,1.593,283,1.67,302,2.746,311,1.593,314,2.364,317,1.46,382,3.05,413,1.401,445,2.089,484,2.855,537,1.401,538,2.078,541,2.746,543,1.851,545,3.104,549,2.243,581,5.666,587,2.604,588,2.364,626,3.099,633,2.746,654,2.693,655,5.268,657,3.612,663,1.961,669,2.729,724,2.693,727,2.693,746,3.434,749,2.089,750,2.243,751,1.851,753,2.477,754,2.477,760,2.243,761,3.099,762,1.961,787,2.435,870,3.966,991,2.693,1016,1.961,1020,2.909,1029,3.612,1053,2.604,1056,3.694,1073,4.387,1074,3.612,1167,1.46,1181,2.243,1258,3.099,1463,1.961,1464,3.612,1465,3.612,1494,3.995,1624,2.435,1625,3.612,1630,3.995,1737,2.435,1738,5.626,1739,4.762,1740,3.995,1742,2.693,1764,3.612,1791,3.995,1801,2.693,1809,2.693,1810,3.995,1811,2.693,1812,2.693,1813,2.693,1815,6.266,1816,5.454,1817,6.033,1818,6.033,1819,4.575,1820,3.084,1821,3.084,1822,3.084,1823,3.084,1824,3.084,1825,3.084,1826,3.084,1827,4.575,1828,3.084,1829,3.084,1830,3.084,1831,3.084,1832,3.084,1833,3.084,1834,5.454,1835,3.084,1836,3.084,1837,3.084,1838,3.084,1839,3.084,1840,3.084,1841,3.084,1842,3.084,1843,3.084,1844,3.995,1845,3.084,1846,4.575,1847,4.575,1848,6.444,1849,3.084,1850,4.575,1851,3.084,1852,3.084,1853,3.084,1854,3.084,1855,3.084,1856,3.084,1857,4.575,1858,3.084,1859,3.084,1860,3.084,1861,3.084,1862,3.084,1863,3.084,1864,6.751,1865,3.084,1866,3.084,1867,3.612,1868,4.575,1869,5.454,1870,3.084,1871,3.084,1872,3.084,1873,3.084,1874,3.084,1875,3.084,1876,3.084]],["title/components/HomeComponent.html",[0,0.348,75,0.99]],["body/components/HomeComponent.html",[0,0.479,1,0.837,2,1.399,3,0.085,4,0.075,5,0.986,6,0.986,7,0.986,8,0.986,9,0.054,12,1.927,15,0.986,16,2.238,17,2.171,18,1.454,19,3.003,20,1.268,22,1.268,24,0.189,25,0.013,26,0.407,27,0.085,28,0.503,31,0.986,32,1.446,33,1.399,34,0.986,35,1.886,36,0.986,37,0.68,38,1.446,39,0.837,40,1.886,41,0.837,42,1.404,43,1.446,44,0.865,45,0.986,46,0.837,47,1.446,48,0.81,49,1.446,50,0.837,51,0.865,52,0.986,53,1.299,54,0.81,55,0.986,56,0.837,57,1.656,58,0.986,59,0.837,60,0.986,61,0.837,62,0.923,63,0.986,64,0.837,65,0.986,66,0.837,67,1.603,68,0.837,69,0.837,70,0.865,71,0.986,72,1.446,73,0.865,74,0.986,75,1.501,76,0.986,77,0.865,78,1.712,79,0.837,80,1.399,81,1.454,82,0.837,83,0.837,84,0.986,85,0.837,86,1.502,87,0.837,88,0.837,89,0.893,90,0.986,91,0.986,92,0.007,93,0.007,97,1.354,98,1.83,103,0.249,104,0.376,106,0.49,115,1.228,118,2.086,121,0.689,131,1.151,133,1.502,134,0.528,142,0.837,143,1.446,180,0.893,220,1.255,231,1.744,278,3.003,283,3.028,289,1.91,293,1.84,309,1.833,311,1.664,314,1.664,317,1.524,372,3.199,375,3.003,382,3.171,390,3.434,395,2.181,397,2.341,398,3.183,399,4.442,400,3.729,401,2.542,402,2.542,403,1.524,411,2.542,413,1.462,414,2.542,415,5.151,416,3.729,417,2.542,418,2.341,419,2.542,420,3.729,421,2.542,422,2.542,423,2.542,424,2.542,425,2.542,426,2.542,427,2.542,428,2.542,429,2.542,430,2.542,431,2.542,432,2.542,433,2.542,434,2.542,435,3.729,436,3.729,437,2.542,438,2.542,439,3.729,440,3.729,441,2.542,442,2.542,443,2.542,444,2.542,445,2.181,446,2.542,447,2.341,448,2.542,449,2.835,450,4.172,451,3.729,452,4.416,453,1.302,454,2.542,455,2.542,456,2.542,457,2.542,458,2.542,459,2.542,460,2.542,461,2.542,462,2.542,463,2.542,464,2.542,465,2.542,466,2.542,467,2.542,468,2.542,469,2.542,470,2.542,471,2.542,472,2.542,473,2.542,474,2.542,475,2.542,476,2.542,477,2.542,478,2.542,479,2.542,480,2.047,481,2.181,482,2.542,483,2.181,484,2.647,485,1.933,486,1.933,487,2.542,488,1.933,489,1.933,513,1.84,537,1.462,538,1.462,541,2.835,543,3.357,544,2.542,545,3.506,660,5.413,705,2.542,746,4.135,752,2.181,932,3.729,986,3.199,987,4.124,993,3.729,1013,3.199,1016,3.003,1017,3.434,1020,3.916,1021,3.434,1022,2.441,1024,3.183,1034,2.181,1035,2.181,1037,3.556,1038,2.341,1039,3.697,1045,1.664,1049,2.542,1066,2.047,1164,2.557,1258,2.181,1390,3.434,1452,4.124,1526,4.124,1598,4.124,1599,4.124,1608,3.729,1616,2.542,1619,2.812,1652,4.124,1752,4.124,1761,4.124,1844,4.124,1877,3.22,1878,3.22,1879,3.22,1880,4.723,1881,4.723,1882,4.723,1883,4.723,1884,4.124,1885,4.723,1886,4.124,1887,4.723,1888,4.723,1889,4.124,1890,4.723,1891,4.723,1892,4.723,1893,4.723,1894,4.723,1895,4.723,1896,3.22,1897,3.22,1898,3.22,1899,5.593,1900,3.22,1901,4.723,1902,3.22,1903,4.723,1904,3.22,1905,5.593,1906,3.22,1907,3.22,1908,3.22,1909,3.22,1910,3.22]],["title/interfaces/InputField.html",[782,0.299,1160,2.1]],["body/interfaces/InputField.html",[3,0.094,4,0.082,9,0.099,24,0.142,25,0.013,27,0.198,37,0.783,92,0.008,93,0.008,103,0.274,104,0.591,134,0.723,137,1.09,140,2.498,152,2.484,155,2.421,172,1.015,180,2.202,202,3.085,256,3.091,258,3.327,262,3.147,275,4.159,322,3.353,376,2.81,383,1.199,389,1.829,403,2.794,499,1.749,535,3.312,711,1.874,782,0.536,784,0.921,835,3.659,910,1.917,916,1.199,1010,3.948,1022,3.254,1097,2.421,1104,2.256,1121,1.38,1122,2.142,1144,2.739,1145,1.917,1146,2.125,1147,2.125,1148,2.125,1149,2.125,1150,2.125,1151,2.614,1152,2.125,1153,3.921,1154,4.533,1155,4.765,1156,3.852,1157,3.359,1158,2.879,1159,3.359,1160,3.852,1161,3.049,1162,3.876,1163,2.015,1164,3.487,1165,2.879,1166,2.015,1167,3.048,1168,2.879,1169,2.739,1170,2.879,1171,2.739,1172,3.665,1173,2.879,1174,3.359,1175,2.015,1176,2.125]],["title/interfaces/MeasuredParameters.html",[782,0.299,1130,1.846]],["body/interfaces/MeasuredParameters.html",[3,0.114,4,0.1,9,0.072,24,0.172,25,0.013,27,0.212,92,0.009,93,0.009,103,0.333,104,0.676,106,1.239,134,0.645,137,1.355,208,1.832,210,1.455,289,2.83,293,2.728,356,1.616,383,2.215,388,2.34,509,2.237,513,3.047,711,1.961,715,1.876,736,3.412,782,0.588,784,1.117,916,1.455,934,1.738,935,1.616,1094,2.123,1095,3.097,1096,3.38,1097,2.46,1098,2.99,1099,3.097,1100,3.701,1101,3.863,1102,3.701,1103,3.863,1104,2.028,1105,2.123,1106,2.859,1107,2.99,1108,2.859,1109,2.221,1110,2.739,1111,1.952,1112,2.99,1113,2.221,1114,2.221,1115,2.221,1116,2.221,1117,2.221,1118,2.221,1119,2.221,1120,2.739,1121,1.675,1122,1.56,1123,2.221,1124,2.221,1125,1.952,1126,2.123,1127,2.123,1128,2.123,1129,2.123,1130,3.418,1131,3.616,1132,3.616,1133,3.616,1134,3.179,1135,3.458,1136,2.123,1137,2.123,1138,2.221,1139,2.221,1140,2.221,1141,2.221,1142,2.034,1143,1.952]],["title/components/NoResultComponent.html",[0,0.348,77,1.091]],["body/components/NoResultComponent.html",[0,0.582,1,1.204,2,1.801,3,0.123,4,0.108,5,1.417,6,1.417,7,1.417,8,1.417,9,0.078,12,2.037,15,1.417,16,2.303,17,2.229,18,1.765,20,1.633,22,1.633,24,0.185,25,0.013,26,0.585,27,0.123,28,0.416,31,1.417,32,1.861,33,1.801,34,1.417,35,2.207,36,1.417,37,0.739,38,1.861,39,1.204,40,2.207,41,1.204,42,1.676,43,1.861,44,1.243,45,1.417,46,1.204,47,1.861,48,1.165,49,1.861,50,1.204,51,1.243,52,1.417,53,0.811,54,1.165,55,1.417,56,1.204,57,1.371,58,1.417,59,1.204,60,1.417,61,1.204,62,1.327,63,1.417,64,1.204,65,1.417,66,1.204,67,1.946,68,1.204,69,1.204,70,1.243,71,1.417,72,1.861,73,1.243,74,1.417,75,1.128,76,1.417,77,1.936,78,2.079,79,1.204,80,1.801,81,1.204,82,1.204,83,1.204,84,1.417,85,1.204,86,1.823,87,1.204,88,1.204,89,1.285,90,1.417,91,1.417,92,0.009,93,0.009,97,1.743,98,2.222,103,0.359,105,2.878,115,1.581,118,2.441,121,1.453,131,1.482,142,1.204,143,1.861,334,2.762,483,4.118,695,4.599,776,5.361,777,5.361,992,3.65,1177,3.367,1193,4.801,1194,5.361,1889,5.31,1911,4.631,1912,4.631,1913,6.081,1914,6.081]],["title/interfaces/PayLoad.html",[782,0.299,916,1.376]],["body/interfaces/PayLoad.html",[3,0.094,4,0.083,9,0.1,24,0.142,25,0.013,27,0.198,37,0.784,92,0.008,93,0.008,103,0.275,104,0.592,134,0.718,137,1.092,140,2.485,152,2.486,155,2.666,172,1.019,180,2.204,202,3.086,256,3.095,258,3.333,262,3.126,275,4.161,322,3.357,376,2.815,383,2.184,389,1.836,403,2.8,499,1.756,535,3.316,711,1.859,782,0.536,784,0.924,835,3.664,910,1.925,916,1.718,1010,3.953,1022,3.258,1097,2.425,1104,2.26,1121,1.385,1122,2.146,1144,3.493,1145,1.925,1146,2.134,1147,2.134,1148,2.134,1149,2.134,1150,2.134,1151,2.621,1152,2.134,1153,3.925,1154,4.503,1155,4.733,1156,3.856,1157,3.366,1158,2.887,1159,3.366,1160,3.771,1161,3.056,1162,4.248,1163,2.023,1164,3.493,1165,2.887,1166,2.023,1167,3.053,1168,2.887,1169,2.747,1170,2.887,1171,2.747,1172,3.671,1173,2.887,1174,3.366,1175,2.023,1176,3.872]],["title/interfaces/QuickResponseMeasurement.html",[782,0.299,1143,1.846]],["body/interfaces/QuickResponseMeasurement.html",[3,0.116,4,0.102,9,0.074,24,0.176,25,0.013,27,0.213,92,0.009,93,0.009,103,0.34,104,0.685,134,0.566,137,1.36,208,1.857,210,1.485,289,1.773,293,1.709,356,1.649,383,2.238,388,2.372,509,2.252,513,3.061,711,1.946,715,1.914,736,3.507,782,0.59,784,1.14,916,1.485,934,1.773,935,1.649,1094,2.167,1095,3.583,1096,3.415,1097,2.485,1098,3.031,1099,3.129,1100,3.804,1101,3.97,1102,3.804,1103,3.97,1104,2.056,1105,2.167,1106,2.898,1107,3.031,1108,2.898,1109,2.266,1110,2.777,1111,1.992,1112,3.8,1113,2.266,1114,2.266,1115,2.266,1116,2.266,1117,2.266,1118,2.266,1119,2.266,1120,2.777,1121,1.709,1122,1.591,1123,2.266,1124,2.266,1125,1.992,1126,2.167,1127,2.167,1128,2.167,1129,2.167,1130,3.65,1131,2.266,1132,2.266,1133,2.266,1134,2.664,1135,2.167,1136,2.167,1137,2.167,1138,2.266,1139,2.266,1140,2.266,1141,2.266,1142,2.076,1143,2.664]],["title/interfaces/RowInfo.html",[782,0.299,1099,1.924]],["body/interfaces/RowInfo.html",[3,0.111,4,0.097,9,0.07,24,0.167,25,0.013,27,0.211,92,0.008,93,0.008,103,0.324,104,0.663,106,1.183,134,0.666,137,1.348,208,1.797,210,1.415,289,1.69,293,1.629,356,1.571,383,2.184,388,2.296,509,2.378,513,3.157,711,1.95,715,1.824,736,3.476,782,0.585,784,1.087,916,1.415,934,1.69,935,1.571,1094,2.065,1095,3.053,1096,3.856,1097,2.806,1098,2.934,1099,3.275,1100,3.77,1101,3.935,1102,3.77,1103,3.935,1104,1.99,1105,2.065,1106,2.806,1107,2.934,1108,2.806,1109,2.16,1110,2.688,1111,1.899,1112,2.934,1113,2.16,1114,2.16,1115,2.16,1116,2.16,1117,2.16,1118,2.16,1119,2.16,1120,2.688,1121,1.629,1122,1.517,1123,2.16,1124,2.16,1125,1.899,1126,2.065,1127,2.065,1128,2.065,1129,2.065,1130,3.617,1131,2.16,1132,2.16,1133,2.16,1134,2.58,1135,2.065,1136,2.065,1137,2.065,1138,3.575,1139,3.575,1140,3.575,1141,3.575,1142,1.979,1143,1.899]],["title/interfaces/SelectField.html",[782,0.299,1153,2.1]],["body/interfaces/SelectField.html",[3,0.093,4,0.081,9,0.099,24,0.14,25,0.013,27,0.197,37,0.779,92,0.007,93,0.007,103,0.271,104,0.586,134,0.724,137,1.259,140,2.496,152,2.478,155,2.409,172,1.004,180,2.198,202,3.081,256,3.08,258,3.311,262,3.144,275,4.152,322,3.341,376,2.797,383,1.186,389,1.81,403,2.777,499,1.731,535,3.302,711,1.872,782,0.534,784,0.911,835,3.647,910,1.897,916,1.186,1010,4.16,1022,3.245,1097,2.409,1104,2.245,1121,1.365,1122,2.129,1144,2.719,1145,1.897,1146,2.103,1147,2.103,1148,2.103,1149,2.103,1150,2.103,1151,2.594,1152,2.103,1153,3.969,1154,4.529,1155,4.76,1156,3.841,1157,3.339,1158,2.857,1159,3.339,1160,3.755,1161,3.031,1162,3.86,1163,1.994,1164,3.47,1165,2.857,1166,1.994,1167,3.033,1168,2.857,1169,2.719,1170,2.857,1171,2.719,1172,3.647,1173,2.857,1174,3.339,1175,1.994,1176,2.103]],["title/interfaces/SensorObj.html",[782,0.299,1134,1.846]],["body/interfaces/SensorObj.html",[3,0.12,4,0.105,9,0.076,24,0.181,25,0.013,27,0.214,92,0.009,93,0.009,103,0.349,104,0.698,134,0.512,137,1.367,208,1.891,210,1.527,289,1.824,293,1.758,356,1.695,383,2.269,388,2.416,509,2.273,513,3.08,711,1.955,715,1.968,736,3.449,782,0.593,784,1.173,916,1.527,934,1.824,935,1.695,1094,2.228,1095,3.172,1096,3.463,1097,2.52,1098,3.088,1099,3.172,1100,3.741,1101,3.904,1102,3.741,1103,3.904,1104,2.094,1105,2.228,1106,2.953,1107,3.088,1108,2.953,1109,2.33,1110,2.829,1111,2.049,1112,3.088,1113,2.33,1114,2.33,1115,2.33,1116,2.33,1117,2.33,1118,2.33,1119,2.33,1120,2.829,1121,1.758,1122,1.636,1123,2.33,1124,2.33,1125,2.049,1126,2.228,1127,2.228,1128,2.228,1129,2.228,1130,3.372,1131,2.33,1132,2.33,1133,2.33,1134,3.044,1135,2.228,1136,3.526,1137,3.526,1138,2.33,1139,2.33,1140,2.33,1141,2.33,1142,2.135,1143,2.049]],["title/modules/SharedModule.html",[550,2.008,559,2.313]],["body/modules/SharedModule.html",[3,0.167,4,0.146,9,0.106,24,0.312,25,0.013,26,0.795,27,0.167,28,0.565,92,0.011,93,0.011,413,2.855,552,2.743,559,4.184,563,3.996,564,3.105,574,3.632,650,3.996,687,6.153,1915,6.285,1916,7.793,1917,5.488]],["title/components/ShowAllTestsResultComponent.html",[0,0.348,79,1.057]],["body/components/ShowAllTestsResultComponent.html",[0,0.454,1,0.764,2,1.307,3,0.078,4,0.068,5,0.899,6,0.899,7,0.899,8,0.899,9,0.049,12,1.641,15,0.899,16,2.218,17,2.148,18,1.377,20,1.185,22,1.185,24,0.253,25,0.013,26,0.371,27,0.078,28,0.264,31,0.899,32,1.351,33,1.307,34,0.899,35,1.803,36,0.899,37,0.836,38,1.351,39,0.764,40,1.803,41,0.764,42,1.657,43,1.351,44,0.789,45,0.899,46,0.764,47,1.351,48,0.739,49,1.351,50,0.764,51,0.789,52,1.932,53,1.106,54,0.739,55,0.899,56,0.764,57,0.87,58,0.899,59,0.764,60,0.899,61,0.764,62,0.842,63,0.899,64,0.764,65,0.899,66,0.764,67,1.519,68,0.764,69,0.764,70,0.789,71,0.899,72,1.351,73,0.789,74,0.899,75,0.716,76,0.899,77,0.789,78,1.622,79,1.531,80,2.143,81,2.208,82,0.764,83,0.764,84,0.899,85,0.764,86,1.423,87,0.764,88,0.764,89,0.815,90,0.899,91,0.899,92,0.007,93,0.007,97,1.265,98,1.734,99,2.225,103,0.228,104,0.515,106,0.807,112,2.312,115,1.147,117,2.473,118,1.994,121,0.944,131,1.886,133,0.789,134,0.631,137,0.747,139,2.495,140,2.037,142,1.531,143,2.029,152,1.444,153,2.225,160,2.65,169,0.87,171,1.494,172,1.265,173,1.926,178,2.988,180,1.224,218,3.208,237,1.444,251,3.043,262,1.659,301,2.648,334,2.004,338,2.805,339,3.043,351,1.591,352,1.763,358,3.588,361,2.279,382,3.001,413,1.334,449,2.648,485,1.763,486,1.763,488,1.763,489,1.763,509,1.351,513,1.719,669,1.784,695,5.287,701,4.626,703,4.65,711,1.008,715,2.893,719,2.136,722,1.99,731,3.853,738,3.853,739,3.853,740,3.853,741,3.853,753,1.591,754,1.591,773,5.287,774,5.287,855,2.32,974,3.588,992,2.648,1037,2.805,1075,3.989,1177,2.136,1193,3.484,1194,4.183,1918,5.299,1919,5.299,1920,5.299,1921,5.299,1922,4.183,1923,5.299,1924,2.565,1925,4.412,1926,2.938,1927,2.938,1928,2.938,1929,2.938,1930,2.938,1931,2.938,1932,2.938,1933,2.938,1934,2.938,1935,2.938,1936,2.938,1937,2.938,1938,4.626,1939,5.299,1940,5.89,1941,4.183,1942,2.938,1943,4.412,1944,2.938,1945,2.938,1946,2.938,1947,2.938,1948,4.412,1949,2.938,1950,4.412,1951,2.32,1952,2.32,1953,2.938,1954,2.938,1955,2.938,1956,4.412,1957,4.412,1958,3.853,1959,3.853,1960,3.853,1961,2.32]],["title/interfaces/Test.html",[42,0.87,782,0.299]],["body/interfaces/Test.html",[3,0.125,4,0.109,9,0.079,24,0.188,25,0.013,27,0.125,42,1.315,92,0.009,93,0.009,103,0.365,104,0.718,106,1.308,134,0.714,137,1.416,152,2.24,208,2.297,262,2.311,334,2.138,509,2.221,513,3.232,535,3.109,736,3.37,782,0.346,784,1.224,916,1.594,1100,3.655,1101,3.815,1102,3.655,1103,3.815,1105,2.326,1106,3.585,1108,3.585,1111,3.296,1126,3.585,1127,3.585,1128,3.585,1129,3.585,1744,4.854,1962,4.111,1963,7.257,1964,6.336,1965,7.257,1966,6.336,1967,7.257,1968,4.708,1969,4.708,1970,4.111,1971,4.708,1972,6.148]],["title/classes/TestChamber.html",[28,0.365,344,2.439]],["body/classes/TestChamber.html",[3,0.118,4,0.103,9,0.075,24,0.178,25,0.013,27,0.157,28,0.399,37,0.942,53,0.778,92,0.009,93,0.009,103,0.344,104,0.691,106,1.288,121,1.265,131,1.979,133,1.192,134,0.696,137,1.454,152,1.453,166,2.404,180,1.232,204,4.323,206,1.864,208,2.337,210,1.503,251,2.293,334,2.686,344,3.55,353,2.799,356,1.669,364,5.144,368,4.559,376,2.581,382,3.315,396,3.007,398,4.878,513,2.305,711,1.897,782,0.326,873,3.876,875,6.359,934,2.391,935,1.669,981,2.822,1007,3.228,1111,2.016,1200,3.228,1207,3.228,1725,2.526,1973,3.505,1974,6.632,1975,6.632,1976,6.632,1977,4.439,1978,4.439,1979,4.439,1980,4.439,1981,4.439,1982,4.439,1983,4.439,1984,4.439,1985,4.439,1986,4.439,1987,4.439,1988,4.669,1989,3.876,1990,3.876,1991,3.876,1992,3.876,1993,5.164,1994,3.876,1995,3.876,1996,3.876,1997,3.876,1998,3.876,1999,3.876,2000,3.876,2001,3.876,2002,3.876]],["title/injectables/TestChamberService.html",[339,2.1,665,1.528]],["body/injectables/TestChamberService.html",[3,0.075,4,0.066,9,0.048,24,0.272,25,0.013,26,0.36,27,0.075,28,0.256,37,0.935,42,1.535,53,1.192,81,1.119,92,0.006,93,0.006,103,0.22,106,1.172,115,1.119,121,0.609,131,1.906,133,2.066,134,0.665,137,1.432,139,1.885,140,1.716,142,2.018,155,1.953,169,0.842,171,1.759,172,1.661,226,1.678,237,1.7,308,2.331,317,1.346,334,2.632,339,2.224,351,4.265,354,2.246,453,1.15,484,1.346,491,1.405,509,1.318,535,2.36,572,1.469,588,1.469,597,1.54,663,4.723,664,1.808,665,1.619,667,1.619,668,1.469,669,3.138,699,5.435,711,1.72,712,2.737,843,1.469,848,2.246,850,1.54,889,1.619,892,2.916,897,1.808,898,3.298,900,2.45,903,2.584,904,3.478,918,4.435,919,2.584,920,1.926,921,1.926,922,1.926,924,5.211,927,1.926,928,1.926,929,5.159,931,5.099,936,5.472,944,2.584,945,1.926,946,1.54,947,1.405,948,1.707,949,1.707,950,1.707,951,1.707,952,1.707,953,1.707,992,2.584,1095,3.46,1200,5.918,1201,5.615,1236,4.536,1351,3.76,1397,2.484,1725,3.871,1938,5.059,1964,2.484,1966,5.435,2003,2.484,2004,4.306,2005,4.306,2006,4.306,2007,5.196,2008,6.802,2009,4.306,2010,4.306,2011,4.306,2012,5.795,2013,4.306,2014,4.306,2015,2.845,2016,4.306,2017,2.845,2018,5.795,2019,4.306,2020,2.845,2021,4.306,2022,2.845,2023,4.306,2024,2.845,2025,2.845,2026,2.845,2027,2.845,2028,2.845,2029,2.845,2030,2.845,2031,4.306,2032,2.845,2033,4.306,2034,2.845,2035,4.306,2036,2.845,2037,2.845,2038,2.845,2039,6.225,2040,2.845,2041,4.306,2042,2.845,2043,4.306,2044,2.845,2045,2.845,2046,4.306,2047,6.225,2048,6.225,2049,2.845,2050,3.76,2051,5.795,2052,4.306,2053,2.845,2054,2.845,2055,2.845,2056,2.845,2057,2.845,2058,4.306,2059,2.845,2060,2.845,2061,2.845,2062,2.845,2063,2.845,2064,4.306,2065,4.306,2066,2.845,2067,4.306,2068,2.845,2069,2.845,2070,2.845,2071,2.845,2072,2.845,2073,2.845,2074,2.068]],["title/components/TestChambersComponent.html",[0,0.348,83,1.057]],["body/components/TestChambersComponent.html",[0,0.421,1,0.676,2,1.191,3,0.069,4,0.06,5,0.796,6,0.796,7,0.796,8,0.796,9,0.044,12,1.889,15,0.796,16,2.19,17,2.12,18,1.278,20,1.08,22,1.08,24,0.197,25,0.013,26,0.329,27,0.069,28,0.234,31,0.796,32,1.231,33,1.191,34,0.796,35,1.693,36,0.796,37,0.598,38,1.231,39,0.676,40,1.693,41,0.676,42,1.792,43,1.231,44,0.699,45,0.796,46,0.676,47,1.231,48,0.655,49,1.231,50,0.676,51,0.699,52,1.505,53,0.861,54,0.655,55,0.796,56,0.676,57,0.771,58,0.796,59,0.676,60,0.796,61,0.676,62,1.409,63,0.796,64,0.676,65,0.796,66,0.676,67,1.409,68,0.676,69,0.676,70,0.699,71,0.796,72,1.231,73,0.699,74,0.796,75,0.634,76,0.796,77,0.699,78,1.505,79,0.676,80,1.191,81,1.278,82,0.676,83,1.438,84,0.796,85,0.676,86,1.32,87,0.676,88,0.676,89,1.659,90,0.796,91,0.796,92,0.006,93,0.006,97,1.153,98,1.609,99,2.064,100,3.266,103,0.381,104,0.47,106,0.396,112,2.146,115,1.046,117,2.322,118,1.873,121,0.557,131,1.457,133,1.606,134,0.421,139,1.459,140,1.191,142,1.046,143,1.693,152,1.316,153,1.689,160,2.064,169,0.771,172,0.746,173,1.135,180,0.722,202,0.978,206,2.322,213,1.344,220,2.464,237,1.957,242,2.557,250,1.285,253,2.557,266,2.557,269,2.289,283,2.995,306,2.512,314,2.078,317,1.231,320,2.724,326,2.557,330,4.282,334,3.656,339,2.858,352,1.562,361,1.344,362,1.409,366,2.724,367,4.612,387,4.992,404,2.924,453,1.052,483,3.746,506,2.924,537,2.233,538,2.994,539,2.995,541,2.951,545,2.289,546,1.654,549,2.924,592,4.022,613,3.175,640,4.282,732,3.175,746,3.875,748,1.762,751,2.414,760,2.924,761,1.762,762,2.557,782,0.406,843,3.811,932,4.367,981,2.557,983,5.756,985,3.512,986,4.835,993,3.175,997,3.512,1004,3.512,1007,2.924,1008,3.512,1013,3.33,1014,2.054,1016,3.517,1017,1.892,1018,2.054,1019,2.054,1020,2.557,1021,1.892,1022,1.755,1023,2.272,1024,3.403,1025,2.272,1026,2.272,1027,3.512,1028,3.512,1029,3.175,1030,3.512,1031,2.054,1032,2.272,1033,2.272,1034,2.724,1035,2.724,1036,2.272,1037,1.654,1038,1.892,1039,3.589,1040,2.272,1041,2.272,1042,2.272,1043,2.272,1044,2.272,1045,2.54,1046,1.892,1047,2.272,1048,2.272,1049,2.054,1050,3.175,1051,2.272,1052,2.272,1053,1.481,1054,2.272,1055,2.272,1056,1.762,1057,2.272,1058,2.272,1059,2.272,1060,1.409,1061,2.054,1062,2.054,1063,2.054,1064,2.272,1065,2.054,1066,1.654,1067,2.054,1068,2.272,1069,2.272,1070,2.272,1071,3.175,1072,2.272,1073,1.892,1074,2.054,1075,2.724,1076,2.272,1077,2.272,1078,2.272,1359,3.512,1383,3.512,1390,4.597,1588,3.512,1590,3.512,1591,3.512,1601,3.512,1603,3.512,1609,3.512,1612,3.512,1613,3.512,1635,2.272,1725,2.289,1762,4.83,1792,3.512,1884,4.83,2075,2.054,2076,4.293,2077,3.512,2078,4.916,2079,2.602,2080,4.022,2081,2.602,2082,2.272,2083,2.602,2084,2.602,2085,2.602,2086,2.602,2087,2.602,2088,2.602,2089,4.022,2090,4.022,2091,4.022,2092,4.022,2093,6.323,2094,5.532,2095,4.022,2096,4.022,2097,4.022,2098,4.022,2099,5.532,2100,4.022,2101,4.022,2102,4.022,2103,4.022,2104,4.022,2105,4.022,2106,4.022,2107,4.022,2108,3.512,2109,4.022,2110,2.602,2111,4.022,2112,4.022,2113,4.022,2114,4.022,2115,4.022,2116,4.022,2117,4.022,2118,4.022,2119,4.022,2120,4.022,2121,4.022,2122,4.022,2123,4.022,2124,4.022,2125,4.022,2126,4.022,2127,4.022,2128,4.022,2129,3.512,2130,4.022,2131,4.022,2132,4.022,2133,4.022,2134,4.022,2135,4.022,2136,4.022,2137,4.022,2138,4.022,2139,4.022,2140,4.022,2141,4.022,2142,5.532,2143,4.022,2144,2.054,2145,4.022,2146,4.022,2147,4.022,2148,2.602,2149,2.602]],["title/modules/TestChambersModule.html",[550,2.008,2150,2.955]],["body/modules/TestChambersModule.html",[3,0.138,4,0.121,9,0.088,24,0.329,25,0.013,26,0.659,27,0.138,28,0.468,41,2.062,42,1.723,69,2.062,83,2.062,88,2.062,89,1.446,92,0.01,93,0.01,256,2.274,331,3.789,332,3.789,484,2.466,552,2.274,553,3.734,559,4.513,560,4.171,561,3.313,563,4.171,564,3.241,565,2.965,571,3.789,574,3.241,575,3.529,590,3.553,604,2.965,640,4.443,768,5.767,779,5.18,780,3.789,1712,3.789,1713,3.789,2150,6.198,2151,4.55,2152,4.55,2153,4.55,2154,5.371,2155,4.55,2156,5.211,2157,6.581,2158,5.729,2159,5.729,2160,4.77]],["title/modules/TestChambersRoutingModule.html",[550,2.008,2154,2.753]],["body/modules/TestChambersRoutingModule.html",[0,0.667,3,0.151,4,0.133,9,0.096,18,1.486,24,0.325,25,0.013,26,0.723,27,0.151,28,0.514,41,1.806,42,1.736,69,1.806,83,1.806,86,1.535,88,1.806,89,1.586,92,0.01,93,0.01,163,2.148,172,1.638,331,4.156,332,4.156,552,2.494,564,2.824,574,3.432,617,3.871,621,4.417,622,4.26,625,4.95,640,4.705,650,3.634,694,4.156,1712,4.156,1713,4.156,2154,4.705,2155,4.99,2157,6.798,2158,6.066,2159,6.066,2160,5.051,2161,5.716]],["title/interfaces/TestChannel.html",[782,0.299,1110,1.924]],["body/interfaces/TestChannel.html",[3,0.107,4,0.094,9,0.068,24,0.162,25,0.013,27,0.21,92,0.008,93,0.008,103,0.314,104,0.65,106,1.206,134,0.67,137,1.34,208,1.761,210,1.373,289,1.64,293,1.58,356,1.524,383,2.15,388,2.249,509,2.192,513,3.006,711,1.961,715,1.77,736,3.518,782,0.582,784,1.054,916,1.373,934,1.64,935,1.524,1094,2.003,1095,3.501,1096,3.28,1097,2.387,1098,2.874,1099,3.005,1100,3.815,1101,3.982,1102,3.815,1103,3.982,1104,1.949,1105,2.003,1106,2.748,1107,2.874,1108,2.748,1109,2.095,1110,3.005,1111,1.842,1112,3.699,1113,3.53,1114,3.53,1115,3.53,1116,3.53,1117,3.53,1118,3.53,1119,3.53,1120,2.633,1121,1.58,1122,1.471,1123,2.095,1124,2.095,1125,1.842,1126,2.003,1127,2.003,1128,2.003,1129,2.003,1130,3.252,1131,2.095,1132,2.095,1133,2.095,1134,2.527,1135,2.003,1136,2.003,1137,2.003,1138,2.095,1139,2.095,1140,2.095,1141,2.095,1142,1.919,1143,1.842]],["title/interfaces/TestChannelDeepChannel.html",[782,0.299,1120,1.924]],["body/interfaces/TestChannelDeepChannel.html",[3,0.111,4,0.097,9,0.07,24,0.167,25,0.013,27,0.211,92,0.008,93,0.008,103,0.324,104,0.663,106,1.137,134,0.666,137,1.348,208,1.797,210,1.415,289,1.69,293,1.629,356,1.571,383,2.184,388,2.296,509,2.378,513,3.157,711,1.95,715,1.824,736,3.476,782,0.585,784,1.087,916,1.415,934,1.69,935,1.571,1094,2.065,1095,3.053,1096,3.856,1097,2.806,1098,3.739,1099,3.425,1100,3.77,1101,3.935,1102,3.77,1103,3.935,1104,2.425,1105,2.065,1106,2.806,1107,2.934,1108,2.806,1109,2.16,1110,2.688,1111,1.899,1112,2.934,1113,2.16,1114,2.16,1115,2.16,1116,2.16,1117,2.16,1118,2.16,1119,2.16,1120,3.053,1121,2.697,1122,2.511,1123,3.575,1124,3.575,1125,1.899,1126,2.065,1127,2.065,1128,2.065,1129,2.065,1130,3.287,1131,2.16,1132,2.16,1133,2.16,1134,2.58,1135,2.065,1136,2.065,1137,2.065,1138,2.16,1139,2.16,1140,2.16,1141,2.16,1142,1.979,1143,1.899]],["title/injectables/TestDataService.html",[665,1.528,2162,3.209]],["body/injectables/TestDataService.html",[3,0.144,4,0.126,9,0.091,24,0.315,25,0.013,26,0.686,27,0.144,28,0.488,37,0.818,53,0.951,92,0.01,93,0.01,103,0.42,106,1.025,115,1.75,121,1.161,131,1.864,133,1.807,134,0.577,142,1.902,169,1.607,171,2.477,226,2.623,237,1.776,351,4.257,453,2.194,491,2.681,509,1.661,597,2.939,665,2.53,667,3.089,668,2.804,669,2.958,719,3.946,850,2.939,889,3.089,892,4.558,897,3.45,898,4.163,900,3.089,903,3.257,904,4.391,919,4.039,944,3.257,947,2.681,948,3.257,949,3.257,950,3.257,951,3.257,952,3.257,953,3.257,1543,4.285,1545,4.739,1546,4.739,1547,4.739,1550,4.285,1551,5.876,1553,4.739,1554,4.739,1555,4.739,2162,5.314,2163,7.648,2164,7.648,2165,5.427,2166,5.427,2167,5.427,2168,5.427,2169,5.427,2170,5.427]],["title/interfaces/TestFormat.html",[782,0.299,1104,1.424]],["body/interfaces/TestFormat.html",[3,0.092,4,0.081,9,0.098,24,0.139,25,0.013,27,0.197,37,0.882,92,0.007,93,0.007,103,0.27,104,0.583,134,0.719,137,1.192,140,2.494,152,2.374,155,2.402,172,0.998,180,2.196,202,3.078,256,3.074,258,3.748,262,3.119,275,4.148,322,3.333,376,2.788,383,1.178,389,1.798,403,2.767,499,1.719,535,3.295,711,1.884,782,0.533,784,0.905,835,3.638,910,1.885,916,1.178,1010,3.928,1022,3.239,1097,2.727,1104,2.371,1121,1.356,1122,2.121,1144,2.706,1145,1.885,1146,2.089,1147,2.089,1148,2.089,1149,2.089,1150,2.089,1151,2.581,1152,2.089,1153,4.012,1154,4.493,1155,4.723,1156,3.963,1157,3.327,1158,2.844,1159,3.327,1160,3.905,1161,3.495,1162,4.224,1163,1.981,1164,3.459,1165,2.844,1166,1.981,1167,3.024,1168,2.844,1169,2.706,1170,2.844,1171,2.706,1172,3.636,1173,2.844,1174,3.327,1175,1.981,1176,2.089]],["title/interfaces/TestResultDocument.html",[782,0.299,1142,1.924]],["body/interfaces/TestResultDocument.html",[3,0.121,4,0.106,9,0.077,24,0.182,25,0.013,27,0.214,92,0.009,93,0.009,103,0.352,104,0.702,134,0.39,137,1.369,208,1.902,210,1.54,289,1.84,293,1.773,356,1.71,383,2.59,388,2.895,509,2.279,513,3.086,711,1.946,715,1.986,736,3.456,782,0.594,784,1.183,916,1.54,934,1.84,935,1.71,1094,2.248,1095,3.186,1096,3.478,1097,2.53,1098,3.105,1099,3.186,1100,3.748,1101,3.912,1102,3.748,1103,3.912,1104,2.106,1105,2.248,1106,2.97,1107,3.105,1108,2.97,1109,2.35,1110,2.845,1111,2.066,1112,3.105,1113,2.35,1114,2.35,1115,2.35,1116,2.35,1117,2.35,1118,2.35,1119,2.35,1120,2.845,1121,1.773,1122,1.651,1123,2.35,1124,2.35,1125,2.066,1126,2.248,1127,2.248,1128,2.248,1129,2.248,1130,3.382,1131,2.35,1132,2.35,1133,2.35,1134,2.73,1135,2.248,1136,2.248,1137,2.248,1138,2.35,1139,2.35,1140,2.35,1141,2.35,1142,2.845,1143,2.066]],["title/injectables/TestService.html",[504,2.955,665,1.528]],["body/injectables/TestService.html",[3,0.162,4,0.142,9,0.103,24,0.29,25,0.013,26,0.773,27,0.162,28,0.55,37,0.743,92,0.011,93,0.011,103,0.474,106,0.932,115,1.881,121,1.309,131,1.763,133,1.643,134,0.524,142,1.59,453,2.473,491,3.022,504,5.261,597,3.312,665,2.72,668,3.16,669,2.473,889,3.481,897,3.889,898,4.385,900,3.481,1550,4.83,2171,5.341,2172,7.964,2173,6.117,2174,6.117,2175,6.117]],["title/interfaces/TextField.html",[782,0.299,1156,2.1]],["body/interfaces/TextField.html",[3,0.092,4,0.081,9,0.098,24,0.139,25,0.013,27,0.197,37,0.777,92,0.007,93,0.007,103,0.27,104,0.583,134,0.722,137,1.081,140,2.494,152,2.474,155,2.402,172,0.998,180,2.196,202,3.078,256,3.074,258,3.301,262,3.142,275,4.148,322,3.333,376,2.788,383,1.178,389,1.798,403,3.202,499,1.719,535,3.295,711,1.87,782,0.533,784,0.905,835,3.638,910,1.885,916,1.178,1010,3.928,1022,3.239,1097,2.402,1104,2.239,1121,1.356,1122,2.121,1144,2.706,1145,1.885,1146,2.089,1147,2.089,1148,2.089,1149,2.089,1150,2.089,1151,2.581,1152,2.089,1153,3.905,1154,4.526,1155,4.757,1156,3.905,1157,3.85,1158,3.636,1159,3.85,1160,3.748,1161,3.02,1162,3.85,1163,1.981,1164,3.459,1165,2.844,1166,1.981,1167,3.024,1168,2.844,1169,2.706,1170,2.844,1171,2.706,1172,3.636,1173,2.844,1174,3.327,1175,1.981,1176,2.089]],["title/interfaces/ToastMsg.html",[498,2.753,782,0.299]],["body/interfaces/ToastMsg.html",[3,0.161,4,0.141,9,0.102,25,0.013,27,0.161,92,0.011,93,0.011,103,0.471,104,0.842,106,1.253,134,0.712,137,1.345,217,3.97,220,2.994,498,4.881,711,1.646,782,0.446,784,1.58,1353,5.24,1393,4.885,1426,6.293,2176,5.305,2177,7.208,2178,6.077,2179,6.077,2180,6.077,2181,6.077]],["title/injectables/UserService.html",[125,2.1,665,1.528]],["body/injectables/UserService.html",[3,0.124,4,0.109,9,0.079,24,0.309,25,0.013,26,0.591,27,0.181,28,0.42,37,0.955,53,1.072,92,0.009,93,0.009,103,0.362,106,1.144,115,1.591,116,4.146,121,1.001,125,3.163,131,1.831,133,2.018,134,0.644,136,3.674,137,1.348,141,3.525,142,1.882,157,2.417,169,1.385,171,2.31,206,3.413,208,1.937,210,1.584,226,2.386,237,1.531,353,2.214,356,1.758,453,1.891,491,2.311,509,1.432,572,2.417,587,2.662,588,2.417,597,2.533,663,4.338,664,2.974,665,2.301,667,2.662,668,2.417,669,2.927,782,0.45,850,2.533,889,2.662,892,4.146,897,2.974,898,4.12,900,3.484,903,3.674,904,4.345,917,3.168,918,4.146,919,3.674,920,3.168,921,3.168,922,3.168,924,4.622,927,3.168,928,4.146,929,4.146,931,3.168,934,1.891,935,1.758,936,3.168,944,3.674,945,3.168,946,2.533,947,2.311,948,2.808,949,2.808,950,2.808,951,2.808,952,2.808,953,2.808,2074,3.401,2182,3.401,2183,6.122,2184,6.122,2185,4.678,2186,4.833,2187,4.678,2188,4.678,2189,4.678,2190,4.833,2191,4.678,2192,3.693,2193,5.388,2194,3.693,2195,3.693,2196,3.693,2197,3.693,2198,3.693]],["title/components/ViewBatteryPacksComponent.html",[0,0.348,85,1.057]],["body/components/ViewBatteryPacksComponent.html",[0,0.593,1,1.253,2,1.849,3,0.128,4,0.112,5,1.475,6,1.475,7,1.475,8,1.475,9,0.081,10,3.264,12,2.172,15,1.475,16,2.309,17,2.235,18,1.8,20,1.676,22,1.676,24,0.193,25,0.012,26,0.609,27,0.128,28,0.433,29,4.538,30,4.538,31,1.475,32,1.911,33,1.849,34,1.475,35,2.241,36,1.475,37,0.759,38,1.911,39,1.253,40,2.241,41,1.253,42,1.623,43,1.911,44,1.294,45,1.475,46,1.253,47,1.911,48,1.213,49,1.911,50,1.253,51,1.294,52,1.475,53,0.844,54,1.213,55,1.475,56,1.253,57,1.427,58,1.475,59,1.253,60,1.475,61,1.253,62,1.381,63,1.475,64,1.253,65,1.475,66,1.253,67,1.984,68,1.253,69,1.253,70,1.294,71,1.475,72,1.911,73,1.294,74,1.475,75,1.174,76,1.475,77,1.294,78,2.119,79,1.253,80,1.849,81,1.253,82,1.253,83,1.253,84,1.475,85,1.904,86,2.194,87,1.253,88,1.253,89,1.337,90,1.475,91,1.475,92,0.009,93,0.009,633,3.746,677,3.805,678,6.045,679,5.45,690,4.538]],["title/components/ViewCellsComponent.html",[0,0.348,87,1.057]],["body/components/ViewCellsComponent.html",[0,0.424,1,0.684,2,1.202,3,0.07,4,0.061,5,0.806,6,0.806,7,0.806,8,0.806,9,0.044,12,1.563,15,0.806,16,2.193,17,2.123,18,1.287,20,1.09,22,1.09,24,0.223,25,0.013,26,0.333,27,0.07,28,0.237,31,0.806,32,1.242,33,1.202,34,0.806,35,1.704,36,0.806,37,0.831,38,1.242,39,0.684,40,1.704,41,0.684,42,1.416,43,1.242,44,0.707,45,0.806,46,0.684,47,1.242,48,0.662,49,1.242,50,0.684,51,0.707,52,0.806,53,0.461,54,0.662,55,0.806,56,0.684,57,0.779,58,0.806,59,0.684,60,0.806,61,0.684,62,0.754,63,0.806,64,0.684,65,0.806,66,0.684,67,1.821,68,0.684,69,0.684,70,0.707,71,0.806,72,1.242,73,0.707,74,0.806,75,0.641,76,0.806,77,0.707,78,1.516,79,0.684,80,1.202,81,0.684,82,0.684,83,0.684,84,0.806,85,0.684,86,1.923,87,1.447,88,0.684,89,0.73,90,0.806,91,0.806,92,0.006,93,0.006,96,1.913,97,1.163,98,1.621,99,2.079,100,3.7,101,3.6,102,2.95,103,0.204,104,0.474,105,3.704,106,0.618,112,2.161,113,2.309,115,1.055,117,2.337,118,1.884,121,0.563,122,2.078,123,3.34,131,1.826,133,1.09,134,0.649,135,2.95,137,1.12,139,2.48,140,2.024,141,2.558,142,1.447,143,1.944,147,2.298,151,3.543,153,1.105,154,2.298,155,2.569,158,2.078,159,2.298,160,2.079,161,2.298,167,1.913,169,0.779,172,0.754,173,1.148,180,1.126,206,1.105,213,1.36,214,2.58,220,1.026,226,1.026,231,1.425,237,1.967,250,1.3,251,2.096,261,1.673,262,1.525,269,2.309,270,3.543,274,3.543,276,2.58,277,3.204,280,3.204,281,3.204,284,4.394,286,5.654,289,2.763,291,4.046,293,1.581,296,2.58,300,2.58,301,2.435,302,2.435,305,2.309,306,2.528,308,2.197,309,1.498,311,1.36,334,1.195,361,1.36,362,1.425,392,1.913,449,2.435,453,1.064,537,1.843,538,1.195,539,1.425,546,1.673,669,1.641,711,1.271,728,1.673,752,1.782,753,2.681,754,2.681,809,3.354,823,1.782,843,2.096,923,2.298,946,1.425,947,1.3,961,3.543,971,2.298,974,3.354,1024,1.498,1034,1.782,1035,1.782,1037,2.58,1039,1.58,1045,2.096,1053,2.818,1060,1.425,1075,3.769,1086,5.508,1167,1.246,1201,2.748,1460,2.748,1461,2.748,1463,1.673,1469,1.913,1486,2.95,1633,2.078,1867,2.078,1922,3.91,1941,2.078,1951,2.078,1952,2.078,1961,2.078,2144,3.91,2199,6.615,2200,4.952,2201,4.952,2202,5.249,2203,4.952,2204,4.058,2205,2.632,2206,4.058,2207,2.632,2208,2.632,2209,2.632,2210,2.632,2211,2.632,2212,4.324,2213,4.058,2214,2.298,2215,4.058,2216,2.298,2217,2.298,2218,2.298,2219,4.058,2220,2.632,2221,4.058,2222,2.298,2223,2.298,2224,4.058,2225,2.632,2226,2.298,2227,2.298,2228,3.543,2229,3.543,2230,4.058,2231,4.058,2232,4.058,2233,4.058,2234,4.058,2235,4.058,2236,4.058,2237,4.058,2238,4.058,2239,4.058,2240,4.058,2241,4.058,2242,4.058,2243,4.058,2244,4.058,2245,4.058,2246,4.058,2247,2.298,2248,2.632,2249,2.632,2250,2.298,2251,2.298,2252,2.298,2253,2.298]],["title/components/ViewTestChambersComponent.html",[0,0.348,88,1.057]],["body/components/ViewTestChambersComponent.html",[0,0.374,1,0.563,2,1.031,3,0.057,4,0.05,5,0.663,6,0.663,7,0.663,8,0.663,9,0.036,12,1.423,15,0.663,16,2.142,17,2.073,18,1.134,20,0.935,22,0.935,24,0.234,25,0.013,26,0.274,27,0.057,28,0.195,31,0.663,32,1.065,33,1.031,34,0.663,35,1.53,36,0.663,37,0.777,38,1.065,39,0.563,40,1.53,41,0.563,42,1.804,43,1.065,44,0.582,45,0.663,46,0.563,47,1.065,48,0.545,49,1.065,50,0.563,51,0.582,52,0.663,53,0.379,54,0.545,55,0.663,56,0.563,57,0.641,58,0.663,59,0.563,60,0.663,61,0.563,62,0.621,63,0.663,64,0.563,65,0.663,66,0.563,67,1.676,68,0.563,69,0.563,70,0.582,71,0.663,72,1.065,73,0.582,74,0.663,75,0.528,76,0.663,77,0.582,78,1.336,79,0.563,80,1.031,81,0.563,82,0.563,83,0.563,84,0.663,85,0.563,86,1.817,87,0.563,88,1.299,89,1.877,90,0.663,91,0.663,92,0.005,93,0.005,97,0.998,98,1.428,99,1.832,103,0.168,104,0.406,106,0.761,112,1.904,113,1.981,115,0.905,117,2.098,118,1.692,121,0.745,127,2.908,131,1.869,133,0.935,134,0.648,137,1.04,139,2.455,140,2.004,141,2.254,142,1.597,143,2.018,152,1.635,153,2.454,155,2.401,160,2.298,164,1.173,165,1.173,169,0.641,171,1.477,172,0.998,173,1.519,178,3.384,180,0.965,206,0.909,213,1.798,217,1.119,218,3.633,220,1.7,226,1.356,231,1.173,237,1.791,250,1.07,251,1.798,261,1.377,262,1.308,269,2.844,294,2.357,296,3.177,300,2.213,301,2.089,302,2.089,304,2.357,305,1.981,306,2.269,308,1.885,309,1.233,311,1.119,330,5.228,334,2.902,338,2.213,339,2.581,351,1.173,352,1.3,358,2.357,360,1.467,361,1.798,362,1.173,364,2.357,368,2.089,375,3.177,376,2.181,382,1.519,383,1.692,392,1.575,513,1.947,517,1.575,537,1.581,538,0.984,539,1.173,546,1.377,669,1.407,703,3.945,711,0.795,712,1.377,722,1.467,728,2.213,752,1.467,753,2.363,754,2.363,809,2.955,823,1.467,843,1.798,870,3.633,946,1.173,947,1.07,974,2.955,1024,1.981,1034,2.357,1035,2.357,1037,2.213,1039,1.3,1045,1.798,1053,2.483,1060,1.173,1075,3.384,1154,1.885,1167,1.025,1169,1.885,1201,2.357,1207,3.172,1208,3.81,1209,3.81,1296,1.891,1349,3.039,1350,1.891,1372,4.363,1373,3.81,1374,1.891,1376,1.891,1377,3.039,1378,1.891,1393,1.377,1409,1.891,1445,3.039,1456,3.039,1460,2.357,1461,2.357,1463,1.377,1469,1.575,1486,2.531,1633,1.71,1725,3.497,1795,1.891,1867,1.71,1922,3.445,1924,1.891,1941,1.71,1951,1.71,1952,1.71,1958,4.363,1959,4.363,1960,4.363,1961,1.71,2050,3.81,2075,1.71,2076,3.81,2077,3.039,2082,1.891,2144,3.445,2160,5.998,2202,4.779,2212,3.81,2214,1.891,2216,1.891,2217,1.891,2218,1.891,2222,1.891,2223,1.891,2226,1.891,2227,1.891,2228,3.039,2229,3.039,2250,1.891,2251,1.891,2252,1.891,2253,1.891,2254,4.363,2255,4.363,2256,4.363,2257,4.363,2258,7.043,2259,3.48,2260,3.48,2261,2.166,2262,2.166,2263,2.166,2264,2.166,2265,2.166,2266,3.48,2267,2.166,2268,2.166,2269,2.166,2270,2.166,2271,2.166,2272,2.166,2273,2.166,2274,2.166,2275,2.166,2276,2.166,2277,2.166,2278,2.166,2279,2.166,2280,2.166,2281,2.166,2282,3.48,2283,3.48,2284,2.166,2285,2.166,2286,3.48,2287,2.166,2288,5.846,2289,2.166,2290,4.363,2291,4.363,2292,2.166,2293,2.166,2294,2.166,2295,2.166,2296,2.166,2297,2.166,2298,3.48,2299,3.48,2300,3.48,2301,3.48,2302,3.48,2303,3.48,2304,3.48,2305,3.48,2306,3.48,2307,3.48,2308,3.48,2309,3.48,2310,3.48,2311,3.48,2312,3.48,2313,3.48,2314,3.48,2315,3.48,2316,2.166,2317,2.166,2318,2.166,2319,2.166,2320,2.166]],["title/interfaces/_TestChamber.html",[782,0.299,1725,2.313]],["body/interfaces/_TestChamber.html",[3,0.119,4,0.104,9,0.076,24,0.18,25,0.013,27,0.158,28,0.404,37,0.901,53,0.787,92,0.009,93,0.009,103,0.348,104,0.696,106,1.309,121,0.962,134,0.72,137,1.449,152,2.19,166,2.433,180,1.247,204,4.22,206,1.887,208,2.347,210,2.413,251,2.322,334,2.708,344,2.697,353,3.373,356,2.515,364,5.022,368,4.451,376,2.602,382,3.236,398,4.594,513,2.97,711,1.871,782,0.33,784,1.168,868,5.206,934,2.881,935,2.515,981,2.857,1007,3.267,1111,3.237,1200,3.267,1207,5.182,1725,3.393,1973,3.548,1974,6.475,1975,6.475,1976,6.475,1988,4.707,1989,3.924,1990,3.924,1991,3.924,1992,3.924,1993,5.206,1994,3.924,1995,3.924,1996,6.222,1997,6.222,1998,3.924,1999,3.924,2000,3.924,2001,3.924,2002,3.924,2321,6.691]],["title/interfaces/_TestResultDeep.html",[782,0.299,1125,1.846]],["body/interfaces/_TestResultDeep.html",[3,0.106,4,0.093,9,0.067,24,0.16,25,0.013,27,0.209,92,0.008,93,0.008,103,0.309,104,0.643,106,1.263,134,0.683,137,1.413,208,2.254,210,2.298,289,1.615,293,1.556,356,2.368,383,2.492,388,2.226,509,2.353,513,3.175,711,1.925,715,1.743,736,3.445,782,0.58,784,1.038,916,1.352,934,2.547,935,2.368,1094,1.973,1095,2.981,1096,3.254,1097,2.368,1098,2.844,1099,2.981,1100,3.736,1101,3.9,1102,3.736,1103,3.9,1104,1.929,1105,1.973,1106,3.518,1107,3.679,1108,3.518,1109,2.063,1110,2.605,1111,1.814,1112,2.844,1113,2.063,1114,2.063,1115,2.063,1116,2.063,1117,2.063,1118,2.063,1119,2.063,1120,3.213,1121,1.556,1122,1.449,1123,2.063,1124,2.063,1125,2.5,1126,3.354,1127,3.354,1128,3.354,1129,3.354,1130,3.234,1131,2.063,1132,2.063,1133,2.063,1134,2.5,1135,1.973,1136,1.973,1137,1.973,1138,2.063,1139,2.063,1140,2.063,1141,2.063,1142,1.89,1143,1.814]],["title/interfaces/_TestResultLight.html",[715,1.774,782,0.299]],["body/interfaces/_TestResultLight.html",[3,0.11,4,0.096,9,0.07,24,0.165,25,0.013,27,0.211,92,0.008,93,0.008,103,0.32,104,0.658,106,1.259,134,0.664,137,1.418,208,2.281,210,1.399,289,1.671,293,1.611,356,1.554,383,2.519,388,2.279,509,2.372,513,3.097,711,1.931,715,2.46,736,3.468,782,0.584,784,1.075,916,1.399,934,1.671,935,1.554,1094,2.042,1095,3.035,1096,3.313,1097,2.411,1098,2.912,1099,3.035,1100,3.761,1101,3.926,1102,3.761,1103,3.926,1104,1.975,1105,2.042,1106,3.561,1107,3.724,1108,3.561,1109,3.558,1110,3.26,1111,3.128,1112,2.912,1113,2.135,1114,2.135,1115,2.135,1116,2.135,1117,2.135,1118,2.135,1119,2.135,1120,2.667,1121,1.611,1122,1.5,1123,2.135,1124,2.135,1125,1.877,1126,2.042,1127,2.042,1128,2.042,1129,2.042,1130,3.274,1131,2.135,1132,2.135,1133,2.135,1134,2.56,1135,2.042,1136,2.042,1137,2.042,1138,2.135,1139,2.135,1140,2.135,1141,2.135,1142,1.956,1143,1.877]],["title/interfaces/_User.html",[157,2.1,782,0.299]],["body/interfaces/_User.html",[3,0.132,4,0.116,9,0.084,24,0.314,25,0.013,26,0.63,27,0.186,28,0.448,37,0.932,53,1.117,92,0.009,93,0.009,103,0.386,104,0.745,106,1.194,125,2.575,134,0.603,136,2.991,137,1.408,141,3.295,157,3.295,169,1.476,171,1.687,206,3.113,208,2.426,210,1.687,226,1.942,237,1.631,353,2.359,356,1.873,453,2.015,491,2.462,509,1.526,572,2.575,587,2.836,588,2.575,597,2.698,663,4.055,664,3.168,665,2.397,667,2.836,668,2.575,669,2.998,782,0.468,784,1.296,850,2.698,898,3.63,900,2.836,903,2.991,904,3.828,917,3.375,918,4.319,919,3.828,920,3.375,921,3.375,922,3.375,924,4.764,927,3.375,928,4.319,929,4.319,931,3.375,934,2.015,935,1.873,936,3.375,944,3.828,945,3.375,946,2.698,947,2.462,948,2.991,949,2.991,950,2.991,951,2.991,952,2.991,953,2.991,2074,3.624,2182,3.624,2186,3.935,2190,3.935,2192,5.855,2193,5.554,2194,3.935,2195,3.935,2196,3.935,2197,3.935,2198,3.935]],["title/interfaces/_UserLight.html",[353,1.924,782,0.299]],["body/interfaces/_UserLight.html",[3,0.131,4,0.115,9,0.083,24,0.313,25,0.013,26,0.623,27,0.185,28,0.443,37,0.928,53,1.11,92,0.009,93,0.009,103,0.382,104,0.74,106,1.191,125,2.547,134,0.6,136,2.959,137,1.388,141,3.272,157,2.547,169,1.46,171,1.669,206,3.101,208,2.417,210,2.5,226,1.921,237,1.613,353,2.998,356,2.631,453,1.993,491,2.435,509,1.509,572,2.547,587,2.806,588,2.547,597,2.669,663,4.027,664,3.134,665,2.381,667,2.806,668,2.547,669,2.986,782,0.465,784,1.282,850,2.669,898,3.605,900,2.806,903,2.959,904,3.801,917,3.339,918,4.29,919,3.801,920,3.339,921,3.339,922,3.339,924,4.739,927,3.339,928,4.29,929,4.29,931,3.339,934,2.829,935,2.631,936,3.339,944,3.801,945,3.339,946,2.669,947,2.435,948,2.959,949,2.959,950,2.959,951,2.959,952,2.959,953,2.959,2074,3.585,2182,3.585,2186,3.892,2190,3.892,2192,3.892,2193,5.525,2194,3.892,2195,3.892,2196,3.892,2197,3.892,2198,3.892]],["title/coverage.html",[2322,4.865]],["body/coverage.html",[0,0.716,1,0.903,9,0.058,10,4.323,11,2.526,12,1.83,13,2.526,14,3.94,25,0.013,28,0.574,39,0.903,41,0.903,42,1.661,44,0.933,46,0.903,48,0.874,50,0.903,51,0.933,53,1.023,54,0.874,56,0.903,59,0.903,61,0.903,64,0.903,66,0.903,68,0.903,69,0.903,70,0.933,73,0.933,75,0.846,77,0.933,79,0.903,81,1.297,82,0.903,83,0.903,85,0.903,87,0.903,88,0.903,92,0.007,93,0.007,94,3.033,95,2.526,96,4.246,105,1.644,123,2.085,125,1.795,127,1.644,134,0.298,148,2.209,150,2.353,157,1.795,237,2.836,264,2.353,330,4.323,331,2.526,332,2.526,333,3.94,339,1.795,344,2.085,351,2.702,353,1.644,388,1.405,395,2.353,397,4.246,399,2.353,490,3.033,498,2.353,504,2.526,572,2.578,578,2.743,581,2.743,594,2.526,601,2.526,619,2.353,623,2.526,635,2.353,640,2.353,651,2.743,653,3.033,665,2.726,677,3.94,690,3.628,691,2.526,692,2.526,695,4.767,696,4.357,715,1.516,772,2.353,773,3.955,774,3.955,776,2.743,777,2.743,778,3.94,782,0.616,783,2.526,785,3.94,789,2.353,792,2.209,856,3.94,890,3.033,916,1.176,954,3.033,963,3.033,1086,2.526,1089,2.526,1094,3.788,1099,1.644,1104,1.217,1110,1.644,1120,1.644,1122,1.26,1125,1.578,1130,1.578,1134,1.578,1142,1.644,1143,1.578,1144,1.881,1145,4.017,1151,1.795,1153,1.795,1156,1.795,1160,1.795,1161,1.795,1177,4.641,1410,3.033,1411,3.033,1500,3.033,1501,3.033,1515,3.033,1542,3.033,1543,3.94,1556,3.033,1559,3.033,1560,3.033,1641,3.033,1651,3.033,1656,3.033,1712,2.526,1713,2.526,1725,1.977,1736,3.033,1737,3.94,1764,2.743,1815,3.033,1962,3.033,1973,3.94,2003,3.033,2075,3.94,2160,3.628,2162,2.743,2171,3.033,2176,3.033,2182,4.246,2199,3.033,2247,3.033,2322,3.033,2323,3.474,2324,3.474,2325,7.251,2326,4.99,2327,7.038,2328,5.84,2329,7.038,2330,7.419,2331,7.555,2332,7.668,2333,3.474,2334,3.474,2335,3.474,2336,3.474,2337,3.474,2338,4.99,2339,3.474,2340,6.761,2341,4.99,2342,6.761,2343,4.99,2344,3.474,2345,3.474,2346,4.357,2347,4.357,2348,3.474]],["title/dependencies.html",[553,2.786,2349,2.67]],["body/dependencies.html",[9,0.097,25,0.013,26,0.732,92,0.01,93,0.01,163,2.176,169,1.714,256,2.526,413,2.629,553,3.294,565,4.283,567,6.112,570,5.527,587,3.294,588,2.99,590,4.075,591,4.57,592,4.208,604,3.294,771,4.57,772,3.92,780,4.208,1184,5.054,1186,5.054,1570,5.054,1623,5.054,1917,5.054,2350,8.41,2351,5.788,2352,5.788,2353,5.788,2354,5.788,2355,5.788,2356,5.788,2357,5.788,2358,5.788,2359,5.788,2360,5.788,2361,5.788,2362,5.788,2363,5.788,2364,5.788,2365,5.788,2366,5.788,2367,5.788,2368,5.788,2369,5.788,2370,5.788,2371,5.788,2372,5.788,2373,5.788,2374,5.788]],["title/index.html",[103,0.262,823,2.291,2375,3.382]],["body/index.html",[0,0.639,4,0.132,18,1.474,25,0.01,37,0.689,42,1.214,53,0.993,81,2.019,92,0.01,93,0.01,97,1.625,253,4.742,266,3.606,271,6.513,368,3.404,403,3.768,480,3.606,484,2.684,515,4.952,588,3.854,590,4.439,736,3.018,833,4.478,974,3.841,981,3.606,986,3.841,1758,4.952,1886,4.952,1970,6.037,1988,6.393,2108,4.952,2129,4.952,2349,4.478,2376,6.915,2377,5.672,2378,7.46,2379,5.672,2380,6.915,2381,5.672,2382,5.672,2383,5.672,2384,5.672,2385,5.672,2386,5.672,2387,5.672,2388,5.672,2389,5.672,2390,5.672,2391,7.766,2392,5.672,2393,5.672,2394,5.672,2395,6.915,2396,6.915,2397,5.672,2398,5.672,2399,5.672,2400,6.915,2401,5.672,2402,5.672,2403,7.46,2404,5.672,2405,5.672,2406,4.478,2407,5.672]],["title/modules.html",[552,2.432]],["body/modules.html",[25,0.011,92,0.011,93,0.011,386,6.431,418,5.923,551,4.485,552,2.692,558,4.178,559,3.511,570,6.431,680,4.485,684,4.178,763,4.485,767,4.178,1079,4.485,1083,4.178,2150,4.485,2154,4.178,2408,8.518,2409,8.256,2410,8.256]],["title/overview.html",[2406,4.399]],["body/overview.html",[1,1.739,2,1.331,25,0.013,39,1.739,41,1.739,44,2.088,46,1.739,48,1.684,50,1.739,51,1.797,54,1.684,56,1.739,59,1.739,61,1.739,64,1.739,66,1.739,68,1.739,69,1.739,70,1.797,73,1.797,75,1.63,77,1.797,79,1.739,82,1.739,83,1.739,85,1.739,87,1.739,88,1.739,92,0.009,93,0.009,180,1.247,396,3.043,484,2.127,551,6.198,552,1.961,553,3.393,554,3.924,555,3.924,556,3.924,557,3.924,558,4.531,559,4.338,560,3.79,561,2.857,622,2.557,651,3.548,680,5.957,681,3.924,682,3.924,683,3.924,684,4.531,763,6.109,764,3.924,765,3.924,766,3.924,767,4.531,768,5.392,784,1.168,889,2.557,1079,6.071,1080,3.924,1081,3.924,1082,3.924,1083,4.531,1167,2.127,1171,2.433,2150,6.071,2151,3.924,2152,3.924,2153,3.924,2154,4.531,2406,3.548,2411,4.494,2412,4.494,2413,4.494,2414,4.494]],["title/properties.html",[104,0.572,2349,2.67]],["body/properties.html",[25,0.012,92,0.011,93,0.011,104,0.781,368,4.014,2415,6.688]],["title/routes.html",[622,3.171]],["body/routes.html",[25,0.011,92,0.011,93,0.011,622,3.827]],["title/miscellaneous/variables.html",[2416,2.953,2417,4.274]],["body/miscellaneous/variables.html",[9,0.062,25,0.013,37,0.736,92,0.008,93,0.008,103,0.287,134,0.714,137,1.344,139,2.515,140,2.495,153,1.558,180,2.22,202,3.113,256,3.139,258,3.128,262,3.102,275,4.188,322,3.281,376,2.87,389,1.917,403,2.475,499,1.833,535,3.428,572,3.397,607,4.566,657,4.129,835,3.716,1010,3.895,1022,3.226,1097,2.276,1104,1.3,1122,1.897,1145,2.009,1153,3.818,1154,4.469,1155,4.697,1156,3.716,1157,2.976,1158,2.111,1159,2.976,1160,3.581,1161,1.917,1162,3.446,1163,2.111,1164,3.56,1165,2.976,1166,2.111,1167,3.112,1168,2.976,1169,2.831,1170,2.976,1171,2.831,1172,3.742,1173,2.976,1174,3.446,1175,2.111,1744,4.129,2346,3.239,2347,3.239,2416,3.239,2417,3.239,2418,5.229,2419,5.229,2420,3.71,2421,5.229,2422,6.576,2423,6.576,2424,7.547,2425,5.229,2426,5.229,2427,5.229,2428,6.576,2429,5.229,2430,7.547,2431,7.193,2432,5.229]]],"invertedIndex":[["",{"_index":25,"title":{},"body":{"components/AddBatteryPackComponent.html":{},"components/AddCellsComponent.html":{},"components/AddTestChamberComponent.html":{},"classes/Anim.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"components/BatteryPacksComponent.html":{},"modules/BatteryPacksModule.html":{},"modules/BatteryPacksRoutingModule.html":{},"components/BatteryTestComponent.html":{},"modules/BatteryTestModule.html":{},"modules/BatteryTestRoutingModule.html":{},"interfaces/BreadCrumbs.html":{},"interfaces/Cell.html":{},"classes/CellClass.html":{},"injectables/CellService.html":{},"interfaces/CellTemplate.html":{},"components/CellsComponent.html":{},"modules/CellsModule.html":{},"modules/CellsRoutingModule.html":{},"interfaces/Channel.html":{},"interfaces/ChannelFields.html":{},"interfaces/Charts.html":{},"injectables/ComponentStoreService.html":{},"components/DashboardComponent.html":{},"components/DeviceDataComponent.html":{},"interfaces/DeviceDataLight.html":{},"injectables/DeviceDataService.html":{},"components/DevicesComponent.html":{},"components/DevicesDefaultComponent.html":{},"components/DocsComponent.html":{},"classes/Dot.html":{},"interfaces/DriveCycle.html":{},"components/EditBatteryPackComponent.html":{},"components/EditCellsComponent.html":{},"components/EditTestChamberComponent.html":{},"interfaces/FileField.html":{},"components/FootNavComponent.html":{},"components/HeadNavComponent.html":{},"components/HomeComponent.html":{},"interfaces/InputField.html":{},"interfaces/MeasuredParameters.html":{},"components/NoResultComponent.html":{},"interfaces/PayLoad.html":{},"interfaces/QuickResponseMeasurement.html":{},"interfaces/RowInfo.html":{},"interfaces/SelectField.html":{},"interfaces/SensorObj.html":{},"modules/SharedModule.html":{},"components/ShowAllTestsResultComponent.html":{},"interfaces/Test.html":{},"classes/TestChamber.html":{},"injectables/TestChamberService.html":{},"components/TestChambersComponent.html":{},"modules/TestChambersModule.html":{},"modules/TestChambersRoutingModule.html":{},"interfaces/TestChannel.html":{},"interfaces/TestChannelDeepChannel.html":{},"injectables/TestDataService.html":{},"interfaces/TestFormat.html":{},"interfaces/TestResultDocument.html":{},"injectables/TestService.html":{},"interfaces/TextField.html":{},"interfaces/ToastMsg.html":{},"injectables/UserService.html":{},"components/ViewBatteryPacksComponent.html":{},"components/ViewCellsComponent.html":{},"components/ViewTestChambersComponent.html":{},"interfaces/_TestChamber.html":{},"interfaces/_TestResultDeep.html":{},"interfaces/_TestResultLight.html":{},"interfaces/_User.html":{},"interfaces/_UserLight.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":237,"title":{},"body":{"components/AddCellsComponent.html":{},"components/AddTestChamberComponent.html":{},"injectables/CellService.html":{},"components/CellsComponent.html":{},"interfaces/Charts.html":{},"components/DashboardComponent.html":{},"injectables/DeviceDataService.html":{},"components/DevicesDefaultComponent.html":{},"components/EditCellsComponent.html":{},"components/EditTestChamberComponent.html":{},"components/FootNavComponent.html":{},"components/HeadNavComponent.html":{},"components/ShowAllTestsResultComponent.html":{},"injectables/TestChamberService.html":{},"components/TestChambersComponent.html":{},"injectables/TestDataService.html":{},"injectables/UserService.html":{},"components/ViewCellsComponent.html":{},"components/ViewTestChambersComponent.html":{},"interfaces/_User.html":{},"interfaces/_UserLight.html":{},"coverage.html":{}}}],["0.0.0",{"_index":2415,"title":{},"body":{"properties.html":{}}}],["0.06",{"_index":2250,"title":{},"body":{"components/ViewCellsComponent.html":{},"components/ViewTestChambersComponent.html":{}}}],["0.11.4",{"_index":2374,"title":{},"body":{"dependencies.html":{}}}],["0.154",{"_index":1492,"title":{},"body":{"components/DashboardComponent.html":{}}}],["0.19",{"_index":1868,"title":{},"body":{"components/HeadNavComponent.html":{}}}],["0.2",{"_index":1074,"title":{},"body":{"components/CellsComponent.html":{},"components/HeadNavComponent.html":{},"components/TestChambersComponent.html":{}}}],["0.238",{"_index":1779,"title":{},"body":{"components/FootNavComponent.html":{}}}],["0.275",{"_index":1634,"title":{},"body":{"components/DevicesDefaultComponent.html":{}}}],["0.358",{"_index":1629,"title":{},"body":{"components/DevicesDefaultComponent.html":{}}}],["0.36",{"_index":1462,"title":{},"body":{"components/DashboardComponent.html":{}}}],["0.4",{"_index":1072,"title":{},"body":{"components/CellsComponent.html":{},"components/TestChambersComponent.html":{}}}],["0.411",{"_index":1473,"title":{},"body":{"components/DashboardComponent.html":{}}}],["0.452",{"_index":759,"title":{},"body":{"components/BatteryTestComponent.html":{}}}],["0.473",{"_index":1487,"title":{},"body":{"components/DashboardComponent.html":{}}}],["0.559",{"_index":1468,"title":{},"body":{"components/DashboardComponent.html":{}}}],["0.651",{"_index":1860,"title":{},"body":{"components/HeadNavComponent.html":{}}}],["0.75",{"_index":1030,"title":{},"body":{"components/CellsComponent.html":{},"components/TestChambersComponent.html":{}}}],["0.783",{"_index":1480,"title":{},"body":{"components/DashboardComponent.html":{}}}],["0/1",{"_index":2332,"title":{},"body":{"coverage.html":{}}}],["0/10",{"_index":2344,"title":{},"body":{"coverage.html":{}}}],["0/11",{"_index":2324,"title":{},"body":{"coverage.html":{}}}],["0/12",{"_index":2325,"title":{},"body":{"coverage.html":{}}}],["0/14",{"_index":2335,"title":{},"body":{"coverage.html":{}}}],["0/15",{"_index":2328,"title":{},"body":{"coverage.html":{}}}],["0/16",{"_index":2333,"title":{},"body":{"coverage.html":{}}}],["0/17",{"_index":2343,"title":{},"body":{"coverage.html":{}}}],["0/18",{"_index":2339,"title":{},"body":{"coverage.html":{}}}],["0/19",{"_index":2336,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":2345,"title":{},"body":{"coverage.html":{}}}],["0/21",{"_index":2337,"title":{},"body":{"coverage.html":{}}}],["0/23",{"_index":2334,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":2327,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":2330,"title":{},"body":{"coverage.html":{}}}],["0/41",{"_index":2326,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":2329,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":2331,"title":{},"body":{"coverage.html":{}}}],["0/7",{"_index":2341,"title":{},"body":{"coverage.html":{}}}],["0/8",{"_index":2338,"title":{},"body":{"coverage.html":{}}}],["0/9",{"_index":2340,"title":{},"body":{"coverage.html":{}}}],["010305cf",{"_index":747,"title":{},"body":{"components/BatteryTestComponent.html":{},"components/DevicesDefaultComponent.html":{}}}],["060b39",{"_index":1620,"title":{},"body":{"components/DevicesDefaultComponent.html":{}}}],["0px",{"_index":311,"title":{},"body":{"components/AddCellsComponent.html":{},"components/AddTestChamberComponent.html":{},"components/DashboardComponent.html":{},"components/EditCellsComponent.html":{},"components/EditTestChamberComponent.html":{},"components/FootNavComponent.html":{},"components/HeadNavComponent.html":{},"components/HomeComponent.html":{},"components/ViewCellsComponent.html":{},"components/ViewTestChambersComponent.html":{}}}],["1",{"_index":180,"title":{},"body":{"components/AddCellsComponent.html":{},"components/AddTestChamberComponent.html":{},"classes/Anim.html":{},"interfaces/BreadCrumbs.html":{},"components/CellsComponent.html":{},"interfaces/ChannelFields.html":{},"interfaces/Charts.html":{},"components/DashboardComponent.html":{},"components/DevicesDefaultComponent.html":{},"classes/Dot.html":{},"components/EditCellsComponent.html":{},"components/EditTestChamberComponent.html":{},"interfaces/FileField.html":{},"components/HomeComponent.html":{},"interfaces/InputField.html":{},"interfaces/PayLoad.html":{},"interfaces/SelectField.html":{},"components/ShowAllTestsResultComponent.html":{},"classes/TestChamber.html":{},"components/TestChambersComponent.html":{},"interfaces/TestFormat.html":{},"interfaces/TextField.html":{},"components/ViewCellsComponent.html":{},"components/ViewTestChambersComponent.html":{},"interfaces/_TestChamber.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["1.1.19",{"_index":2356,"title":{},"body":{"dependencies.html":{}}}],["1.10.0",{"_index":2354,"title":{},"body":{"dependencies.html":{}}}],["1.10.3",{"_index":2363,"title":{},"body":{"dependencies.html":{}}}],["1.5",{"_index":1047,"title":{},"body":{"components/CellsComponent.html":{},"components/TestChambersComponent.html":{}}}],["1.6.0",{"_index":2366,"title":{},"body":{"dependencies.html":{}}}],["10",{"_index":449,"title":{},"body":{"classes/Anim.html":{},"components/AppComponent.html":{},"components/DashboardComponent.html":{},"classes/Dot.html":{},"components/HomeComponent.html":{},"components/ShowAllTestsResultComponent.html":{},"components/ViewCellsComponent.html":{}}}],["10.0.3",{"_index":2358,"title":{},"body":{"dependencies.html":{}}}],["100",{"_index":762,"title":{},"body":{"components/BatteryTestComponent.html":{},"components/CellsComponent.html":{},"components/DevicesDefaultComponent.html":{},"components/FootNavComponent.html":{},"components/HeadNavComponent.html":{},"components/TestChambersComponent.html":{}}}],["1000",{"_index":1211,"title":{},"body":{"interfaces/Charts.html":{}}}],["10000",{"_index":712,"title":{},"body":{"components/BatteryTestComponent.html":{},"interfaces/Charts.html":{},"components/EditCellsComponent.html":{},"components/EditTestChamberComponent.html":{},"injectables/TestChamberService.html":{},"components/ViewTestChambersComponent.html":{}}}],["100px",{"_index":1632,"title":{},"body":{"components/DevicesDefaultComponent.html":{}}}],["109",{"_index":1862,"title":{},"body":{"components/HeadNavComponent.html":{}}}],["10px",{"_index":1045,"title":{},"body":{"components/CellsComponent.html":{},"components/DashboardComponent.html":{},"components/DevicesDefaultComponent.html":{},"components/EditCellsComponent.html":{},"components/EditTestChamberComponent.html":{},"components/FootNavComponent.html":{},"components/HomeComponent.html":{},"components/TestChambersComponent.html":{},"components/ViewCellsComponent.html":{},"components/ViewTestChambersComponent.html":{}}}],["11",{"_index":2411,"title":{},"body":{"overview.html":{}}}],["113",{"_index":1042,"title":{},"body":{"components/CellsComponent.html":{},"components/TestChambersComponent.html":{}}}],["117",{"_index":757,"title":{},"body":{"components/BatteryTestComponent.html":{}}}],["120",{"_index":758,"title":{},"body":{"components/BatteryTestComponent.html":{}}}],["125",{"_index":1627,"title":{},"body":{"components/DevicesDefaultComponent.html":{}}}],["127",{"_index":1797,"title":{},"body":{"components/FootNavComponent.html":{}}}],["128",{"_index":1486,"title":{},"body":{"components/DashboardComponent.html":{},"components/DevicesDefaultComponent.html":{},"components/ViewCellsComponent.html":{},"components/ViewTestChambersComponent.html":{}}}],["12px",{"_index":547,"title":{},"body":{"components/AppComponent.html":{}}}],["13",{"_index":548,"title":{},"body":{"components/AppComponent.html":{}}}],["13.3.7",{"_index":2379,"title":{},"body":{"index.html":{}}}],["136",{"_index":1777,"title":{},"body":{"components/FootNavComponent.html":{}}}],["14.0.1",{"_index":2357,"title":{},"body":{"dependencies.html":{}}}],["146",{"_index":1807,"title":{},"body":{"components/FootNavComponent.html":{}}}],["147",{"_index":1478,"title":{},"body":{"components/DashboardComponent.html":{}}}],["15.1.4",{"_index":2350,"title":{},"body":{"dependencies.html":{}}}],["1500",{"_index":1583,"title":{},"body":{"components/DevicesDefaultComponent.html":{}}}],["15000",{"_index":1945,"title":{},"body":{"components/ShowAllTestsResultComponent.html":{}}}],["150ms",{"_index":1800,"title":{},"body":{"components/FootNavComponent.html":{}}}],["153",{"_index":1778,"title":{},"body":{"components/FootNavComponent.html":{}}}],["15px",{"_index":1621,"title":{},"body":{"components/DevicesDefaultComponent.html":{}}}],["16",{"_index":2319,"title":{},"body":{"components/ViewTestChambersComponent.html":{}}}],["184",{"_index":1043,"title":{},"body":{"components/CellsComponent.html":{},"components/TestChambersComponent.html":{}}}],["185",{"_index":1863,"title":{},"body":{"components/HeadNavComponent.html":{}}}],["18px",{"_index":1054,"title":{},"body":{"components/CellsComponent.html":{},"components/TestChambersComponent.html":{}}}],["19151540",{"_index":1026,"title":{},"body":{"components/CellsComponent.html":{},"components/TestChambersComponent.html":{}}}],["193",{"_index":1479,"title":{},"body":{"components/DashboardComponent.html":{}}}],["1>.intro",{"_index":1902,"title":{},"body":{"components/HomeComponent.html":{}}}],["1px",{"_index":1460,"title":{},"body":{"components/DashboardComponent.html":{},"components/DevicesDefaultComponent.html":{},"components/FootNavComponent.html":{},"components/ViewCellsComponent.html":{},"components/ViewTestChambersComponent.html":{}}}],["1s",{"_index":1851,"title":{},"body":{"components/HeadNavComponent.html":{}}}],["2",{"_index":275,"title":{},"body":{"components/AddCellsComponent.html":{},"interfaces/ChannelFields.html":{},"interfaces/FileField.html":{},"components/HeadNavComponent.html":{},"interfaces/InputField.html":{},"interfaces/PayLoad.html":{},"interfaces/SelectField.html":{},"interfaces/TestFormat.html":{},"interfaces/TextField.html":{},"miscellaneous/variables.html":{}}}],["2.0.5",{"_index":2365,"title":{},"body":{"dependencies.html":{}}}],["2.10.2",{"_index":2360,"title":{},"body":{"dependencies.html":{}}}],["2.3.0",{"_index":2372,"title":{},"body":{"dependencies.html":{}}}],["20",{"_index":1580,"title":{},"body":{"components/DevicesDefaultComponent.html":{},"components/FootNavComponent.html":{}}}],["2000",{"_index":1296,"title":{},"body":{"interfaces/Charts.html":{},"components/ViewTestChambersComponent.html":{}}}],["200px",{"_index":1025,"title":{},"body":{"components/CellsComponent.html":{},"components/TestChambersComponent.html":{}}}],["20px",{"_index":538,"title":{},"body":{"components/AppComponent.html":{},"components/BatteryTestComponent.html":{},"components/CellsComponent.html":{},"components/DashboardComponent.html":{},"components/DevicesDefaultComponent.html":{},"components/EditCellsComponent.html":{},"components/EditTestChamberComponent.html":{},"components/FootNavComponent.html":{},"components/HeadNavComponent.html":{},"components/HomeComponent.html":{},"components/TestChambersComponent.html":{},"components/ViewCellsComponent.html":{},"components/ViewTestChambersComponent.html":{}}}],["213",{"_index":1798,"title":{},"body":{"components/FootNavComponent.html":{}}}],["216",{"_index":1471,"title":{},"body":{"components/DashboardComponent.html":{}}}],["230",{"_index":1472,"title":{},"body":{"components/DashboardComponent.html":{}}}],["236",{"_index":1491,"title":{},"body":{"components/DashboardComponent.html":{}}}],["25",{"_index":1174,"title":{},"body":{"interfaces/ChannelFields.html":{},"interfaces/FileField.html":{},"interfaces/InputField.html":{},"interfaces/PayLoad.html":{},"interfaces/SelectField.html":{},"interfaces/TestFormat.html":{},"interfaces/TextField.html":{},"miscellaneous/variables.html":{}}}],["255",{"_index":1071,"title":{},"body":{"components/CellsComponent.html":{},"components/DashboardComponent.html":{},"components/TestChambersComponent.html":{}}}],["26",{"_index":2412,"title":{},"body":{"overview.html":{}}}],["28",{"_index":2413,"title":{},"body":{"overview.html":{}}}],["28px",{"_index":1033,"title":{},"body":{"components/CellsComponent.html":{},"components/TestChambersComponent.html":{}}}],["2>.intro",{"_index":1908,"title":{},"body":{"components/HomeComponent.html":{}}}],["2a4d0778",{"_index":1622,"title":{},"body":{"components/DevicesDefaultComponent.html":{}}}],["2px",{"_index":1060,"title":{},"body":{"components/CellsComponent.html":{},"components/DashboardComponent.html":{},"components/DevicesDefaultComponent.html":{},"components/EditCellsComponent.html":{},"components/EditTestChamberComponent.html":{},"components/FootNavComponent.html":{},"components/TestChambersComponent.html":{},"components/ViewCellsComponent.html":{},"components/ViewTestChambersComponent.html":{}}}],["3",{"_index":835,"title":{},"body":{"interfaces/BreadCrumbs.html":{},"interfaces/ChannelFields.html":{},"components/DashboardComponent.html":{},"interfaces/FileField.html":{},"interfaces/InputField.html":{},"interfaces/PayLoad.html":{},"interfaces/SelectField.html":{},"interfaces/TestFormat.html":{},"interfaces/TextField.html":{},"miscellaneous/variables.html":{}}}],["3.0.11",{"_index":2367,"title":{},"body":{"dependencies.html":{}}}],["3.8.0",{"_index":2364,"title":{},"body":{"dependencies.html":{}}}],["300",{"_index":611,"title":{},"body":{"modules/AppModule.html":{}}}],["300px",{"_index":1017,"title":{},"body":{"components/CellsComponent.html":{},"components/DevicesDefaultComponent.html":{},"components/HomeComponent.html":{},"components/TestChambersComponent.html":{}}}],["30px",{"_index":1810,"title":{},"body":{"components/FootNavComponent.html":{},"components/HeadNavComponent.html":{}}}],["333",{"_index":1055,"title":{},"body":{"components/CellsComponent.html":{},"components/TestChambersComponent.html":{}}}],["37",{"_index":1028,"title":{},"body":{"components/CellsComponent.html":{},"components/TestChambersComponent.html":{}}}],["4",{"_index":1167,"title":{},"body":{"interfaces/ChannelFields.html":{},"interfaces/FileField.html":{},"components/HeadNavComponent.html":{},"interfaces/InputField.html":{},"interfaces/PayLoad.html":{},"interfaces/SelectField.html":{},"interfaces/TestFormat.html":{},"interfaces/TextField.html":{},"components/ViewCellsComponent.html":{},"components/ViewTestChambersComponent.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["4000",{"_index":455,"title":{},"body":{"classes/Anim.html":{},"classes/Dot.html":{},"components/HomeComponent.html":{}}}],["40px",{"_index":1031,"title":{},"body":{"components/CellsComponent.html":{},"components/DevicesDefaultComponent.html":{},"components/TestChambersComponent.html":{}}}],["41",{"_index":1029,"title":{},"body":{"components/CellsComponent.html":{},"components/HeadNavComponent.html":{},"components/TestChambersComponent.html":{}}}],["45",{"_index":1790,"title":{},"body":{"components/FootNavComponent.html":{}}}],["45deg",{"_index":1069,"title":{},"body":{"components/CellsComponent.html":{},"components/TestChambersComponent.html":{}}}],["47",{"_index":1857,"title":{},"body":{"components/HeadNavComponent.html":{}}}],["48",{"_index":2414,"title":{},"body":{"overview.html":{}}}],["49",{"_index":1806,"title":{},"body":{"components/FootNavComponent.html":{}}}],["4px",{"_index":1494,"title":{},"body":{"components/DashboardComponent.html":{},"components/HeadNavComponent.html":{}}}],["5",{"_index":1169,"title":{},"body":{"interfaces/ChannelFields.html":{},"interfaces/FileField.html":{},"interfaces/InputField.html":{},"interfaces/PayLoad.html":{},"interfaces/SelectField.html":{},"interfaces/TestFormat.html":{},"interfaces/TextField.html":{},"components/ViewTestChambersComponent.html":{},"miscellaneous/variables.html":{}}}],["5.2.3",{"_index":2361,"title":{},"body":{"dependencies.html":{}}}],["5.3.2",{"_index":2369,"title":{},"body":{"dependencies.html":{}}}],["50",{"_index":1811,"title":{},"body":{"components/FootNavComponent.html":{},"components/HeadNavComponent.html":{}}}],["5000",{"_index":1425,"title":{},"body":{"injectables/ComponentStoreService.html":{}}}],["50px",{"_index":1050,"title":{},"body":{"components/CellsComponent.html":{},"components/FootNavComponent.html":{},"components/TestChambersComponent.html":{}}}],["53",{"_index":1794,"title":{},"body":{"components/FootNavComponent.html":{}}}],["5px",{"_index":752,"title":{},"body":{"components/BatteryTestComponent.html":{},"components/DashboardComponent.html":{},"components/HomeComponent.html":{},"components/ViewCellsComponent.html":{},"components/ViewTestChambersComponent.html":{}}}],["6",{"_index":1170,"title":{},"body":{"interfaces/ChannelFields.html":{},"interfaces/FileField.html":{},"interfaces/InputField.html":{},"interfaces/PayLoad.html":{},"interfaces/SelectField.html":{},"interfaces/TestFormat.html":{},"interfaces/TextField.html":{},"miscellaneous/variables.html":{}}}],["65",{"_index":2320,"title":{},"body":{"components/ViewTestChambersComponent.html":{}}}],["67",{"_index":1628,"title":{},"body":{"components/DevicesDefaultComponent.html":{}}}],["6px",{"_index":1867,"title":{},"body":{"components/HeadNavComponent.html":{},"components/ViewCellsComponent.html":{},"components/ViewTestChambersComponent.html":{}}}],["7",{"_index":1171,"title":{},"body":{"interfaces/ChannelFields.html":{},"interfaces/FileField.html":{},"interfaces/InputField.html":{},"interfaces/PayLoad.html":{},"interfaces/SelectField.html":{},"interfaces/TestFormat.html":{},"interfaces/TextField.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["7.5.0",{"_index":2370,"title":{},"body":{"dependencies.html":{}}}],["700",{"_index":1213,"title":{},"body":{"interfaces/Charts.html":{}}}],["8",{"_index":1400,"title":{},"body":{"interfaces/Charts.html":{}}}],["8px",{"_index":1630,"title":{},"body":{"components/DevicesDefaultComponent.html":{},"components/HeadNavComponent.html":{}}}],["_cellservice",{"_index":135,"title":{},"body":{"components/AddCellsComponent.html":{},"components/CellsComponent.html":{},"components/EditCellsComponent.html":{},"components/ViewCellsComponent.html":{}}}],["_componentstoreservice",{"_index":126,"title":{},"body":{"components/AddCellsComponent.html":{},"components/AddTestChamberComponent.html":{},"interfaces/Charts.html":{},"components/EditCellsComponent.html":{},"components/EditTestChamberComponent.html":{}}}],["_id",{"_index":208,"title":{},"body":{"components/AddCellsComponent.html":{},"components/AddTestChamberComponent.html":{},"interfaces/Cell.html":{},"classes/CellClass.html":{},"interfaces/CellTemplate.html":{},"interfaces/Channel.html":{},"components/EditCellsComponent.html":{},"components/EditTestChamberComponent.html":{},"interfaces/MeasuredParameters.html":{},"interfaces/QuickResponseMeasurement.html":{},"interfaces/RowInfo.html":{},"interfaces/SensorObj.html":{},"interfaces/Test.html":{},"classes/TestChamber.html":{},"interfaces/TestChannel.html":{},"interfaces/TestChannelDeepChannel.html":{},"interfaces/TestResultDocument.html":{},"injectables/UserService.html":{},"interfaces/_TestChamber.html":{},"interfaces/_TestResultDeep.html":{},"interfaces/_TestResultLight.html":{},"interfaces/_User.html":{},"interfaces/_UserLight.html":{}}}],["_msg",{"_index":1427,"title":{},"body":{"injectables/ComponentStoreService.html":{}}}],["_testchamber",{"_index":1725,"title":{"interfaces/_TestChamber.html":{}},"body":{"components/EditTestChamberComponent.html":{},"classes/TestChamber.html":{},"injectables/TestChamberService.html":{},"components/TestChambersComponent.html":{},"components/ViewTestChambersComponent.html":{},"interfaces/_TestChamber.html":{},"coverage.html":{}}}],["_testchamberservice",{"_index":338,"title":{},"body":{"components/AddTestChamberComponent.html":{},"components/BatteryTestComponent.html":{},"interfaces/Charts.html":{},"components/EditTestChamberComponent.html":{},"components/ShowAllTestsResultComponent.html":{},"components/ViewTestChambersComponent.html":{}}}],["_testresultdeep",{"_index":1125,"title":{"interfaces/_TestResultDeep.html":{}},"body":{"interfaces/Channel.html":{},"interfaces/Charts.html":{},"interfaces/MeasuredParameters.html":{},"interfaces/QuickResponseMeasurement.html":{},"interfaces/RowInfo.html":{},"interfaces/SensorObj.html":{},"interfaces/TestChannel.html":{},"interfaces/TestChannelDeepChannel.html":{},"interfaces/TestResultDocument.html":{},"interfaces/_TestResultDeep.html":{},"interfaces/_TestResultLight.html":{},"coverage.html":{}}}],["_testresultlight",{"_index":715,"title":{"interfaces/_TestResultLight.html":{}},"body":{"components/BatteryTestComponent.html":{},"interfaces/Channel.html":{},"interfaces/MeasuredParameters.html":{},"interfaces/QuickResponseMeasurement.html":{},"interfaces/RowInfo.html":{},"interfaces/SensorObj.html":{},"components/ShowAllTestsResultComponent.html":{},"interfaces/TestChannel.html":{},"interfaces/TestChannelDeepChannel.html":{},"interfaces/TestResultDocument.html":{},"interfaces/_TestResultDeep.html":{},"interfaces/_TestResultLight.html":{},"coverage.html":{}}}],["_testservice",{"_index":503,"title":{},"body":{"components/AppComponent.html":{}}}],["_user",{"_index":157,"title":{"interfaces/_User.html":{}},"body":{"components/AddCellsComponent.html":{},"components/AddTestChamberComponent.html":{},"components/EditCellsComponent.html":{},"components/EditTestChamberComponent.html":{},"components/HeadNavComponent.html":{},"injectables/UserService.html":{},"interfaces/_User.html":{},"interfaces/_UserLight.html":{},"coverage.html":{}}}],["_userlight",{"_index":353,"title":{"interfaces/_UserLight.html":{}},"body":{"components/AddTestChamberComponent.html":{},"interfaces/Cell.html":{},"classes/CellClass.html":{},"components/EditCellsComponent.html":{},"components/EditTestChamberComponent.html":{},"classes/TestChamber.html":{},"injectables/UserService.html":{},"interfaces/_TestChamber.html":{},"interfaces/_User.html":{},"interfaces/_UserLight.html":{},"coverage.html":{}}}],["_userservice",{"_index":124,"title":{},"body":{"components/AddCellsComponent.html":{},"components/AddTestChamberComponent.html":{},"components/EditCellsComponent.html":{},"components/EditTestChamberComponent.html":{}}}],["a.active",{"_index":1488,"title":{},"body":{"components/DashboardComponent.html":{}}}],["a.disabled",{"_index":1481,"title":{},"body":{"components/DashboardComponent.html":{}}}],["a:hover",{"_index":1802,"title":{},"body":{"components/FootNavComponent.html":{}}}],["ability",{"_index":2092,"title":{},"body":{"components/TestChambersComponent.html":{}}}],["absolute",{"_index":1065,"title":{},"body":{"components/CellsComponent.html":{},"components/FootNavComponent.html":{},"components/TestChambersComponent.html":{}}}],["access",{"_index":269,"title":{},"body":{"components/AddCellsComponent.html":{},"components/AddTestChamberComponent.html":{},"injectables/CellService.html":{},"components/EditCellsComponent.html":{},"components/EditTestChamberComponent.html":{},"components/TestChambersComponent.html":{},"components/ViewCellsComponent.html":{},"components/ViewTestChambersComponent.html":{}}}],["accessed",{"_index":2109,"title":{},"body":{"components/TestChambersComponent.html":{}}}],["accesstype",{"_index":210,"title":{},"body":{"components/AddCellsComponent.html":{},"components/AddTestChamberComponent.html":{},"interfaces/Cell.html":{},"classes/CellClass.html":{},"interfaces/Channel.html":{},"components/EditCellsComponent.html":{},"components/EditTestChamberComponent.html":{},"interfaces/MeasuredParameters.html":{},"interfaces/QuickResponseMeasurement.html":{},"interfaces/RowInfo.html":{},"interfaces/SensorObj.html":{},"classes/TestChamber.html":{},"interfaces/TestChannel.html":{},"interfaces/TestChannelDeepChannel.html":{},"interfaces/TestResultDocument.html":{},"injectables/UserService.html":{},"interfaces/_TestChamber.html":{},"interfaces/_TestResultDeep.html":{},"interfaces/_TestResultLight.html":{},"interfaces/_User.html":{},"interfaces/_UserLight.html":{}}}],["accuracy",{"_index":2097,"title":{},"body":{"components/TestChambersComponent.html":{}}}],["accurately",{"_index":1592,"title":{},"body":{"components/DevicesDefaultComponent.html":{}}}],["activatedroute",{"_index":130,"title":{},"body":{"components/AddCellsComponent.html":{},"components/AddTestChamberComponent.html":{},"interfaces/Charts.html":{},"components/DeviceDataComponent.html":{},"components/EditCellsComponent.html":{},"components/EditTestChamberComponent.html":{}}}],["activatedroutesnapshot",{"_index":659,"title":{},"body":{"guards/AuthGuard.html":{}}}],["active",{"_index":787,"title":{},"body":{"interfaces/BreadCrumbs.html":{},"components/FootNavComponent.html":{},"components/HeadNavComponent.html":{}}}],["actual",{"_index":1968,"title":{},"body":{"interfaces/Test.html":{}}}],["actual_component",{"_index":91,"title":{},"body":{"components/AddBatteryPackComponent.html":{},"components/AddCellsComponent.html":{},"components/AddTestChamberComponent.html":{},"components/AppComponent.html":{},"components/BatteryPacksComponent.html":{},"components/BatteryTestComponent.html":{},"components/CellsComponent.html":{},"components/DashboardComponent.html":{},"components/DeviceDataComponent.html":{},"components/DevicesComponent.html":{},"components/DevicesDefaultComponent.html":{},"components/DocsComponent.html":{},"components/EditBatteryPackComponent.html":{},"components/EditCellsComponent.html":{},"components/EditTestChamberComponent.html":{},"components/FootNavComponent.html":{},"components/HeadNavComponent.html":{},"components/HomeComponent.html":{},"components/NoResultComponent.html":{},"components/ShowAllTestsResultComponent.html":{},"components/TestChambersComponent.html":{},"components/ViewBatteryPacksComponent.html":{},"components/ViewCellsComponent.html":{},"components/ViewTestChambersComponent.html":{}}}],["ad",{"_index":1905,"title":{},"body":{"components/HomeComponent.html":{}}}],["add",{"_index":18,"title":{},"body":{"components/AddBatteryPackComponent.html":{},"components/AddCellsComponent.html":{},"components/AddTestChamberComponent.html":{},"components/AppComponent.html":{},"components/BatteryPacksComponent.html":{},"modules/BatteryPacksRoutingModule.html":{},"components/BatteryTestComponent.html":{},"modules/BatteryTestRoutingModule.html":{},"components/CellsComponent.html":{},"modules/CellsRoutingModule.html":{},"components/DashboardComponent.html":{},"components/DeviceDataComponent.html":{},"components/DevicesComponent.html":{},"components/DevicesDefaultComponent.html":{},"components/DocsComponent.html":{},"components/EditBatteryPackComponent.html":{},"components/EditCellsComponent.html":{},"components/EditTestChamberComponent.html":{},"components/FootNavComponent.html":{},"components/HeadNavComponent.html":{},"components/HomeComponent.html":{},"components/NoResultComponent.html":{},"components/ShowAllTestsResultComponent.html":{},"components/TestChambersComponent.html":{},"modules/TestChambersRoutingModule.html":{},"components/ViewBatteryPacksComponent.html":{},"components/ViewCellsComponent.html":{},"components/ViewTestChambersComponent.html":{},"index.html":{}}}],["addbatterypackcomponent",{"_index":1,"title":{"components/AddBatteryPackComponent.html":{}},"body":{"components/AddBatteryPackComponent.html":{},"components/AddCellsComponent.html":{},"components/AddTestChamberComponent.html":{},"components/AppComponent.html":{},"components/BatteryPacksComponent.html":{},"modules/BatteryPacksModule.html":{},"modules/BatteryPacksRoutingModule.html":{},"components/BatteryTestComponent.html":{},"components/CellsComponent.html":{},"components/DashboardComponent.html":{},"components/DeviceDataComponent.html":{},"components/DevicesComponent.html":{},"components/DevicesDefaultComponent.html":{},"components/DocsComponent.html":{},"components/EditBatteryPackComponent.html":{},"components/EditCellsComponent.html":{},"components/EditTestChamberComponent.html":{},"components/FootNavComponent.html":{},"components/HeadNavComponent.html":{},"components/HomeComponent.html":{},"components/NoResultComponent.html":{},"components/ShowAllTestsResultComponent.html":{},"components/TestChambersComponent.html":{},"components/ViewBatteryPacksComponent.html":{},"components/ViewCellsComponent.html":{},"components/ViewTestChambersComponent.html":{},"coverage.html":{},"overview.html":{}}}],["addcell",{"_index":891,"title":{},"body":{"injectables/CellService.html":{}}}],["addcell(cell",{"_index":901,"title":{},"body":{"injectables/CellService.html":{}}}],["addcellscomponent",{"_index":39,"title":{"components/AddCellsComponent.html":{}},"body":{"components/AddBatteryPackComponent.html":{},"components/AddCellsComponent.html":{},"components/AddTestChamberComponent.html":{},"components/AppComponent.html":{},"components/BatteryPacksComponent.html":{},"components/BatteryTestComponent.html":{},"components/CellsComponent.html":{},"modules/CellsModule.html":{},"modules/CellsRoutingModule.html":{},"components/DashboardComponent.html":{},"components/DeviceDataComponent.html":{},"components/DevicesComponent.html":{},"components/DevicesDefaultComponent.html":{},"components/DocsComponent.html":{},"components/EditBatteryPackComponent.html":{},"components/EditCellsComponent.html":{},"components/EditTestChamberComponent.html":{},"components/FootNavComponent.html":{},"components/HeadNavComponent.html":{},"components/HomeComponent.html":{},"components/NoResultComponent.html":{},"components/ShowAllTestsResultComponent.html":{},"components/TestChambersComponent.html":{},"components/ViewBatteryPacksComponent.html":{},"components/ViewCellsComponent.html":{},"components/ViewTestChambersComponent.html":{},"coverage.html":{},"overview.html":{}}}],["adding",{"_index":1011,"title":{},"body":{"components/CellsComponent.html":{}}}],["additional",{"_index":1757,"title":{},"body":{"components/FootNavComponent.html":{}}}],["addtestchambercomponent",{"_index":41,"title":{"components/AddTestChamberComponent.html":{}},"body":{"components/AddBatteryPackComponent.html":{},"components/AddCellsComponent.html":{},"components/AddTestChamberComponent.html":{},"components/AppComponent.html":{},"components/BatteryPacksComponent.html":{},"components/BatteryTestComponent.html":{},"components/CellsComponent.html":{},"components/DashboardComponent.html":{},"components/DeviceDataComponent.html":{},"components/DevicesComponent.html":{},"components/DevicesDefaultComponent.html":{},"components/DocsComponent.html":{},"components/EditBatteryPackComponent.html":{},"components/EditCellsComponent.html":{},"components/EditTestChamberComponent.html":{},"components/FootNavComponent.html":{},"components/HeadNavComponent.html":{},"components/HomeComponent.html":{},"components/NoResultComponent.html":{},"components/ShowAllTestsResultComponent.html":{},"components/TestChambersComponent.html":{},"modules/TestChambersModule.html":{},"modules/TestChambersRoutingModule.html":{},"components/ViewBatteryPacksComponent.html":{},"components/ViewCellsComponent.html":{},"components/ViewTestChambersComponent.html":{},"coverage.html":{},"overview.html":{}}}],["adjust",{"_index":2102,"title":{},"body":{"components/TestChambersComponent.html":{}}}],["adjustable",{"_index":2140,"title":{},"body":{"components/TestChambersComponent.html":{}}}],["admin",{"_index":934,"title":{},"body":{"injectables/CellService.html":{},"interfaces/Channel.html":{},"interfaces/MeasuredParameters.html":{},"interfaces/QuickResponseMeasurement.html":{},"interfaces/RowInfo.html":{},"interfaces/SensorObj.html":{},"classes/TestChamber.html":{},"interfaces/TestChannel.html":{},"interfaces/TestChannelDeepChannel.html":{},"interfaces/TestResultDocument.html":{},"injectables/UserService.html":{},"interfaces/_TestChamber.html":{},"interfaces/_TestResultDeep.html":{},"interfaces/_TestResultLight.html":{},"interfaces/_User.html":{},"interfaces/_UserLight.html":{}}}],["advanced",{"_index":1588,"title":{},"body":{"components/DevicesDefaultComponent.html":{},"components/TestChambersComponent.html":{}}}],["again",{"_index":1384,"title":{},"body":{"interfaces/Charts.html":{}}}],["ai/ml",{"_index":1883,"title":{},"body":{"components/HomeComponent.html":{}}}],["alert",{"_index":1353,"title":{},"body":{"interfaces/Charts.html":{},"components/EditCellsComponent.html":{},"components/EditTestChamberComponent.html":{},"interfaces/ToastMsg.html":{}}}],["algorithms",{"_index":1892,"title":{},"body":{"components/HomeComponent.html":{}}}],["align",{"_index":543,"title":{},"body":{"components/AppComponent.html":{},"components/BatteryTestComponent.html":{},"components/DashboardComponent.html":{},"components/DevicesDefaultComponent.html":{},"components/FootNavComponent.html":{},"components/HeadNavComponent.html":{},"components/HomeComponent.html":{}}}],["allcharts",{"_index":1197,"title":{},"body":{"interfaces/Charts.html":{}}}],["allowedlist",{"_index":2429,"title":{},"body":{"miscellaneous/variables.html":{}}}],["allowing",{"_index":2101,"title":{},"body":{"components/TestChambersComponent.html":{}}}],["allows",{"_index":2122,"title":{},"body":{"components/TestChambersComponent.html":{}}}],["alltestformat",{"_index":1146,"title":{},"body":{"interfaces/ChannelFields.html":{},"interfaces/FileField.html":{},"interfaces/InputField.html":{},"interfaces/PayLoad.html":{},"interfaces/SelectField.html":{},"interfaces/TestFormat.html":{},"interfaces/TextField.html":{}}}],["alltestintervalid",{"_index":1918,"title":{},"body":{"components/ShowAllTestsResultComponent.html":{}}}],["alltests",{"_index":1919,"title":{},"body":{"components/ShowAllTestsResultComponent.html":{}}}],["alltestssource",{"_index":1920,"title":{},"body":{"components/ShowAllTestsResultComponent.html":{}}}],["alltestsub",{"_index":1921,"title":{},"body":{"components/ShowAllTestsResultComponent.html":{}}}],["alternate",{"_index":1852,"title":{},"body":{"components/HeadNavComponent.html":{}}}],["ambtemp",{"_index":1162,"title":{},"body":{"interfaces/ChannelFields.html":{},"interfaces/FileField.html":{},"interfaces/InputField.html":{},"interfaces/PayLoad.html":{},"interfaces/SelectField.html":{},"interfaces/TestFormat.html":{},"interfaces/TextField.html":{},"miscellaneous/variables.html":{}}}],["analysis",{"_index":987,"title":{},"body":{"components/CellsComponent.html":{},"components/HomeComponent.html":{}}}],["analytics",{"_index":1611,"title":{},"body":{"components/DevicesDefaultComponent.html":{}}}],["analyze",{"_index":993,"title":{},"body":{"components/CellsComponent.html":{},"components/HomeComponent.html":{},"components/TestChambersComponent.html":{}}}],["angular",{"_index":588,"title":{},"body":{"modules/AppModule.html":{},"guards/AuthGuard.html":{},"injectables/CellService.html":{},"components/HeadNavComponent.html":{},"injectables/TestChamberService.html":{},"injectables/UserService.html":{},"interfaces/_User.html":{},"interfaces/_UserLight.html":{},"dependencies.html":{},"index.html":{}}}],["angular/animations",{"_index":1570,"title":{},"body":{"components/DevicesDefaultComponent.html":{},"dependencies.html":{}}}],["angular/cdk",{"_index":2351,"title":{},"body":{"dependencies.html":{}}}],["angular/cdk/clipboard",{"_index":2280,"title":{},"body":{"components/ViewTestChambersComponent.html":{}}}],["angular/common",{"_index":413,"title":{},"body":{"classes/Anim.html":{},"modules/BatteryPacksModule.html":{},"components/BatteryTestComponent.html":{},"modules/BatteryTestModule.html":{},"components/CellsComponent.html":{},"interfaces/Charts.html":{},"components/DevicesDefaultComponent.html":{},"classes/Dot.html":{},"components/HeadNavComponent.html":{},"components/HomeComponent.html":{},"modules/SharedModule.html":{},"components/ShowAllTestsResultComponent.html":{},"dependencies.html":{}}}],["angular/common/http",{"_index":597,"title":{},"body":{"modules/AppModule.html":{},"injectables/CellService.html":{},"injectables/DeviceDataService.html":{},"injectables/TestChamberService.html":{},"injectables/TestDataService.html":{},"injectables/TestService.html":{},"injectables/UserService.html":{},"interfaces/_User.html":{},"interfaces/_UserLight.html":{}}}],["angular/compiler",{"_index":2352,"title":{},"body":{"dependencies.html":{}}}],["angular/core",{"_index":26,"title":{},"body":{"components/AddBatteryPackComponent.html":{},"components/AddCellsComponent.html":{},"components/AddTestChamberComponent.html":{},"classes/Anim.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"components/BatteryPacksComponent.html":{},"modules/BatteryPacksModule.html":{},"modules/BatteryPacksRoutingModule.html":{},"components/BatteryTestComponent.html":{},"modules/BatteryTestModule.html":{},"modules/BatteryTestRoutingModule.html":{},"interfaces/BreadCrumbs.html":{},"injectables/CellService.html":{},"components/CellsComponent.html":{},"modules/CellsModule.html":{},"modules/CellsRoutingModule.html":{},"interfaces/Charts.html":{},"injectables/ComponentStoreService.html":{},"components/DashboardComponent.html":{},"components/DeviceDataComponent.html":{},"injectables/DeviceDataService.html":{},"components/DevicesComponent.html":{},"components/DevicesDefaultComponent.html":{},"components/DocsComponent.html":{},"classes/Dot.html":{},"components/EditBatteryPackComponent.html":{},"components/EditCellsComponent.html":{},"components/EditTestChamberComponent.html":{},"components/FootNavComponent.html":{},"components/HeadNavComponent.html":{},"components/HomeComponent.html":{},"components/NoResultComponent.html":{},"modules/SharedModule.html":{},"components/ShowAllTestsResultComponent.html":{},"injectables/TestChamberService.html":{},"components/TestChambersComponent.html":{},"modules/TestChambersModule.html":{},"modules/TestChambersRoutingModule.html":{},"injectables/TestDataService.html":{},"injectables/TestService.html":{},"injectables/UserService.html":{},"components/ViewBatteryPacksComponent.html":{},"components/ViewCellsComponent.html":{},"components/ViewTestChambersComponent.html":{},"interfaces/_User.html":{},"interfaces/_UserLight.html":{},"dependencies.html":{}}}],["angular/forms",{"_index":1917,"title":{},"body":{"modules/SharedModule.html":{},"dependencies.html":{}}}],["angular/localize",{"_index":2353,"title":{},"body":{"dependencies.html":{}}}],["angular/platform",{"_index":567,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["angular/router",{"_index":163,"title":{},"body":{"components/AddCellsComponent.html":{},"components/AddTestChamberComponent.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"modules/BatteryPacksRoutingModule.html":{},"components/BatteryTestComponent.html":{},"modules/BatteryTestModule.html":{},"modules/BatteryTestRoutingModule.html":{},"interfaces/BreadCrumbs.html":{},"components/CellsComponent.html":{},"modules/CellsRoutingModule.html":{},"interfaces/Charts.html":{},"components/DashboardComponent.html":{},"components/DeviceDataComponent.html":{},"components/EditCellsComponent.html":{},"components/EditTestChamberComponent.html":{},"modules/TestChambersRoutingModule.html":{},"dependencies.html":{}}}],["anim",{"_index":395,"title":{"classes/Anim.html":{}},"body":{"classes/Anim.html":{},"classes/Dot.html":{},"components/HomeComponent.html":{},"coverage.html":{}}}],["anim(dot1",{"_index":460,"title":{},"body":{"classes/Anim.html":{},"classes/Dot.html":{},"components/HomeComponent.html":{}}}],["anim(dot2",{"_index":466,"title":{},"body":{"classes/Anim.html":{},"classes/Dot.html":{},"components/HomeComponent.html":{}}}],["anim(dot3",{"_index":472,"title":{},"body":{"classes/Anim.html":{},"classes/Dot.html":{},"components/HomeComponent.html":{}}}],["anim(dot4",{"_index":478,"title":{},"body":{"classes/Anim.html":{},"classes/Dot.html":{},"components/HomeComponent.html":{}}}],["anim_gen_1",{"_index":459,"title":{},"body":{"classes/Anim.html":{},"classes/Dot.html":{},"components/HomeComponent.html":{}}}],["anim_gen_1.start(anim_time",{"_index":461,"title":{},"body":{"classes/Anim.html":{},"classes/Dot.html":{},"components/HomeComponent.html":{}}}],["anim_gen_2",{"_index":465,"title":{},"body":{"classes/Anim.html":{},"classes/Dot.html":{},"components/HomeComponent.html":{}}}],["anim_gen_2.start(anim_time",{"_index":467,"title":{},"body":{"classes/Anim.html":{},"classes/Dot.html":{},"components/HomeComponent.html":{}}}],["anim_gen_3",{"_index":471,"title":{},"body":{"classes/Anim.html":{},"classes/Dot.html":{},"components/HomeComponent.html":{}}}],["anim_gen_3.start(anim_time",{"_index":473,"title":{},"body":{"classes/Anim.html":{},"classes/Dot.html":{},"components/HomeComponent.html":{}}}],["anim_gen_4",{"_index":477,"title":{},"body":{"classes/Anim.html":{},"classes/Dot.html":{},"components/HomeComponent.html":{}}}],["anim_gen_4.start(anim_time",{"_index":479,"title":{},"body":{"classes/Anim.html":{},"classes/Dot.html":{},"components/HomeComponent.html":{}}}],["anim_time",{"_index":454,"title":{},"body":{"classes/Anim.html":{},"classes/Dot.html":{},"components/HomeComponent.html":{}}}],["animate",{"_index":1568,"title":{},"body":{"components/DevicesDefaultComponent.html":{}}}],["animate('0ms",{"_index":1578,"title":{},"body":{"components/DevicesDefaultComponent.html":{}}}],["animate('100ms",{"_index":1575,"title":{},"body":{"components/DevicesDefaultComponent.html":{}}}],["animation",{"_index":445,"title":{},"body":{"classes/Anim.html":{},"modules/AppModule.html":{},"classes/Dot.html":{},"components/HeadNavComponent.html":{},"components/HomeComponent.html":{}}}],["animationduration",{"_index":610,"title":{},"body":{"modules/AppModule.html":{}}}],["animations",{"_index":1571,"title":{},"body":{"components/DevicesDefaultComponent.html":{}}}],["any).pipe",{"_index":1830,"title":{},"body":{"components/HeadNavComponent.html":{}}}],["any).pipe(switchmap((thirdresponse:any",{"_index":1836,"title":{},"body":{"components/HeadNavComponent.html":{}}}],["anywhere",{"_index":2099,"title":{},"body":{"components/TestChambersComponent.html":{}}}],["api",{"_index":870,"title":{},"body":{"interfaces/Cell.html":{},"classes/CellClass.html":{},"components/HeadNavComponent.html":{},"components/ViewTestChambersComponent.html":{}}}],["api.apikey",{"_index":2294,"title":{},"body":{"components/ViewTestChambersComponent.html":{}}}],["apikey",{"_index":2321,"title":{},"body":{"interfaces/_TestChamber.html":{}}}],["apikey?:string",{"_index":1999,"title":{},"body":{"classes/TestChamber.html":{},"interfaces/_TestChamber.html":{}}}],["apiuri",{"_index":2430,"title":{},"body":{"miscellaneous/variables.html":{}}}],["app",{"_index":17,"title":{},"body":{"components/AddBatteryPackComponent.html":{},"components/AddCellsComponent.html":{},"components/AddTestChamberComponent.html":{},"classes/Anim.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/BatteryPacksComponent.html":{},"components/BatteryTestComponent.html":{},"interfaces/BreadCrumbs.html":{},"components/CellsComponent.html":{},"interfaces/Charts.html":{},"components/DashboardComponent.html":{},"components/DeviceDataComponent.html":{},"components/DevicesComponent.html":{},"components/DevicesDefaultComponent.html":{},"components/DocsComponent.html":{},"classes/Dot.html":{},"components/EditBatteryPackComponent.html":{},"components/EditCellsComponent.html":{},"components/EditTestChamberComponent.html":{},"components/FootNavComponent.html":{},"components/HeadNavComponent.html":{},"components/HomeComponent.html":{},"components/NoResultComponent.html":{},"components/ShowAllTestsResultComponent.html":{},"components/TestChambersComponent.html":{},"components/ViewBatteryPacksComponent.html":{},"components/ViewCellsComponent.html":{},"components/ViewTestChambersComponent.html":{}}}],["app.component",{"_index":576,"title":{},"body":{"modules/AppModule.html":{}}}],["app.component.css",{"_index":492,"title":{},"body":{"components/AppComponent.html":{}}}],["app.component.html",{"_index":493,"title":{},"body":{"components/AppComponent.html":{}}}],["appcomponent",{"_index":44,"title":{"components/AppComponent.html":{}},"body":{"components/AddBatteryPackComponent.html":{},"components/AddCellsComponent.html":{},"components/AddTestChamberComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/BatteryPacksComponent.html":{},"components/BatteryTestComponent.html":{},"components/CellsComponent.html":{},"components/DashboardComponent.html":{},"components/DeviceDataComponent.html":{},"components/DevicesComponent.html":{},"components/DevicesDefaultComponent.html":{},"components/DocsComponent.html":{},"components/EditBatteryPackComponent.html":{},"components/EditCellsComponent.html":{},"components/EditTestChamberComponent.html":{},"components/FootNavComponent.html":{},"components/HeadNavComponent.html":{},"components/HomeComponent.html":{},"components/NoResultComponent.html":{},"components/ShowAllTestsResultComponent.html":{},"components/TestChambersComponent.html":{},"components/ViewBatteryPacksComponent.html":{},"components/ViewCellsComponent.html":{},"components/ViewTestChambersComponent.html":{},"coverage.html":{},"overview.html":{}}}],["appearance",{"_index":328,"title":{},"body":{"components/AddCellsComponent.html":{},"components/AddTestChamberComponent.html":{},"components/EditCellsComponent.html":{},"components/EditTestChamberComponent.html":{}}}],["appearing",{"_index":810,"title":{},"body":{"interfaces/BreadCrumbs.html":{},"components/DashboardComponent.html":{}}}],["appears",{"_index":1913,"title":{},"body":{"components/NoResultComponent.html":{}}}],["appendnewdata",{"_index":1297,"title":{},"body":{"interfaces/Charts.html":{}}}],["application",{"_index":2385,"title":{},"body":{"index.html":{}}}],["appmodule",{"_index":551,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["approutingmodule",{"_index":558,"title":{"modules/AppRoutingModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["appstate",{"_index":674,"title":{},"body":{"guards/AuthGuard.html":{}}}],["appuri",{"_index":2431,"title":{},"body":{"miscellaneous/variables.html":{}}}],["art",{"_index":1891,"title":{},"body":{"components/HomeComponent.html":{}}}],["artifacts",{"_index":2392,"title":{},"body":{"index.html":{}}}],["assgined",{"_index":2229,"title":{},"body":{"components/ViewCellsComponent.html":{},"components/ViewTestChambersComponent.html":{}}}],["assigned",{"_index":301,"title":{},"body":{"components/AddCellsComponent.html":{},"components/AddTestChamberComponent.html":{},"components/EditCellsComponent.html":{},"components/EditTestChamberComponent.html":{},"components/ShowAllTestsResultComponent.html":{},"components/ViewCellsComponent.html":{},"components/ViewTestChambersComponent.html":{}}}],["assignedusers",{"_index":204,"title":{},"body":{"components/AddCellsComponent.html":{},"components/AddTestChamberComponent.html":{},"interfaces/Cell.html":{},"classes/CellClass.html":{},"components/EditCellsComponent.html":{},"components/EditTestChamberComponent.html":{},"classes/TestChamber.html":{},"interfaces/_TestChamber.html":{}}}],["assignedusers.push",{"_index":207,"title":{},"body":{"components/AddCellsComponent.html":{},"components/AddTestChamberComponent.html":{},"components/EditCellsComponent.html":{},"components/EditTestChamberComponent.html":{}}}],["ast::after",{"_index":316,"title":{},"body":{"components/AddCellsComponent.html":{},"components/AddTestChamberComponent.html":{},"components/EditCellsComponent.html":{},"components/EditTestChamberComponent.html":{}}}],["attachment",{"_index":1018,"title":{},"body":{"components/CellsComponent.html":{},"components/DevicesDefaultComponent.html":{},"components/TestChambersComponent.html":{}}}],["audience",{"_index":2424,"title":{},"body":{"miscellaneous/variables.html":{}}}],["auth",{"_index":657,"title":{},"body":{"guards/AuthGuard.html":{},"components/HeadNavComponent.html":{},"miscellaneous/variables.html":{}}}],["auth0/auth0",{"_index":587,"title":{},"body":{"modules/AppModule.html":{},"guards/AuthGuard.html":{},"injectables/CellService.html":{},"components/HeadNavComponent.html":{},"injectables/UserService.html":{},"interfaces/_User.html":{},"interfaces/_UserLight.html":{},"dependencies.html":{}}}],["authguard",{"_index":623,"title":{"guards/AuthGuard.html":{}},"body":{"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"coverage.html":{}}}],["authhttpinterceptor",{"_index":598,"title":{},"body":{"modules/AppModule.html":{}}}],["authmodule",{"_index":586,"title":{},"body":{"modules/AppModule.html":{}}}],["authmodule.forroot",{"_index":605,"title":{},"body":{"modules/AppModule.html":{}}}],["authservice",{"_index":655,"title":{},"body":{"guards/AuthGuard.html":{},"components/HeadNavComponent.html":{}}}],["authuser",{"_index":1816,"title":{},"body":{"components/HeadNavComponent.html":{}}}],["auto",{"_index":257,"title":{},"body":{"components/AddCellsComponent.html":{},"components/DashboardComponent.html":{},"components/EditCellsComponent.html":{},"components/FootNavComponent.html":{}}}],["automatically",{"_index":266,"title":{},"body":{"components/AddCellsComponent.html":{},"components/AddTestChamberComponent.html":{},"components/EditCellsComponent.html":{},"components/EditTestChamberComponent.html":{},"components/TestChambersComponent.html":{},"index.html":{}}}],["available",{"_index":2410,"title":{},"body":{"modules.html":{}}}],["availablecells",{"_index":2200,"title":{},"body":{"components/ViewCellsComponent.html":{}}}],["availablecellssource",{"_index":2201,"title":{},"body":{"components/ViewCellsComponent.html":{}}}],["availablechannels",{"_index":1147,"title":{},"body":{"interfaces/ChannelFields.html":{},"interfaces/FileField.html":{},"interfaces/InputField.html":{},"interfaces/PayLoad.html":{},"interfaces/SelectField.html":{},"interfaces/TestFormat.html":{},"interfaces/TextField.html":{}}}],["availabletestchambers",{"_index":2254,"title":{},"body":{"components/ViewTestChambersComponent.html":{}}}],["availabletestchamberssource",{"_index":2255,"title":{},"body":{"components/ViewTestChambersComponent.html":{}}}],["average",{"_index":1450,"title":{},"body":{"components/DashboardComponent.html":{}}}],["averagetemperature",{"_index":1516,"title":{},"body":{"interfaces/DeviceDataLight.html":{}}}],["averagetemperature:number",{"_index":1537,"title":{},"body":{"interfaces/DeviceDataLight.html":{}}}],["back",{"_index":251,"title":{},"body":{"components/AddCellsComponent.html":{},"components/AddTestChamberComponent.html":{},"components/BatteryTestComponent.html":{},"components/EditCellsComponent.html":{},"components/EditTestChamberComponent.html":{},"components/ShowAllTestsResultComponent.html":{},"classes/TestChamber.html":{},"components/ViewCellsComponent.html":{},"components/ViewTestChambersComponent.html":{},"interfaces/_TestChamber.html":{}}}],["background",{"_index":746,"title":{},"body":{"components/BatteryTestComponent.html":{},"components/CellsComponent.html":{},"components/DashboardComponent.html":{},"components/DevicesDefaultComponent.html":{},"components/FootNavComponent.html":{},"components/HeadNavComponent.html":{},"components/HomeComponent.html":{},"components/TestChambersComponent.html":{}}}],["bakc",{"_index":824,"title":{},"body":{"interfaces/BreadCrumbs.html":{},"components/DashboardComponent.html":{}}}],["basechartdirective",{"_index":1190,"title":{},"body":{"interfaces/Charts.html":{}}}],["based",{"_index":1882,"title":{},"body":{"components/HomeComponent.html":{}}}],["batch",{"_index":277,"title":{},"body":{"components/AddCellsComponent.html":{},"components/EditCellsComponent.html":{},"components/ViewCellsComponent.html":{}}}],["batchno",{"_index":857,"title":{},"body":{"interfaces/Cell.html":{},"classes/CellClass.html":{}}}],["batteries",{"_index":1761,"title":{},"body":{"components/FootNavComponent.html":{},"components/HomeComponent.html":{}}}],["battery",{"_index":12,"title":{},"body":{"components/AddBatteryPackComponent.html":{},"components/AddCellsComponent.html":{},"components/AddTestChamberComponent.html":{},"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/BatteryPacksComponent.html":{},"modules/BatteryPacksModule.html":{},"modules/BatteryPacksRoutingModule.html":{},"components/BatteryTestComponent.html":{},"modules/BatteryTestModule.html":{},"components/CellsComponent.html":{},"components/DashboardComponent.html":{},"components/DeviceDataComponent.html":{},"components/DevicesComponent.html":{},"components/DevicesDefaultComponent.html":{},"components/DocsComponent.html":{},"components/EditBatteryPackComponent.html":{},"components/EditCellsComponent.html":{},"components/EditTestChamberComponent.html":{},"components/FootNavComponent.html":{},"components/HeadNavComponent.html":{},"components/HomeComponent.html":{},"components/NoResultComponent.html":{},"components/ShowAllTestsResultComponent.html":{},"components/TestChambersComponent.html":{},"components/ViewBatteryPacksComponent.html":{},"components/ViewCellsComponent.html":{},"components/ViewTestChambersComponent.html":{},"coverage.html":{}}}],["battery_profile",{"_index":973,"title":{},"body":{"components/CellsComponent.html":{}}}],["batterypackscomponent",{"_index":46,"title":{"components/BatteryPacksComponent.html":{}},"body":{"components/AddBatteryPackComponent.html":{},"components/AddCellsComponent.html":{},"components/AddTestChamberComponent.html":{},"components/AppComponent.html":{},"components/BatteryPacksComponent.html":{},"modules/BatteryPacksModule.html":{},"modules/BatteryPacksRoutingModule.html":{},"components/BatteryTestComponent.html":{},"components/CellsComponent.html":{},"components/DashboardComponent.html":{},"components/DeviceDataComponent.html":{},"components/DevicesComponent.html":{},"components/DevicesDefaultComponent.html":{},"components/DocsComponent.html":{},"components/EditBatteryPackComponent.html":{},"components/EditCellsComponent.html":{},"components/EditTestChamberComponent.html":{},"components/FootNavComponent.html":{},"components/HeadNavComponent.html":{},"components/HomeComponent.html":{},"components/NoResultComponent.html":{},"components/ShowAllTestsResultComponent.html":{},"components/TestChambersComponent.html":{},"components/ViewBatteryPacksComponent.html":{},"components/ViewCellsComponent.html":{},"components/ViewTestChambersComponent.html":{},"coverage.html":{},"overview.html":{}}}],["batterypacksmodule",{"_index":680,"title":{"modules/BatteryPacksModule.html":{}},"body":{"modules/BatteryPacksModule.html":{},"modules.html":{},"overview.html":{}}}],["batterypacksroutingmodule",{"_index":684,"title":{"modules/BatteryPacksRoutingModule.html":{}},"body":{"modules/BatteryPacksModule.html":{},"modules/BatteryPacksRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["batterytestcomponent",{"_index":48,"title":{"components/BatteryTestComponent.html":{}},"body":{"components/AddBatteryPackComponent.html":{},"components/AddCellsComponent.html":{},"components/AddTestChamberComponent.html":{},"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/BatteryPacksComponent.html":{},"components/BatteryTestComponent.html":{},"modules/BatteryTestModule.html":{},"modules/BatteryTestRoutingModule.html":{},"components/CellsComponent.html":{},"components/DashboardComponent.html":{},"components/DeviceDataComponent.html":{},"components/DevicesComponent.html":{},"components/DevicesDefaultComponent.html":{},"components/DocsComponent.html":{},"components/EditBatteryPackComponent.html":{},"components/EditCellsComponent.html":{},"components/EditTestChamberComponent.html":{},"components/FootNavComponent.html":{},"components/HeadNavComponent.html":{},"components/HomeComponent.html":{},"components/NoResultComponent.html":{},"components/ShowAllTestsResultComponent.html":{},"components/TestChambersComponent.html":{},"components/ViewBatteryPacksComponent.html":{},"components/ViewCellsComponent.html":{},"components/ViewTestChambersComponent.html":{},"coverage.html":{},"overview.html":{}}}],["batterytestmodule",{"_index":763,"title":{"modules/BatteryTestModule.html":{}},"body":{"modules/BatteryTestModule.html":{},"modules.html":{},"overview.html":{}}}],["batterytestroutingmodule",{"_index":767,"title":{"modules/BatteryTestRoutingModule.html":{}},"body":{"modules/BatteryTestModule.html":{},"modules/BatteryTestRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["black",{"_index":517,"title":{},"body":{"components/AppComponent.html":{},"components/BatteryTestComponent.html":{},"interfaces/Charts.html":{},"components/ViewTestChambersComponent.html":{}}}],["blankdata",{"_index":1246,"title":{},"body":{"interfaces/Charts.html":{}}}],["blankdata.celltemp",{"_index":1275,"title":{},"body":{"interfaces/Charts.html":{}}}],["blankdata.celltemp?.push(d",{"_index":1280,"title":{},"body":{"interfaces/Charts.html":{}}}],["blankdata.chamberhum",{"_index":1271,"title":{},"body":{"interfaces/Charts.html":{}}}],["blankdata.chambertemp",{"_index":1268,"title":{},"body":{"interfaces/Charts.html":{}}}],["blankdata.current",{"_index":1250,"title":{},"body":{"interfaces/Charts.html":{}}}],["blankdata.time",{"_index":1247,"title":{},"body":{"interfaces/Charts.html":{}}}],["blankdata.voltage",{"_index":1265,"title":{},"body":{"interfaces/Charts.html":{}}}],["blob",{"_index":1397,"title":{},"body":{"interfaces/Charts.html":{},"injectables/TestChamberService.html":{}}}],["blob([response.body",{"_index":1398,"title":{},"body":{"interfaces/Charts.html":{}}}],["block",{"_index":1625,"title":{},"body":{"components/DevicesDefaultComponent.html":{},"components/FootNavComponent.html":{},"components/HeadNavComponent.html":{}}}],["blur(10px",{"_index":1078,"title":{},"body":{"components/CellsComponent.html":{},"components/TestChambersComponent.html":{}}}],["blur(30px",{"_index":1076,"title":{},"body":{"components/CellsComponent.html":{},"components/TestChambersComponent.html":{}}}],["bms",{"_index":1844,"title":{},"body":{"components/HeadNavComponent.html":{},"components/HomeComponent.html":{}}}],["bms/assets/battery",{"_index":1636,"title":{},"body":{"components/DevicesDefaultComponent.html":{}}}],["bms/assets/classic_ios_battery_icon.png",{"_index":1015,"title":{},"body":{"components/CellsComponent.html":{},"components/DevicesDefaultComponent.html":{}}}],["bms/assets/dashboard_img.png",{"_index":1904,"title":{},"body":{"components/HomeComponent.html":{}}}],["bms/assets/devicesdatalight.json').pipe(retry(3),catcherror(this.errorhandler",{"_index":1552,"title":{},"body":{"injectables/DeviceDataService.html":{}}}],["bms/assets/test_chamber.png",{"_index":1635,"title":{},"body":{"components/DevicesDefaultComponent.html":{},"components/TestChambersComponent.html":{}}}],["bms/assets/test_chamber_current_img.png",{"_index":1909,"title":{},"body":{"components/HomeComponent.html":{}}}],["bms/assets/testdatadeep.json').pipe(retry(3),catcherror(this.errorhandler",{"_index":2170,"title":{},"body":{"injectables/TestDataService.html":{}}}],["bms/assets/testdatalight.json').pipe(retry(3),catcherror(this.errorhandler",{"_index":2169,"title":{},"body":{"injectables/TestDataService.html":{}}}],["body",{"_index":308,"title":{},"body":{"components/AddCellsComponent.html":{},"components/AddTestChamberComponent.html":{},"components/AppComponent.html":{},"components/DevicesDefaultComponent.html":{},"components/EditCellsComponent.html":{},"components/EditTestChamberComponent.html":{},"injectables/TestChamberService.html":{},"components/ViewCellsComponent.html":{},"components/ViewTestChambersComponent.html":{}}}],["bold",{"_index":1035,"title":{},"body":{"components/CellsComponent.html":{},"components/HomeComponent.html":{},"components/TestChambersComponent.html":{},"components/ViewCellsComponent.html":{},"components/ViewTestChambersComponent.html":{}}}],["boolean",{"_index":152,"title":{},"body":{"components/AddCellsComponent.html":{},"components/AddTestChamberComponent.html":{},"components/AppComponent.html":{},"components/BatteryTestComponent.html":{},"components/CellsComponent.html":{},"interfaces/ChannelFields.html":{},"interfaces/Charts.html":{},"components/DashboardComponent.html":{},"components/EditCellsComponent.html":{},"components/EditTestChamberComponent.html":{},"interfaces/FileField.html":{},"interfaces/InputField.html":{},"interfaces/PayLoad.html":{},"interfaces/SelectField.html":{},"components/ShowAllTestsResultComponent.html":{},"interfaces/Test.html":{},"classes/TestChamber.html":{},"components/TestChambersComponent.html":{},"interfaces/TestFormat.html":{},"interfaces/TextField.html":{},"components/ViewTestChambersComponent.html":{},"interfaces/_TestChamber.html":{}}}],["bootstrap",{"_index":565,"title":{},"body":{"modules/AppModule.html":{},"modules/BatteryTestModule.html":{},"modules/CellsModule.html":{},"interfaces/Charts.html":{},"components/EditCellsComponent.html":{},"components/EditTestChamberComponent.html":{},"modules/TestChambersModule.html":{},"dependencies.html":{}}}],["bootstrap/ng",{"_index":604,"title":{},"body":{"modules/AppModule.html":{},"modules/BatteryTestModule.html":{},"modules/CellsModule.html":{},"interfaces/Charts.html":{},"components/EditCellsComponent.html":{},"components/EditTestChamberComponent.html":{},"modules/TestChambersModule.html":{},"dependencies.html":{}}}],["border",{"_index":1053,"title":{},"body":{"components/CellsComponent.html":{},"components/DashboardComponent.html":{},"components/DevicesDefaultComponent.html":{},"components/FootNavComponent.html":{},"components/HeadNavComponent.html":{},"components/TestChambersComponent.html":{},"components/ViewCellsComponent.html":{},"components/ViewTestChambersComponent.html":{}}}],["bottom",{"_index":539,"title":{},"body":{"components/AppComponent.html":{},"components/BatteryTestComponent.html":{},"components/CellsComponent.html":{},"components/DashboardComponent.html":{},"components/DevicesDefaultComponent.html":{},"components/FootNavComponent.html":{},"components/TestChambersComponent.html":{},"components/ViewCellsComponent.html":{},"components/ViewTestChambersComponent.html":{}}}],["box",{"_index":1464,"title":{},"body":{"components/DashboardComponent.html":{},"components/DevicesDefaultComponent.html":{},"components/HeadNavComponent.html":{}}}],["breadcrumb",{"_index":1459,"title":{},"body":{"components/DashboardComponent.html":{}}}],["breadcrumbs",{"_index":783,"title":{"interfaces/BreadCrumbs.html":{}},"body":{"interfaces/BreadCrumbs.html":{},"components/DashboardComponent.html":{},"coverage.html":{}}}],["breadcrumbs:breadcrumbs",{"_index":812,"title":{},"body":{"interfaces/BreadCrumbs.html":{},"components/DashboardComponent.html":{}}}],["brown",{"_index":1814,"title":{},"body":{"components/FootNavComponent.html":{}}}],["browse",{"_index":2408,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":570,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{},"modules.html":{}}}],["browser/animations",{"_index":568,"title":{},"body":{"modules/AppModule.html":{}}}],["browseranimationsmodule",{"_index":566,"title":{},"body":{"modules/AppModule.html":{}}}],["browsermodule",{"_index":569,"title":{},"body":{"modules/AppModule.html":{}}}],["bs",{"_index":1458,"title":{},"body":{"components/DashboardComponent.html":{}}}],["btn",{"_index":760,"title":{},"body":{"components/BatteryTestComponent.html":{},"components/CellsComponent.html":{},"components/HeadNavComponent.html":{},"components/TestChambersComponent.html":{}}}],["build",{"_index":2391,"title":{},"body":{"index.html":{}}}],["button",{"_index":326,"title":{},"body":{"components/AddCellsComponent.html":{},"components/AddTestChamberComponent.html":{},"components/CellsComponent.html":{},"components/EditCellsComponent.html":{},"components/EditTestChamberComponent.html":{},"components/TestChambersComponent.html":{}}}],["button::before",{"_index":1064,"title":{},"body":{"components/CellsComponent.html":{},"components/TestChambersComponent.html":{}}}],["button:hover::before",{"_index":1077,"title":{},"body":{"components/CellsComponent.html":{},"components/TestChambersComponent.html":{}}}],["c",{"_index":376,"title":{},"body":{"components/AddTestChamberComponent.html":{},"interfaces/ChannelFields.html":{},"interfaces/Charts.html":{},"components/EditTestChamberComponent.html":{},"interfaces/FileField.html":{},"interfaces/InputField.html":{},"interfaces/PayLoad.html":{},"interfaces/SelectField.html":{},"classes/TestChamber.html":{},"interfaces/TestFormat.html":{},"interfaces/TextField.html":{},"components/ViewTestChambersComponent.html":{},"interfaces/_TestChamber.html":{},"miscellaneous/variables.html":{}}}],["canactivate",{"_index":627,"title":{},"body":{"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{}}}],["canactivate(route",{"_index":658,"title":{},"body":{"guards/AuthGuard.html":{}}}],["capabilities",{"_index":2401,"title":{},"body":{"index.html":{}}}],["capable",{"_index":2131,"title":{},"body":{"components/TestChambersComponent.html":{}}}],["capacity",{"_index":291,"title":{},"body":{"components/AddCellsComponent.html":{},"components/DevicesDefaultComponent.html":{},"components/EditCellsComponent.html":{},"components/ViewCellsComponent.html":{}}}],["capacity(mah",{"_index":290,"title":{},"body":{"components/AddCellsComponent.html":{},"components/EditCellsComponent.html":{}}}],["card",{"_index":305,"title":{},"body":{"components/AddCellsComponent.html":{},"components/AddTestChamberComponent.html":{},"components/BatteryTestComponent.html":{},"components/DevicesDefaultComponent.html":{},"components/EditCellsComponent.html":{},"components/EditTestChamberComponent.html":{},"components/ViewCellsComponent.html":{},"components/ViewTestChambersComponent.html":{}}}],["card:hover",{"_index":1638,"title":{},"body":{"components/DevicesDefaultComponent.html":{}}}],["carry",{"_index":1888,"title":{},"body":{"components/HomeComponent.html":{}}}],["catch",{"_index":2227,"title":{},"body":{"components/ViewCellsComponent.html":{},"components/ViewTestChambersComponent.html":{}}}],["catcherror",{"_index":921,"title":{},"body":{"injectables/CellService.html":{},"injectables/TestChamberService.html":{},"injectables/UserService.html":{},"interfaces/_User.html":{},"interfaces/_UserLight.html":{}}}],["catcherror(this.errorhandler",{"_index":929,"title":{},"body":{"injectables/CellService.html":{},"injectables/TestChamberService.html":{},"injectables/UserService.html":{},"interfaces/_User.html":{},"interfaces/_UserLight.html":{}}}],["catcherror,retry",{"_index":2168,"title":{},"body":{"injectables/TestDataService.html":{}}}],["cell",{"_index":105,"title":{"interfaces/Cell.html":{}},"body":{"components/AddCellsComponent.html":{},"interfaces/Cell.html":{},"classes/CellClass.html":{},"injectables/CellService.html":{},"components/CellsComponent.html":{},"interfaces/Charts.html":{},"components/DevicesDefaultComponent.html":{},"components/EditCellsComponent.html":{},"components/NoResultComponent.html":{},"components/ViewCellsComponent.html":{},"coverage.html":{}}}],["cell's",{"_index":259,"title":{},"body":{"components/AddCellsComponent.html":{},"components/EditCellsComponent.html":{}}}],["cell.accesstype",{"_index":2233,"title":{},"body":{"components/ViewCellsComponent.html":{}}}],["cell.cellchemistry",{"_index":2232,"title":{},"body":{"components/ViewCellsComponent.html":{}}}],["cell.cellname",{"_index":274,"title":{},"body":{"components/AddCellsComponent.html":{},"components/ViewCellsComponent.html":{}}}],["cell.nomcap",{"_index":2231,"title":{},"body":{"components/ViewCellsComponent.html":{}}}],["cell.nomvolt",{"_index":2230,"title":{},"body":{"components/ViewCellsComponent.html":{}}}],["cell\\'s",{"_index":329,"title":{},"body":{"components/AddCellsComponent.html":{},"components/EditCellsComponent.html":{}}}],["cell_",{"_index":1685,"title":{},"body":{"components/EditCellsComponent.html":{}}}],["cellchemistry",{"_index":858,"title":{},"body":{"interfaces/Cell.html":{},"classes/CellClass.html":{},"interfaces/CellTemplate.html":{}}}],["cellclass",{"_index":148,"title":{"classes/CellClass.html":{}},"body":{"components/AddCellsComponent.html":{},"interfaces/Cell.html":{},"classes/CellClass.html":{},"components/EditCellsComponent.html":{},"coverage.html":{}}}],["cellid",{"_index":910,"title":{},"body":{"injectables/CellService.html":{},"interfaces/ChannelFields.html":{},"components/EditCellsComponent.html":{},"interfaces/FileField.html":{},"interfaces/InputField.html":{},"interfaces/PayLoad.html":{},"interfaces/SelectField.html":{},"interfaces/TestFormat.html":{},"interfaces/TextField.html":{}}}],["cellname",{"_index":859,"title":{},"body":{"interfaces/Cell.html":{},"classes/CellClass.html":{}}}],["cellquantity",{"_index":860,"title":{},"body":{"interfaces/Cell.html":{},"classes/CellClass.html":{}}}],["cells",{"_index":100,"title":{},"body":{"components/AddCellsComponent.html":{},"modules/AppRoutingModule.html":{},"injectables/CellService.html":{},"components/CellsComponent.html":{},"modules/CellsModule.html":{},"components/DevicesDefaultComponent.html":{},"components/EditCellsComponent.html":{},"components/HeadNavComponent.html":{},"components/TestChambersComponent.html":{},"components/ViewCellsComponent.html":{}}}],["cells'},{'name",{"_index":40,"title":{},"body":{"components/AddBatteryPackComponent.html":{},"components/AddCellsComponent.html":{},"components/AddTestChamberComponent.html":{},"components/AppComponent.html":{},"components/BatteryPacksComponent.html":{},"components/BatteryTestComponent.html":{},"components/CellsComponent.html":{},"components/DashboardComponent.html":{},"components/DeviceDataComponent.html":{},"components/DevicesComponent.html":{},"components/DevicesDefaultComponent.html":{},"components/DocsComponent.html":{},"components/EditBatteryPackComponent.html":{},"components/EditCellsComponent.html":{},"components/EditTestChamberComponent.html":{},"components/FootNavComponent.html":{},"components/HeadNavComponent.html":{},"components/HomeComponent.html":{},"components/NoResultComponent.html":{},"components/ShowAllTestsResultComponent.html":{},"components/TestChambersComponent.html":{},"components/ViewBatteryPacksComponent.html":{},"components/ViewCellsComponent.html":{},"components/ViewTestChambersComponent.html":{}}}],["cells.component",{"_index":1087,"title":{},"body":{"modules/CellsModule.html":{},"modules/CellsRoutingModule.html":{}}}],["cells.component.css",{"_index":101,"title":{},"body":{"components/AddCellsComponent.html":{},"components/CellsComponent.html":{},"components/EditCellsComponent.html":{},"components/ViewCellsComponent.html":{}}}],["cells.component.html",{"_index":102,"title":{},"body":{"components/AddCellsComponent.html":{},"components/CellsComponent.html":{},"components/EditCellsComponent.html":{},"components/ViewCellsComponent.html":{}}}],["cells.component.ts",{"_index":96,"title":{},"body":{"components/AddCellsComponent.html":{},"components/EditCellsComponent.html":{},"components/ViewCellsComponent.html":{},"coverage.html":{}}}],["cells.component.ts:116",{"_index":144,"title":{},"body":{"components/AddCellsComponent.html":{}}}],["cells.component.ts:12",{"_index":2209,"title":{},"body":{"components/ViewCellsComponent.html":{}}}],["cells.component.ts:123",{"_index":1660,"title":{},"body":{"components/EditCellsComponent.html":{}}}],["cells.component.ts:13",{"_index":2208,"title":{},"body":{"components/ViewCellsComponent.html":{}}}],["cells.component.ts:14",{"_index":2211,"title":{},"body":{"components/ViewCellsComponent.html":{}}}],["cells.component.ts:15",{"_index":2210,"title":{},"body":{"components/ViewCellsComponent.html":{}}}],["cells.component.ts:16",{"_index":159,"title":{},"body":{"components/AddCellsComponent.html":{},"components/ViewCellsComponent.html":{}}}],["cells.component.ts:160",{"_index":1661,"title":{},"body":{"components/EditCellsComponent.html":{}}}],["cells.component.ts:17",{"_index":154,"title":{},"body":{"components/AddCellsComponent.html":{},"components/ViewCellsComponent.html":{}}}],["cells.component.ts:18",{"_index":161,"title":{},"body":{"components/AddCellsComponent.html":{},"components/ViewCellsComponent.html":{}}}],["cells.component.ts:184",{"_index":1662,"title":{},"body":{"components/EditCellsComponent.html":{}}}],["cells.component.ts:19",{"_index":151,"title":{},"body":{"components/AddCellsComponent.html":{},"components/ViewCellsComponent.html":{}}}],["cells.component.ts:20",{"_index":156,"title":{},"body":{"components/AddCellsComponent.html":{}}}],["cells.component.ts:21",{"_index":149,"title":{},"body":{"components/AddCellsComponent.html":{},"components/EditCellsComponent.html":{}}}],["cells.component.ts:22",{"_index":158,"title":{},"body":{"components/AddCellsComponent.html":{},"components/EditCellsComponent.html":{},"components/ViewCellsComponent.html":{}}}],["cells.component.ts:23",{"_index":162,"title":{},"body":{"components/AddCellsComponent.html":{},"components/EditCellsComponent.html":{}}}],["cells.component.ts:24",{"_index":132,"title":{},"body":{"components/AddCellsComponent.html":{},"components/EditCellsComponent.html":{}}}],["cells.component.ts:25",{"_index":1671,"title":{},"body":{"components/EditCellsComponent.html":{}}}],["cells.component.ts:26",{"_index":1666,"title":{},"body":{"components/EditCellsComponent.html":{}}}],["cells.component.ts:27",{"_index":1672,"title":{},"body":{"components/EditCellsComponent.html":{}}}],["cells.component.ts:28",{"_index":1675,"title":{},"body":{"components/EditCellsComponent.html":{}}}],["cells.component.ts:29",{"_index":1676,"title":{},"body":{"components/EditCellsComponent.html":{}}}],["cells.component.ts:30",{"_index":1667,"title":{},"body":{"components/EditCellsComponent.html":{}}}],["cells.component.ts:31",{"_index":1673,"title":{},"body":{"components/EditCellsComponent.html":{}}}],["cells.component.ts:32",{"_index":1674,"title":{},"body":{"components/EditCellsComponent.html":{}}}],["cells.component.ts:33",{"_index":1670,"title":{},"body":{"components/EditCellsComponent.html":{}}}],["cells.component.ts:34",{"_index":145,"title":{},"body":{"components/AddCellsComponent.html":{},"components/EditCellsComponent.html":{}}}],["cells.component.ts:39",{"_index":2205,"title":{},"body":{"components/ViewCellsComponent.html":{}}}],["cells.component.ts:43",{"_index":146,"title":{},"body":{"components/AddCellsComponent.html":{}}}],["cells.component.ts:44",{"_index":1669,"title":{},"body":{"components/EditCellsComponent.html":{}}}],["cells.component.ts:46",{"_index":1663,"title":{},"body":{"components/EditCellsComponent.html":{}}}],["cells.component.ts:55",{"_index":147,"title":{},"body":{"components/AddCellsComponent.html":{},"components/ViewCellsComponent.html":{}}}],["cells.component.ts:60",{"_index":2207,"title":{},"body":{"components/ViewCellsComponent.html":{}}}],["cells.component.ts:74",{"_index":1664,"title":{},"body":{"components/EditCellsComponent.html":{}}}],["cells.component.ts:87",{"_index":1665,"title":{},"body":{"components/EditCellsComponent.html":{}}}],["cells.component.ts:92",{"_index":138,"title":{},"body":{"components/AddCellsComponent.html":{}}}],["cells/add",{"_index":95,"title":{},"body":{"components/AddCellsComponent.html":{},"modules/CellsModule.html":{},"modules/CellsRoutingModule.html":{},"coverage.html":{}}}],["cells/edit",{"_index":1089,"title":{},"body":{"modules/CellsModule.html":{},"modules/CellsRoutingModule.html":{},"components/EditCellsComponent.html":{},"coverage.html":{}}}],["cells/view",{"_index":1086,"title":{},"body":{"modules/CellsModule.html":{},"modules/CellsRoutingModule.html":{},"components/ViewCellsComponent.html":{},"coverage.html":{}}}],["cellscomponent",{"_index":50,"title":{"components/CellsComponent.html":{}},"body":{"components/AddBatteryPackComponent.html":{},"components/AddCellsComponent.html":{},"components/AddTestChamberComponent.html":{},"components/AppComponent.html":{},"components/BatteryPacksComponent.html":{},"components/BatteryTestComponent.html":{},"components/CellsComponent.html":{},"modules/CellsModule.html":{},"modules/CellsRoutingModule.html":{},"components/DashboardComponent.html":{},"components/DeviceDataComponent.html":{},"components/DevicesComponent.html":{},"components/DevicesDefaultComponent.html":{},"components/DocsComponent.html":{},"components/EditBatteryPackComponent.html":{},"components/EditCellsComponent.html":{},"components/EditTestChamberComponent.html":{},"components/FootNavComponent.html":{},"components/HeadNavComponent.html":{},"components/HomeComponent.html":{},"components/NoResultComponent.html":{},"components/ShowAllTestsResultComponent.html":{},"components/TestChambersComponent.html":{},"components/ViewBatteryPacksComponent.html":{},"components/ViewCellsComponent.html":{},"components/ViewTestChambersComponent.html":{},"coverage.html":{},"overview.html":{}}}],["cellservice",{"_index":123,"title":{"injectables/CellService.html":{}},"body":{"components/AddCellsComponent.html":{},"injectables/CellService.html":{},"components/CellsComponent.html":{},"components/EditCellsComponent.html":{},"components/ViewCellsComponent.html":{},"coverage.html":{}}}],["cellsmodule",{"_index":1079,"title":{"modules/CellsModule.html":{}},"body":{"modules/CellsModule.html":{},"modules.html":{},"overview.html":{}}}],["cellsroutingmodule",{"_index":1083,"title":{"modules/CellsRoutingModule.html":{}},"body":{"modules/CellsModule.html":{},"modules/CellsRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["celltemp",{"_index":1133,"title":{},"body":{"interfaces/Channel.html":{},"interfaces/MeasuredParameters.html":{},"interfaces/QuickResponseMeasurement.html":{},"interfaces/RowInfo.html":{},"interfaces/SensorObj.html":{},"interfaces/TestChannel.html":{},"interfaces/TestChannelDeepChannel.html":{},"interfaces/TestResultDocument.html":{},"interfaces/_TestResultDeep.html":{},"interfaces/_TestResultLight.html":{}}}],["celltemplate",{"_index":150,"title":{"interfaces/CellTemplate.html":{}},"body":{"components/AddCellsComponent.html":{},"interfaces/CellTemplate.html":{},"components/EditCellsComponent.html":{},"coverage.html":{}}}],["celltemplates",{"_index":107,"title":{},"body":{"components/AddCellsComponent.html":{},"components/EditCellsComponent.html":{}}}],["center",{"_index":545,"title":{},"body":{"components/AppComponent.html":{},"components/CellsComponent.html":{},"components/DashboardComponent.html":{},"components/DevicesDefaultComponent.html":{},"components/FootNavComponent.html":{},"components/HeadNavComponent.html":{},"components/HomeComponent.html":{},"components/TestChambersComponent.html":{}}}],["centered",{"_index":1362,"title":{},"body":{"interfaces/Charts.html":{},"components/EditCellsComponent.html":{},"components/EditTestChamberComponent.html":{}}}],["ch.channelno",{"_index":742,"title":{},"body":{"components/BatteryTestComponent.html":{}}}],["ch.chmultiplierindex",{"_index":744,"title":{},"body":{"components/BatteryTestComponent.html":{}}}],["ch.statusch",{"_index":743,"title":{},"body":{"components/BatteryTestComponent.html":{}}}],["chamber",{"_index":334,"title":{},"body":{"components/AddTestChamberComponent.html":{},"interfaces/Charts.html":{},"components/DevicesDefaultComponent.html":{},"components/EditTestChamberComponent.html":{},"components/NoResultComponent.html":{},"components/ShowAllTestsResultComponent.html":{},"interfaces/Test.html":{},"classes/TestChamber.html":{},"injectables/TestChamberService.html":{},"components/TestChambersComponent.html":{},"components/ViewCellsComponent.html":{},"components/ViewTestChambersComponent.html":{},"interfaces/_TestChamber.html":{}}}],["chamber'},{'name",{"_index":43,"title":{},"body":{"components/AddBatteryPackComponent.html":{},"components/AddCellsComponent.html":{},"components/AddTestChamberComponent.html":{},"components/AppComponent.html":{},"components/BatteryPacksComponent.html":{},"components/BatteryTestComponent.html":{},"components/CellsComponent.html":{},"components/DashboardComponent.html":{},"components/DeviceDataComponent.html":{},"components/DevicesComponent.html":{},"components/DevicesDefaultComponent.html":{},"components/DocsComponent.html":{},"components/EditBatteryPackComponent.html":{},"components/EditCellsComponent.html":{},"components/EditTestChamberComponent.html":{},"components/FootNavComponent.html":{},"components/HeadNavComponent.html":{},"components/HomeComponent.html":{},"components/NoResultComponent.html":{},"components/ShowAllTestsResultComponent.html":{},"components/TestChambersComponent.html":{},"components/ViewBatteryPacksComponent.html":{},"components/ViewCellsComponent.html":{},"components/ViewTestChambersComponent.html":{}}}],["chamber._id",{"_index":2226,"title":{},"body":{"components/ViewCellsComponent.html":{},"components/ViewTestChambersComponent.html":{}}}],["chamber.component",{"_index":2159,"title":{},"body":{"modules/TestChambersModule.html":{},"modules/TestChambersRoutingModule.html":{}}}],["chamber.component.css",{"_index":335,"title":{},"body":{"components/AddTestChamberComponent.html":{},"components/EditTestChamberComponent.html":{}}}],["chamber.component.html",{"_index":336,"title":{},"body":{"components/AddTestChamberComponent.html":{},"components/EditTestChamberComponent.html":{}}}],["chamber.component.ts",{"_index":333,"title":{},"body":{"components/AddTestChamberComponent.html":{},"components/EditTestChamberComponent.html":{},"coverage.html":{}}}],["chamber.component.ts:127",{"_index":1715,"title":{},"body":{"components/EditTestChamberComponent.html":{}}}],["chamber.component.ts:163",{"_index":1717,"title":{},"body":{"components/EditTestChamberComponent.html":{}}}],["chamber.component.ts:19",{"_index":345,"title":{},"body":{"components/AddTestChamberComponent.html":{}}}],["chamber.component.ts:20",{"_index":347,"title":{},"body":{"components/AddTestChamberComponent.html":{},"components/EditTestChamberComponent.html":{}}}],["chamber.component.ts:21",{"_index":349,"title":{},"body":{"components/AddTestChamberComponent.html":{},"components/EditTestChamberComponent.html":{}}}],["chamber.component.ts:22",{"_index":350,"title":{},"body":{"components/AddTestChamberComponent.html":{},"components/EditTestChamberComponent.html":{}}}],["chamber.component.ts:23",{"_index":346,"title":{},"body":{"components/AddTestChamberComponent.html":{},"components/EditTestChamberComponent.html":{}}}],["chamber.component.ts:24",{"_index":348,"title":{},"body":{"components/AddTestChamberComponent.html":{},"components/EditTestChamberComponent.html":{}}}],["chamber.component.ts:25",{"_index":340,"title":{},"body":{"components/AddTestChamberComponent.html":{},"components/EditTestChamberComponent.html":{}}}],["chamber.component.ts:26",{"_index":1723,"title":{},"body":{"components/EditTestChamberComponent.html":{}}}],["chamber.component.ts:27",{"_index":1724,"title":{},"body":{"components/EditTestChamberComponent.html":{}}}],["chamber.component.ts:28",{"_index":1720,"title":{},"body":{"components/EditTestChamberComponent.html":{}}}],["chamber.component.ts:29",{"_index":1721,"title":{},"body":{"components/EditTestChamberComponent.html":{}}}],["chamber.component.ts:30",{"_index":1722,"title":{},"body":{"components/EditTestChamberComponent.html":{}}}],["chamber.component.ts:32",{"_index":1714,"title":{},"body":{"components/EditTestChamberComponent.html":{}}}],["chamber.component.ts:35",{"_index":341,"title":{},"body":{"components/AddTestChamberComponent.html":{}}}],["chamber.component.ts:41",{"_index":1718,"title":{},"body":{"components/EditTestChamberComponent.html":{}}}],["chamber.component.ts:60",{"_index":343,"title":{},"body":{"components/AddTestChamberComponent.html":{}}}],["chamber.component.ts:62",{"_index":1716,"title":{},"body":{"components/EditTestChamberComponent.html":{}}}],["chamber.component.ts:90",{"_index":1719,"title":{},"body":{"components/EditTestChamberComponent.html":{}}}],["chamber.component.ts:93",{"_index":342,"title":{},"body":{"components/AddTestChamberComponent.html":{}}}],["chamber.service",{"_index":352,"title":{},"body":{"components/AddTestChamberComponent.html":{},"components/BatteryTestComponent.html":{},"interfaces/Charts.html":{},"components/EditTestChamberComponent.html":{},"components/ShowAllTestsResultComponent.html":{},"components/TestChambersComponent.html":{},"components/ViewTestChambersComponent.html":{}}}],["chamber.service.ts",{"_index":2003,"title":{},"body":{"injectables/TestChamberService.html":{},"coverage.html":{}}}],["chamber.service.ts:110",{"_index":2032,"title":{},"body":{"injectables/TestChamberService.html":{}}}],["chamber.service.ts:122",{"_index":2040,"title":{},"body":{"injectables/TestChamberService.html":{}}}],["chamber.service.ts:141",{"_index":2029,"title":{},"body":{"injectables/TestChamberService.html":{}}}],["chamber.service.ts:155",{"_index":2026,"title":{},"body":{"injectables/TestChamberService.html":{}}}],["chamber.service.ts:17",{"_index":2015,"title":{},"body":{"injectables/TestChamberService.html":{}}}],["chamber.service.ts:181",{"_index":2027,"title":{},"body":{"injectables/TestChamberService.html":{}}}],["chamber.service.ts:20",{"_index":2034,"title":{},"body":{"injectables/TestChamberService.html":{}}}],["chamber.service.ts:31",{"_index":2017,"title":{},"body":{"injectables/TestChamberService.html":{}}}],["chamber.service.ts:39",{"_index":2024,"title":{},"body":{"injectables/TestChamberService.html":{}}}],["chamber.service.ts:48",{"_index":2044,"title":{},"body":{"injectables/TestChamberService.html":{}}}],["chamber.service.ts:55",{"_index":2020,"title":{},"body":{"injectables/TestChamberService.html":{}}}],["chamber.service.ts:64",{"_index":2037,"title":{},"body":{"injectables/TestChamberService.html":{}}}],["chamber.service.ts:69",{"_index":2030,"title":{},"body":{"injectables/TestChamberService.html":{}}}],["chamber.service.ts:75",{"_index":2042,"title":{},"body":{"injectables/TestChamberService.html":{}}}],["chamber.service.ts:84",{"_index":2022,"title":{},"body":{"injectables/TestChamberService.html":{}}}],["chamber.service.ts:95",{"_index":2036,"title":{},"body":{"injectables/TestChamberService.html":{}}}],["chamber/add",{"_index":332,"title":{},"body":{"components/AddTestChamberComponent.html":{},"modules/TestChambersModule.html":{},"modules/TestChambersRoutingModule.html":{},"coverage.html":{}}}],["chamber/all",{"_index":2057,"title":{},"body":{"injectables/TestChamberService.html":{}}}],["chamber/api",{"_index":2063,"title":{},"body":{"injectables/TestChamberService.html":{}}}],["chamber/controller",{"_index":369,"title":{},"body":{"components/AddTestChamberComponent.html":{},"components/EditTestChamberComponent.html":{}}}],["chamber/create",{"_index":2055,"title":{},"body":{"injectables/TestChamberService.html":{}}}],["chamber/delete",{"_index":2060,"title":{},"body":{"injectables/TestChamberService.html":{}}}],["chamber/download",{"_index":2073,"title":{},"body":{"injectables/TestChamberService.html":{}}}],["chamber/edit",{"_index":1713,"title":{},"body":{"components/EditTestChamberComponent.html":{},"modules/TestChambersModule.html":{},"modules/TestChambersRoutingModule.html":{},"coverage.html":{}}}],["chamber/force",{"_index":2066,"title":{},"body":{"injectables/TestChamberService.html":{}}}],["chamber/get",{"_index":2058,"title":{},"body":{"injectables/TestChamberService.html":{}}}],["chamber/is",{"_index":2062,"title":{},"body":{"injectables/TestChamberService.html":{}}}],["chamber/live",{"_index":2056,"title":{},"body":{"injectables/TestChamberService.html":{}}}],["chamberconfig",{"_index":2018,"title":{},"body":{"injectables/TestChamberService.html":{}}}],["chamberhum",{"_index":1132,"title":{},"body":{"interfaces/Channel.html":{},"interfaces/MeasuredParameters.html":{},"interfaces/QuickResponseMeasurement.html":{},"interfaces/RowInfo.html":{},"interfaces/SensorObj.html":{},"interfaces/TestChannel.html":{},"interfaces/TestChannelDeepChannel.html":{},"interfaces/TestResultDocument.html":{},"interfaces/_TestResultDeep.html":{},"interfaces/_TestResultLight.html":{}}}],["chamberid",{"_index":1201,"title":{},"body":{"interfaces/Charts.html":{},"components/EditTestChamberComponent.html":{},"injectables/TestChamberService.html":{},"components/ViewCellsComponent.html":{},"components/ViewTestChambersComponent.html":{}}}],["chambername",{"_index":1107,"title":{},"body":{"interfaces/Channel.html":{},"interfaces/MeasuredParameters.html":{},"interfaces/QuickResponseMeasurement.html":{},"interfaces/RowInfo.html":{},"interfaces/SensorObj.html":{},"interfaces/TestChannel.html":{},"interfaces/TestChannelDeepChannel.html":{},"interfaces/TestResultDocument.html":{},"interfaces/_TestResultDeep.html":{},"interfaces/_TestResultLight.html":{}}}],["chambers",{"_index":89,"title":{},"body":{"components/AddBatteryPackComponent.html":{},"components/AddCellsComponent.html":{},"components/AddTestChamberComponent.html":{},"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/BatteryPacksComponent.html":{},"components/BatteryTestComponent.html":{},"components/CellsComponent.html":{},"components/DashboardComponent.html":{},"components/DeviceDataComponent.html":{},"components/DevicesComponent.html":{},"components/DevicesDefaultComponent.html":{},"components/DocsComponent.html":{},"components/EditBatteryPackComponent.html":{},"components/EditCellsComponent.html":{},"components/EditTestChamberComponent.html":{},"components/FootNavComponent.html":{},"components/HeadNavComponent.html":{},"components/HomeComponent.html":{},"components/NoResultComponent.html":{},"components/ShowAllTestsResultComponent.html":{},"components/TestChambersComponent.html":{},"modules/TestChambersModule.html":{},"modules/TestChambersRoutingModule.html":{},"components/ViewBatteryPacksComponent.html":{},"components/ViewCellsComponent.html":{},"components/ViewTestChambersComponent.html":{}}}],["chambers'},{'name",{"_index":84,"title":{},"body":{"components/AddBatteryPackComponent.html":{},"components/AddCellsComponent.html":{},"components/AddTestChamberComponent.html":{},"components/AppComponent.html":{},"components/BatteryPacksComponent.html":{},"components/BatteryTestComponent.html":{},"components/CellsComponent.html":{},"components/DashboardComponent.html":{},"components/DeviceDataComponent.html":{},"components/DevicesComponent.html":{},"components/DevicesDefaultComponent.html":{},"components/DocsComponent.html":{},"components/EditBatteryPackComponent.html":{},"components/EditCellsComponent.html":{},"components/EditTestChamberComponent.html":{},"components/FootNavComponent.html":{},"components/HeadNavComponent.html":{},"components/HomeComponent.html":{},"components/NoResultComponent.html":{},"components/ShowAllTestsResultComponent.html":{},"components/TestChambersComponent.html":{},"components/ViewBatteryPacksComponent.html":{},"components/ViewCellsComponent.html":{},"components/ViewTestChambersComponent.html":{}}}],["chambers.component",{"_index":2158,"title":{},"body":{"modules/TestChambersModule.html":{},"modules/TestChambersRoutingModule.html":{}}}],["chambers.component.css",{"_index":2076,"title":{},"body":{"components/TestChambersComponent.html":{},"components/ViewTestChambersComponent.html":{}}}],["chambers.component.html",{"_index":2077,"title":{},"body":{"components/TestChambersComponent.html":{},"components/ViewTestChambersComponent.html":{}}}],["chambers.component.ts",{"_index":2075,"title":{},"body":{"components/TestChambersComponent.html":{},"components/ViewTestChambersComponent.html":{},"coverage.html":{}}}],["chambers.component.ts:101",{"_index":2267,"title":{},"body":{"components/ViewTestChambersComponent.html":{}}}],["chambers.component.ts:11",{"_index":2083,"title":{},"body":{"components/TestChambersComponent.html":{}}}],["chambers.component.ts:113",{"_index":2261,"title":{},"body":{"components/ViewTestChambersComponent.html":{}}}],["chambers.component.ts:12",{"_index":2080,"title":{},"body":{"components/TestChambersComponent.html":{}}}],["chambers.component.ts:129",{"_index":2262,"title":{},"body":{"components/ViewTestChambersComponent.html":{}}}],["chambers.component.ts:13",{"_index":2270,"title":{},"body":{"components/ViewTestChambersComponent.html":{}}}],["chambers.component.ts:14",{"_index":2269,"title":{},"body":{"components/ViewTestChambersComponent.html":{}}}],["chambers.component.ts:15",{"_index":2082,"title":{},"body":{"components/TestChambersComponent.html":{},"components/ViewTestChambersComponent.html":{}}}],["chambers.component.ts:16",{"_index":2274,"title":{},"body":{"components/ViewTestChambersComponent.html":{}}}],["chambers.component.ts:17",{"_index":2278,"title":{},"body":{"components/ViewTestChambersComponent.html":{}}}],["chambers.component.ts:18",{"_index":2276,"title":{},"body":{"components/ViewTestChambersComponent.html":{}}}],["chambers.component.ts:19",{"_index":2277,"title":{},"body":{"components/ViewTestChambersComponent.html":{}}}],["chambers.component.ts:20",{"_index":2275,"title":{},"body":{"components/ViewTestChambersComponent.html":{}}}],["chambers.component.ts:21",{"_index":2271,"title":{},"body":{"components/ViewTestChambersComponent.html":{}}}],["chambers.component.ts:22",{"_index":2272,"title":{},"body":{"components/ViewTestChambersComponent.html":{}}}],["chambers.component.ts:23",{"_index":2273,"title":{},"body":{"components/ViewTestChambersComponent.html":{}}}],["chambers.component.ts:24",{"_index":2260,"title":{},"body":{"components/ViewTestChambersComponent.html":{}}}],["chambers.component.ts:25",{"_index":2081,"title":{},"body":{"components/TestChambersComponent.html":{}}}],["chambers.component.ts:31",{"_index":2265,"title":{},"body":{"components/ViewTestChambersComponent.html":{}}}],["chambers.component.ts:56",{"_index":2268,"title":{},"body":{"components/ViewTestChambersComponent.html":{}}}],["chambers.component.ts:73",{"_index":2263,"title":{},"body":{"components/ViewTestChambersComponent.html":{}}}],["chambers.component.ts:94",{"_index":2264,"title":{},"body":{"components/ViewTestChambersComponent.html":{}}}],["chambers.module').then",{"_index":641,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["chambers.module.ts",{"_index":2156,"title":{},"body":{"modules/TestChambersModule.html":{}}}],["chambers/add",{"_index":331,"title":{},"body":{"components/AddTestChamberComponent.html":{},"modules/TestChambersModule.html":{},"modules/TestChambersRoutingModule.html":{},"coverage.html":{}}}],["chambers/edit",{"_index":1712,"title":{},"body":{"components/EditTestChamberComponent.html":{},"modules/TestChambersModule.html":{},"modules/TestChambersRoutingModule.html":{},"coverage.html":{}}}],["chambers/test",{"_index":640,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/TestChambersComponent.html":{},"modules/TestChambersModule.html":{},"modules/TestChambersRoutingModule.html":{},"coverage.html":{}}}],["chambers/view",{"_index":2160,"title":{},"body":{"modules/TestChambersModule.html":{},"modules/TestChambersRoutingModule.html":{},"components/ViewTestChambersComponent.html":{},"coverage.html":{}}}],["chambers[0",{"_index":1729,"title":{},"body":{"components/EditTestChamberComponent.html":{}}}],["chambertemp",{"_index":1131,"title":{},"body":{"interfaces/Channel.html":{},"interfaces/MeasuredParameters.html":{},"interfaces/QuickResponseMeasurement.html":{},"interfaces/RowInfo.html":{},"interfaces/SensorObj.html":{},"interfaces/TestChannel.html":{},"interfaces/TestChannelDeepChannel.html":{},"interfaces/TestResultDocument.html":{},"interfaces/_TestResultDeep.html":{},"interfaces/_TestResultLight.html":{}}}],["change",{"_index":480,"title":{},"body":{"classes/Anim.html":{},"interfaces/BreadCrumbs.html":{},"components/DashboardComponent.html":{},"classes/Dot.html":{},"components/HomeComponent.html":{},"index.html":{}}}],["changestatus(status",{"_index":1386,"title":{},"body":{"interfaces/Charts.html":{}}}],["changetoaststatus",{"_index":500,"title":{},"body":{"components/AppComponent.html":{}}}],["changetoaststatus(status",{"_index":507,"title":{},"body":{"components/AppComponent.html":{}}}],["changeview",{"_index":703,"title":{},"body":{"components/BatteryTestComponent.html":{},"components/ShowAllTestsResultComponent.html":{},"components/ViewTestChambersComponent.html":{}}}],["channel",{"_index":388,"title":{"interfaces/Channel.html":{}},"body":{"components/AddTestChamberComponent.html":{},"components/BatteryTestComponent.html":{},"interfaces/Channel.html":{},"interfaces/Charts.html":{},"components/EditTestChamberComponent.html":{},"interfaces/MeasuredParameters.html":{},"interfaces/QuickResponseMeasurement.html":{},"interfaces/RowInfo.html":{},"interfaces/SensorObj.html":{},"interfaces/TestChannel.html":{},"interfaces/TestChannelDeepChannel.html":{},"interfaces/TestResultDocument.html":{},"interfaces/_TestResultDeep.html":{},"interfaces/_TestResultLight.html":{},"coverage.html":{}}}],["channelfields",{"_index":1144,"title":{"interfaces/ChannelFields.html":{}},"body":{"interfaces/ChannelFields.html":{},"interfaces/FileField.html":{},"interfaces/InputField.html":{},"interfaces/PayLoad.html":{},"interfaces/SelectField.html":{},"interfaces/TestFormat.html":{},"interfaces/TextField.html":{},"coverage.html":{}}}],["channelno",{"_index":1095,"title":{},"body":{"interfaces/Channel.html":{},"interfaces/Charts.html":{},"interfaces/MeasuredParameters.html":{},"interfaces/QuickResponseMeasurement.html":{},"interfaces/RowInfo.html":{},"interfaces/SensorObj.html":{},"injectables/TestChamberService.html":{},"interfaces/TestChannel.html":{},"interfaces/TestChannelDeepChannel.html":{},"interfaces/TestResultDocument.html":{},"interfaces/_TestResultDeep.html":{},"interfaces/_TestResultLight.html":{}}}],["channelnumber",{"_index":1121,"title":{},"body":{"interfaces/Channel.html":{},"interfaces/ChannelFields.html":{},"interfaces/FileField.html":{},"interfaces/InputField.html":{},"interfaces/MeasuredParameters.html":{},"interfaces/PayLoad.html":{},"interfaces/QuickResponseMeasurement.html":{},"interfaces/RowInfo.html":{},"interfaces/SelectField.html":{},"interfaces/SensorObj.html":{},"interfaces/TestChannel.html":{},"interfaces/TestChannelDeepChannel.html":{},"interfaces/TestFormat.html":{},"interfaces/TestResultDocument.html":{},"interfaces/TextField.html":{},"interfaces/_TestResultDeep.html":{},"interfaces/_TestResultLight.html":{}}}],["channelquickresponse",{"_index":1230,"title":{},"body":{"interfaces/Charts.html":{}}}],["channelquickresponse.channelno",{"_index":1289,"title":{},"body":{"interfaces/Charts.html":{}}}],["channelquickresponse.measuredparameters",{"_index":1285,"title":{},"body":{"interfaces/Charts.html":{}}}],["channelquickresponse.measuredparameters.celltemp",{"_index":1273,"title":{},"body":{"interfaces/Charts.html":{}}}],["channelquickresponse.measuredparameters.celltemp.foreach",{"_index":1277,"title":{},"body":{"interfaces/Charts.html":{}}}],["channelquickresponse.measuredparameters.celltemp.length",{"_index":1274,"title":{},"body":{"interfaces/Charts.html":{}}}],["channelquickresponse.measuredparameters.chamberhum",{"_index":1269,"title":{},"body":{"interfaces/Charts.html":{}}}],["channelquickresponse.measuredparameters.chamberhum.length",{"_index":1270,"title":{},"body":{"interfaces/Charts.html":{}}}],["channelquickresponse.measuredparameters.chambertemp",{"_index":1266,"title":{},"body":{"interfaces/Charts.html":{}}}],["channelquickresponse.measuredparameters.chambertemp.length",{"_index":1267,"title":{},"body":{"interfaces/Charts.html":{}}}],["channelquickresponse.measuredparameters.current",{"_index":1248,"title":{},"body":{"interfaces/Charts.html":{}}}],["channelquickresponse.measuredparameters.current.length",{"_index":1249,"title":{},"body":{"interfaces/Charts.html":{}}}],["channelquickresponse.measuredparameters.voltage",{"_index":1263,"title":{},"body":{"interfaces/Charts.html":{}}}],["channelquickresponse.measuredparameters.voltage.length",{"_index":1264,"title":{},"body":{"interfaces/Charts.html":{}}}],["channels",{"_index":383,"title":{},"body":{"components/AddTestChamberComponent.html":{},"components/BatteryTestComponent.html":{},"interfaces/Channel.html":{},"interfaces/ChannelFields.html":{},"components/EditTestChamberComponent.html":{},"interfaces/FileField.html":{},"interfaces/InputField.html":{},"interfaces/MeasuredParameters.html":{},"interfaces/PayLoad.html":{},"interfaces/QuickResponseMeasurement.html":{},"interfaces/RowInfo.html":{},"interfaces/SelectField.html":{},"interfaces/SensorObj.html":{},"interfaces/TestChannel.html":{},"interfaces/TestChannelDeepChannel.html":{},"interfaces/TestFormat.html":{},"interfaces/TestResultDocument.html":{},"interfaces/TextField.html":{},"components/ViewTestChambersComponent.html":{},"interfaces/_TestResultDeep.html":{},"interfaces/_TestResultLight.html":{}}}],["charge",{"_index":1164,"title":{},"body":{"interfaces/ChannelFields.html":{},"interfaces/FileField.html":{},"components/HomeComponent.html":{},"interfaces/InputField.html":{},"interfaces/PayLoad.html":{},"interfaces/SelectField.html":{},"interfaces/TestFormat.html":{},"interfaces/TextField.html":{},"miscellaneous/variables.html":{}}}],["charge/discharge",{"_index":1452,"title":{},"body":{"components/DashboardComponent.html":{},"components/HomeComponent.html":{}}}],["chargedischargestatus",{"_index":1517,"title":{},"body":{"interfaces/DeviceDataLight.html":{}}}],["chargedischargestatus:'idle'|'charging'|'discharging",{"_index":1538,"title":{},"body":{"interfaces/DeviceDataLight.html":{}}}],["charging",{"_index":1526,"title":{},"body":{"interfaces/DeviceDataLight.html":{},"components/HomeComponent.html":{}}}],["chart",{"_index":1251,"title":{},"body":{"interfaces/Charts.html":{}}}],["chart.chartdata.datasets.push",{"_index":1281,"title":{},"body":{"interfaces/Charts.html":{}}}],["chart.js",{"_index":1186,"title":{},"body":{"interfaces/Charts.html":{},"dependencies.html":{}}}],["chart.update",{"_index":1294,"title":{},"body":{"interfaces/Charts.html":{}}}],["chartconfiguration",{"_index":1185,"title":{},"body":{"interfaces/Charts.html":{}}}],["chartconfiguration['data",{"_index":1191,"title":{},"body":{"interfaces/Charts.html":{}}}],["chartconfiguration['options",{"_index":1192,"title":{},"body":{"interfaces/Charts.html":{}}}],["chartdata",{"_index":1178,"title":{},"body":{"interfaces/Charts.html":{}}}],["chartoptions",{"_index":1179,"title":{},"body":{"interfaces/Charts.html":{}}}],["charts",{"_index":772,"title":{"interfaces/Charts.html":{}},"body":{"modules/BatteryTestModule.html":{},"interfaces/Charts.html":{},"coverage.html":{},"dependencies.html":{}}}],["chartsub",{"_index":1199,"title":{},"body":{"interfaces/Charts.html":{}}}],["charttype",{"_index":1180,"title":{},"body":{"interfaces/Charts.html":{}}}],["check",{"_index":2405,"title":{},"body":{"index.html":{}}}],["chemistry",{"_index":284,"title":{},"body":{"components/AddCellsComponent.html":{},"components/EditCellsComponent.html":{},"components/ViewCellsComponent.html":{}}}],["chenddate",{"_index":1124,"title":{},"body":{"interfaces/Channel.html":{},"interfaces/MeasuredParameters.html":{},"interfaces/QuickResponseMeasurement.html":{},"interfaces/RowInfo.html":{},"interfaces/SensorObj.html":{},"interfaces/TestChannel.html":{},"interfaces/TestChannelDeepChannel.html":{},"interfaces/TestResultDocument.html":{},"interfaces/_TestResultDeep.html":{},"interfaces/_TestResultLight.html":{}}}],["child",{"_index":826,"title":{},"body":{"interfaces/BreadCrumbs.html":{},"components/DashboardComponent.html":{}}}],["children",{"_index":628,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/BatteryTestRoutingModule.html":{}}}],["chmaber",{"_index":363,"title":{},"body":{"components/AddTestChamberComponent.html":{},"components/EditTestChamberComponent.html":{}}}],["chmultiplier",{"_index":1114,"title":{},"body":{"interfaces/Channel.html":{},"interfaces/MeasuredParameters.html":{},"interfaces/QuickResponseMeasurement.html":{},"interfaces/RowInfo.html":{},"interfaces/SensorObj.html":{},"interfaces/TestChannel.html":{},"interfaces/TestChannelDeepChannel.html":{},"interfaces/TestResultDocument.html":{},"interfaces/_TestResultDeep.html":{},"interfaces/_TestResultLight.html":{}}}],["chmultiplierindex",{"_index":1113,"title":{},"body":{"interfaces/Channel.html":{},"interfaces/MeasuredParameters.html":{},"interfaces/QuickResponseMeasurement.html":{},"interfaces/RowInfo.html":{},"interfaces/SensorObj.html":{},"interfaces/TestChannel.html":{},"interfaces/TestChannelDeepChannel.html":{},"interfaces/TestResultDocument.html":{},"interfaces/_TestResultDeep.html":{},"interfaces/_TestResultLight.html":{}}}],["choice",{"_index":2399,"title":{},"body":{"index.html":{}}}],["chrome",{"_index":318,"title":{},"body":{"components/AddCellsComponent.html":{},"components/AddTestChamberComponent.html":{},"components/EditCellsComponent.html":{},"components/EditTestChamberComponent.html":{}}}],["chstartdate",{"_index":1123,"title":{},"body":{"interfaces/Channel.html":{},"interfaces/MeasuredParameters.html":{},"interfaces/QuickResponseMeasurement.html":{},"interfaces/RowInfo.html":{},"interfaces/SensorObj.html":{},"interfaces/TestChannel.html":{},"interfaces/TestChannelDeepChannel.html":{},"interfaces/TestResultDocument.html":{},"interfaces/_TestResultDeep.html":{},"interfaces/_TestResultLight.html":{}}}],["circle",{"_index":591,"title":{},"body":{"modules/AppModule.html":{},"components/DashboardComponent.html":{},"dependencies.html":{}}}],["class",{"_index":28,"title":{"classes/Anim.html":{},"classes/CellClass.html":{},"classes/Dot.html":{},"classes/TestChamber.html":{}},"body":{"components/AddBatteryPackComponent.html":{},"components/AddCellsComponent.html":{},"components/AddTestChamberComponent.html":{},"classes/Anim.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"components/BatteryPacksComponent.html":{},"modules/BatteryPacksModule.html":{},"modules/BatteryPacksRoutingModule.html":{},"components/BatteryTestComponent.html":{},"modules/BatteryTestModule.html":{},"modules/BatteryTestRoutingModule.html":{},"interfaces/BreadCrumbs.html":{},"interfaces/Cell.html":{},"classes/CellClass.html":{},"injectables/CellService.html":{},"components/CellsComponent.html":{},"modules/CellsModule.html":{},"modules/CellsRoutingModule.html":{},"interfaces/Charts.html":{},"injectables/ComponentStoreService.html":{},"components/DashboardComponent.html":{},"components/DeviceDataComponent.html":{},"injectables/DeviceDataService.html":{},"components/DevicesComponent.html":{},"components/DevicesDefaultComponent.html":{},"components/DocsComponent.html":{},"classes/Dot.html":{},"components/EditBatteryPackComponent.html":{},"components/EditCellsComponent.html":{},"components/EditTestChamberComponent.html":{},"components/FootNavComponent.html":{},"components/HeadNavComponent.html":{},"components/HomeComponent.html":{},"components/NoResultComponent.html":{},"modules/SharedModule.html":{},"components/ShowAllTestsResultComponent.html":{},"classes/TestChamber.html":{},"injectables/TestChamberService.html":{},"components/TestChambersComponent.html":{},"modules/TestChambersModule.html":{},"modules/TestChambersRoutingModule.html":{},"injectables/TestDataService.html":{},"injectables/TestService.html":{},"injectables/UserService.html":{},"components/ViewBatteryPacksComponent.html":{},"components/ViewCellsComponent.html":{},"components/ViewTestChambersComponent.html":{},"interfaces/_TestChamber.html":{},"interfaces/_User.html":{},"interfaces/_UserLight.html":{},"coverage.html":{}}}],["classes",{"_index":396,"title":{},"body":{"classes/Anim.html":{},"classes/CellClass.html":{},"classes/Dot.html":{},"classes/TestChamber.html":{},"overview.html":{}}}],["clearinterval(this.alltestintervalid",{"_index":1955,"title":{},"body":{"components/ShowAllTestsResultComponent.html":{}}}],["clearinterval(this.intervalid",{"_index":730,"title":{},"body":{"components/BatteryTestComponent.html":{}}}],["clearinterval(this.isconnectedintervalid",{"_index":1409,"title":{},"body":{"interfaces/Charts.html":{},"components/ViewTestChambersComponent.html":{}}}],["clearinterval(this.measurementupdateintervalid",{"_index":1221,"title":{},"body":{"interfaces/Charts.html":{}}}],["clearinterval(this.testinfointervalid",{"_index":1348,"title":{},"body":{"interfaces/Charts.html":{}}}],["cleartimeout(this.x",{"_index":534,"title":{},"body":{"components/AppComponent.html":{}}}],["cli",{"_index":2378,"title":{},"body":{"index.html":{}}}],["clientid",{"_index":2423,"title":{},"body":{"miscellaneous/variables.html":{}}}],["clipboard",{"_index":2258,"title":{},"body":{"components/ViewTestChambersComponent.html":{}}}],["cloud",{"_index":1390,"title":{},"body":{"interfaces/Charts.html":{},"components/FootNavComponent.html":{},"components/HomeComponent.html":{},"components/TestChambersComponent.html":{}}}],["cluster_appmodule",{"_index":554,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_bootstrap",{"_index":555,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_declarations",{"_index":557,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":556,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_batterypacksmodule",{"_index":681,"title":{},"body":{"modules/BatteryPacksModule.html":{},"overview.html":{}}}],["cluster_batterypacksmodule_declarations",{"_index":683,"title":{},"body":{"modules/BatteryPacksModule.html":{},"overview.html":{}}}],["cluster_batterypacksmodule_imports",{"_index":682,"title":{},"body":{"modules/BatteryPacksModule.html":{},"overview.html":{}}}],["cluster_batterytestmodule",{"_index":764,"title":{},"body":{"modules/BatteryTestModule.html":{},"overview.html":{}}}],["cluster_batterytestmodule_declarations",{"_index":766,"title":{},"body":{"modules/BatteryTestModule.html":{},"overview.html":{}}}],["cluster_batterytestmodule_imports",{"_index":765,"title":{},"body":{"modules/BatteryTestModule.html":{},"overview.html":{}}}],["cluster_cellsmodule",{"_index":1080,"title":{},"body":{"modules/CellsModule.html":{},"overview.html":{}}}],["cluster_cellsmodule_declarations",{"_index":1081,"title":{},"body":{"modules/CellsModule.html":{},"overview.html":{}}}],["cluster_cellsmodule_imports",{"_index":1082,"title":{},"body":{"modules/CellsModule.html":{},"overview.html":{}}}],["cluster_testchambersmodule",{"_index":2151,"title":{},"body":{"modules/TestChambersModule.html":{},"overview.html":{}}}],["cluster_testchambersmodule_declarations",{"_index":2153,"title":{},"body":{"modules/TestChambersModule.html":{},"overview.html":{}}}],["cluster_testchambersmodule_imports",{"_index":2152,"title":{},"body":{"modules/TestChambersModule.html":{},"overview.html":{}}}],["code",{"_index":2388,"title":{},"body":{"index.html":{}}}],["col",{"_index":2251,"title":{},"body":{"components/ViewCellsComponent.html":{},"components/ViewTestChambersComponent.html":{}}}],["collapse",{"_index":1052,"title":{},"body":{"components/CellsComponent.html":{},"components/TestChambersComponent.html":{}}}],["color",{"_index":220,"title":{},"body":{"components/AddCellsComponent.html":{},"components/AddTestChamberComponent.html":{},"components/BatteryTestComponent.html":{},"components/CellsComponent.html":{},"interfaces/Charts.html":{},"injectables/ComponentStoreService.html":{},"components/DashboardComponent.html":{},"components/DevicesDefaultComponent.html":{},"components/EditCellsComponent.html":{},"components/EditTestChamberComponent.html":{},"components/FootNavComponent.html":{},"components/HeadNavComponent.html":{},"components/HomeComponent.html":{},"components/TestChambersComponent.html":{},"interfaces/ToastMsg.html":{},"components/ViewCellsComponent.html":{},"components/ViewTestChambersComponent.html":{}}}],["color:rgba(128",{"_index":1485,"title":{},"body":{"components/DashboardComponent.html":{}}}],["color?:string",{"_index":2181,"title":{},"body":{"interfaces/ToastMsg.html":{}}}],["comes",{"_index":2117,"title":{},"body":{"components/TestChambersComponent.html":{}}}],["command",{"_index":2400,"title":{},"body":{"index.html":{}}}],["comming",{"_index":29,"title":{},"body":{"components/AddBatteryPackComponent.html":{},"components/BatteryPacksComponent.html":{},"components/EditBatteryPackComponent.html":{},"components/ViewBatteryPacksComponent.html":{}}}],["commonmodule",{"_index":687,"title":{},"body":{"modules/BatteryPacksModule.html":{},"modules/BatteryTestModule.html":{},"modules/SharedModule.html":{}}}],["completed",{"_index":1100,"title":{},"body":{"interfaces/Channel.html":{},"interfaces/Charts.html":{},"interfaces/MeasuredParameters.html":{},"interfaces/QuickResponseMeasurement.html":{},"interfaces/RowInfo.html":{},"interfaces/SensorObj.html":{},"interfaces/Test.html":{},"interfaces/TestChannel.html":{},"interfaces/TestChannelDeepChannel.html":{},"interfaces/TestResultDocument.html":{},"interfaces/_TestResultDeep.html":{},"interfaces/_TestResultLight.html":{}}}],["complex",{"_index":1613,"title":{},"body":{"components/DevicesDefaultComponent.html":{},"components/TestChambersComponent.html":{}}}],["compodoc/compodoc",{"_index":2355,"title":{},"body":{"dependencies.html":{}}}],["component",{"_index":0,"title":{"components/AddBatteryPackComponent.html":{},"components/AddCellsComponent.html":{},"components/AddTestChamberComponent.html":{},"components/AppComponent.html":{},"components/BatteryPacksComponent.html":{},"components/BatteryTestComponent.html":{},"components/CellsComponent.html":{},"components/DashboardComponent.html":{},"components/DeviceDataComponent.html":{},"components/DevicesComponent.html":{},"components/DevicesDefaultComponent.html":{},"components/DocsComponent.html":{},"components/EditBatteryPackComponent.html":{},"components/EditCellsComponent.html":{},"components/EditTestChamberComponent.html":{},"components/FootNavComponent.html":{},"components/HeadNavComponent.html":{},"components/HomeComponent.html":{},"components/NoResultComponent.html":{},"components/ShowAllTestsResultComponent.html":{},"components/TestChambersComponent.html":{},"components/ViewBatteryPacksComponent.html":{},"components/ViewCellsComponent.html":{},"components/ViewTestChambersComponent.html":{}},"body":{"components/AddBatteryPackComponent.html":{},"components/AddCellsComponent.html":{},"components/AddTestChamberComponent.html":{},"classes/Anim.html":{},"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/BatteryPacksComponent.html":{},"modules/BatteryPacksRoutingModule.html":{},"components/BatteryTestComponent.html":{},"modules/BatteryTestRoutingModule.html":{},"interfaces/BreadCrumbs.html":{},"components/CellsComponent.html":{},"modules/CellsRoutingModule.html":{},"interfaces/Charts.html":{},"components/DashboardComponent.html":{},"components/DeviceDataComponent.html":{},"components/DevicesComponent.html":{},"components/DevicesDefaultComponent.html":{},"components/DocsComponent.html":{},"classes/Dot.html":{},"components/EditBatteryPackComponent.html":{},"components/EditCellsComponent.html":{},"components/EditTestChamberComponent.html":{},"components/FootNavComponent.html":{},"components/HeadNavComponent.html":{},"components/HomeComponent.html":{},"components/NoResultComponent.html":{},"components/ShowAllTestsResultComponent.html":{},"components/TestChambersComponent.html":{},"modules/TestChambersRoutingModule.html":{},"components/ViewBatteryPacksComponent.html":{},"components/ViewCellsComponent.html":{},"components/ViewTestChambersComponent.html":{},"coverage.html":{},"index.html":{}}}],["component_template",{"_index":36,"title":{},"body":{"components/AddBatteryPackComponent.html":{},"components/AddCellsComponent.html":{},"components/AddTestChamberComponent.html":{},"components/AppComponent.html":{},"components/BatteryPacksComponent.html":{},"components/BatteryTestComponent.html":{},"components/CellsComponent.html":{},"components/DashboardComponent.html":{},"components/DeviceDataComponent.html":{},"components/DevicesComponent.html":{},"components/DevicesDefaultComponent.html":{},"components/DocsComponent.html":{},"components/EditBatteryPackComponent.html":{},"components/EditCellsComponent.html":{},"components/EditTestChamberComponent.html":{},"components/FootNavComponent.html":{},"components/HeadNavComponent.html":{},"components/HomeComponent.html":{},"components/NoResultComponent.html":{},"components/ShowAllTestsResultComponent.html":{},"components/TestChambersComponent.html":{},"components/ViewBatteryPacksComponent.html":{},"components/ViewCellsComponent.html":{},"components/ViewTestChambersComponent.html":{}}}],["components",{"_index":2,"title":{},"body":{"components/AddBatteryPackComponent.html":{},"components/AddCellsComponent.html":{},"components/AddTestChamberComponent.html":{},"components/AppComponent.html":{},"components/BatteryPacksComponent.html":{},"components/BatteryTestComponent.html":{},"components/CellsComponent.html":{},"components/DashboardComponent.html":{},"components/DeviceDataComponent.html":{},"components/DevicesComponent.html":{},"components/DevicesDefaultComponent.html":{},"components/DocsComponent.html":{},"components/EditBatteryPackComponent.html":{},"components/EditCellsComponent.html":{},"components/EditTestChamberComponent.html":{},"components/FootNavComponent.html":{},"components/HeadNavComponent.html":{},"components/HomeComponent.html":{},"components/NoResultComponent.html":{},"components/ShowAllTestsResultComponent.html":{},"components/TestChambersComponent.html":{},"components/ViewBatteryPacksComponent.html":{},"components/ViewCellsComponent.html":{},"components/ViewTestChambersComponent.html":{},"overview.html":{}}}],["components/body/battery",{"_index":618,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/BatteryTestModule.html":{},"modules/BatteryTestRoutingModule.html":{}}}],["components/body/dashboard/dashboard.component",{"_index":585,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["components/body/dashboard/device",{"_index":593,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["components/body/devices/battery",{"_index":688,"title":{},"body":{"modules/BatteryPacksModule.html":{},"modules/BatteryPacksRoutingModule.html":{}}}],["components/body/devices/cells/add",{"_index":1090,"title":{},"body":{"modules/CellsModule.html":{},"modules/CellsRoutingModule.html":{}}}],["components/body/devices/cells/cells.component",{"_index":1091,"title":{},"body":{"modules/CellsModule.html":{},"modules/CellsRoutingModule.html":{}}}],["components/body/devices/cells/edit",{"_index":1088,"title":{},"body":{"modules/CellsModule.html":{},"modules/CellsRoutingModule.html":{}}}],["components/body/devices/cells/view",{"_index":1085,"title":{},"body":{"modules/CellsModule.html":{},"modules/CellsRoutingModule.html":{}}}],["components/body/devices/devices",{"_index":600,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["components/body/devices/devices.component",{"_index":583,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["components/body/devices/test",{"_index":2157,"title":{},"body":{"modules/TestChambersModule.html":{},"modules/TestChambersRoutingModule.html":{}}}],["components/body/docs/docs.component",{"_index":584,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["components/body/home/home.component",{"_index":582,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["components/footer/foot",{"_index":577,"title":{},"body":{"modules/AppModule.html":{}}}],["components/header/head",{"_index":580,"title":{},"body":{"modules/AppModule.html":{}}}],["componentstoreservice",{"_index":127,"title":{"injectables/ComponentStoreService.html":{}},"body":{"components/AddCellsComponent.html":{},"components/AddTestChamberComponent.html":{},"components/AppComponent.html":{},"interfaces/BreadCrumbs.html":{},"interfaces/Charts.html":{},"injectables/ComponentStoreService.html":{},"components/DashboardComponent.html":{},"components/EditCellsComponent.html":{},"components/EditTestChamberComponent.html":{},"components/ViewTestChambersComponent.html":{},"coverage.html":{}}}],["comprehensive",{"_index":1590,"title":{},"body":{"components/DevicesDefaultComponent.html":{},"components/TestChambersComponent.html":{}}}],["computation",{"_index":2116,"title":{},"body":{"components/TestChambersComponent.html":{}}}],["computations",{"_index":1762,"title":{},"body":{"components/FootNavComponent.html":{},"components/TestChambersComponent.html":{}}}],["conducted",{"_index":1597,"title":{},"body":{"components/DevicesDefaultComponent.html":{}}}],["config",{"_index":2432,"title":{},"body":{"miscellaneous/variables.html":{}}}],["configured",{"_index":1455,"title":{},"body":{"components/DashboardComponent.html":{}}}],["connect",{"_index":415,"title":{},"body":{"classes/Anim.html":{},"components/DevicesDefaultComponent.html":{},"classes/Dot.html":{},"components/HomeComponent.html":{}}}],["connected",{"_index":848,"title":{},"body":{"interfaces/BreadCrumbs.html":{},"components/DashboardComponent.html":{},"injectables/TestChamberService.html":{}}}],["connsub",{"_index":1209,"title":{},"body":{"interfaces/Charts.html":{},"components/ViewTestChambersComponent.html":{}}}],["consolas",{"_index":1787,"title":{},"body":{"components/FootNavComponent.html":{}}}],["console.error",{"_index":945,"title":{},"body":{"injectables/CellService.html":{},"injectables/TestChamberService.html":{},"injectables/UserService.html":{},"interfaces/_User.html":{},"interfaces/_UserLight.html":{}}}],["console.error(`backed",{"_index":949,"title":{},"body":{"injectables/CellService.html":{},"injectables/DeviceDataService.html":{},"injectables/TestChamberService.html":{},"injectables/TestDataService.html":{},"injectables/UserService.html":{},"interfaces/_User.html":{},"interfaces/_UserLight.html":{}}}],["console.error(`something",{"_index":1555,"title":{},"body":{"injectables/DeviceDataService.html":{},"injectables/TestDataService.html":{}}}],["console.error(e",{"_index":228,"title":{},"body":{"components/AddCellsComponent.html":{},"components/AddTestChamberComponent.html":{},"components/EditCellsComponent.html":{},"components/EditTestChamberComponent.html":{}}}],["console.log(\"user",{"_index":1842,"title":{},"body":{"components/HeadNavComponent.html":{}}}],["console.log('accepted",{"_index":1364,"title":{},"body":{"interfaces/Charts.html":{},"components/EditCellsComponent.html":{},"components/EditTestChamberComponent.html":{}}}],["console.log('closed",{"_index":1371,"title":{},"body":{"interfaces/Charts.html":{},"components/EditCellsComponent.html":{},"components/EditTestChamberComponent.html":{}}}],["console.log(data",{"_index":2214,"title":{},"body":{"components/ViewCellsComponent.html":{},"components/ViewTestChambersComponent.html":{}}}],["console.log(err",{"_index":729,"title":{},"body":{"components/BatteryTestComponent.html":{},"components/EditCellsComponent.html":{},"components/EditTestChamberComponent.html":{}}}],["console.log(msg",{"_index":525,"title":{},"body":{"components/AppComponent.html":{}}}],["console.log(router.routerstate.snapshot.url",{"_index":970,"title":{},"body":{"components/CellsComponent.html":{}}}],["console.log(testconfig",{"_index":2054,"title":{},"body":{"injectables/TestChamberService.html":{}}}],["console.log(this.breadcrumbs",{"_index":853,"title":{},"body":{"interfaces/BreadCrumbs.html":{},"components/DashboardComponent.html":{}}}],["console.log(this.deviceid",{"_index":1513,"title":{},"body":{"components/DeviceDataComponent.html":{}}}],["console.log(this.selectedcelltemplate",{"_index":182,"title":{},"body":{"components/AddCellsComponent.html":{},"components/EditCellsComponent.html":{}}}],["console.log(this.selecteduser",{"_index":232,"title":{},"body":{"components/AddCellsComponent.html":{},"components/AddTestChamberComponent.html":{},"components/EditCellsComponent.html":{},"components/EditTestChamberComponent.html":{}}}],["console.log(v",{"_index":215,"title":{},"body":{"components/AddCellsComponent.html":{},"components/AddTestChamberComponent.html":{},"components/EditCellsComponent.html":{},"components/EditTestChamberComponent.html":{}}}],["console.log(window.location.hostname",{"_index":487,"title":{},"body":{"classes/Anim.html":{},"classes/Dot.html":{},"components/HomeComponent.html":{}}}],["const",{"_index":172,"title":{},"body":{"components/AddCellsComponent.html":{},"components/AddTestChamberComponent.html":{},"modules/AppRoutingModule.html":{},"modules/BatteryPacksRoutingModule.html":{},"modules/BatteryTestRoutingModule.html":{},"components/CellsComponent.html":{},"modules/CellsRoutingModule.html":{},"interfaces/ChannelFields.html":{},"interfaces/Charts.html":{},"injectables/ComponentStoreService.html":{},"components/DeviceDataComponent.html":{},"components/EditCellsComponent.html":{},"components/EditTestChamberComponent.html":{},"interfaces/FileField.html":{},"components/HeadNavComponent.html":{},"interfaces/InputField.html":{},"interfaces/PayLoad.html":{},"interfaces/SelectField.html":{},"components/ShowAllTestsResultComponent.html":{},"injectables/TestChamberService.html":{},"components/TestChambersComponent.html":{},"modules/TestChambersRoutingModule.html":{},"interfaces/TestFormat.html":{},"interfaces/TextField.html":{},"components/ViewCellsComponent.html":{},"components/ViewTestChambersComponent.html":{}}}],["constructor",{"_index":121,"title":{},"body":{"components/AddCellsComponent.html":{},"components/AddTestChamberComponent.html":{},"classes/Anim.html":{},"components/AppComponent.html":{},"guards/AuthGuard.html":{},"components/BatteryTestComponent.html":{},"interfaces/BreadCrumbs.html":{},"interfaces/Cell.html":{},"classes/CellClass.html":{},"injectables/CellService.html":{},"components/CellsComponent.html":{},"interfaces/Charts.html":{},"injectables/ComponentStoreService.html":{},"components/DashboardComponent.html":{},"components/DeviceDataComponent.html":{},"injectables/DeviceDataService.html":{},"components/DevicesDefaultComponent.html":{},"components/DocsComponent.html":{},"classes/Dot.html":{},"components/EditCellsComponent.html":{},"components/EditTestChamberComponent.html":{},"components/FootNavComponent.html":{},"components/HeadNavComponent.html":{},"components/HomeComponent.html":{},"components/NoResultComponent.html":{},"components/ShowAllTestsResultComponent.html":{},"classes/TestChamber.html":{},"injectables/TestChamberService.html":{},"components/TestChambersComponent.html":{},"injectables/TestDataService.html":{},"injectables/TestService.html":{},"injectables/UserService.html":{},"components/ViewCellsComponent.html":{},"components/ViewTestChambersComponent.html":{},"interfaces/_TestChamber.html":{}}}],["constructor(_cellservice",{"_index":122,"title":{},"body":{"components/AddCellsComponent.html":{},"components/EditCellsComponent.html":{},"components/ViewCellsComponent.html":{}}}],["constructor(_id",{"_index":873,"title":{},"body":{"classes/CellClass.html":{},"classes/TestChamber.html":{}}}],["constructor(_testchamber",{"_index":2079,"title":{},"body":{"components/TestChambersComponent.html":{}}}],["constructor(_testchamberservice",{"_index":1924,"title":{},"body":{"components/ShowAllTestsResultComponent.html":{},"components/ViewTestChambersComponent.html":{}}}],["constructor(_userservice",{"_index":337,"title":{},"body":{"components/AddTestChamberComponent.html":{},"components/EditTestChamberComponent.html":{}}}],["constructor(auth",{"_index":654,"title":{},"body":{"guards/AuthGuard.html":{},"components/HeadNavComponent.html":{}}}],["constructor(devicedata",{"_index":1433,"title":{},"body":{"components/DashboardComponent.html":{}}}],["constructor(dot",{"_index":405,"title":{},"body":{"classes/Anim.html":{}}}],["constructor(http",{"_index":897,"title":{},"body":{"injectables/CellService.html":{},"injectables/DeviceDataService.html":{},"injectables/TestChamberService.html":{},"injectables/TestDataService.html":{},"injectables/TestService.html":{},"injectables/UserService.html":{}}}],["constructor(location",{"_index":705,"title":{},"body":{"components/BatteryTestComponent.html":{},"components/DevicesDefaultComponent.html":{},"components/HomeComponent.html":{}}}],["constructor(private",{"_index":453,"title":{},"body":{"classes/Anim.html":{},"guards/AuthGuard.html":{},"injectables/CellService.html":{},"components/DeviceDataComponent.html":{},"injectables/DeviceDataService.html":{},"components/DevicesDefaultComponent.html":{},"classes/Dot.html":{},"components/HomeComponent.html":{},"injectables/TestChamberService.html":{},"components/TestChambersComponent.html":{},"injectables/TestDataService.html":{},"injectables/TestService.html":{},"injectables/UserService.html":{},"components/ViewCellsComponent.html":{},"interfaces/_User.html":{},"interfaces/_UserLight.html":{}}}],["constructor(public",{"_index":420,"title":{},"body":{"classes/Anim.html":{},"classes/Dot.html":{},"components/HomeComponent.html":{}}}],["constructor(route",{"_index":1505,"title":{},"body":{"components/DeviceDataComponent.html":{}}}],["constructor(router",{"_index":965,"title":{},"body":{"components/CellsComponent.html":{}}}],["constructor(sprite",{"_index":1647,"title":{},"body":{"classes/Dot.html":{}}}],["constructor(store",{"_index":502,"title":{},"body":{"components/AppComponent.html":{}}}],["consumer",{"_index":2138,"title":{},"body":{"components/TestChambersComponent.html":{}}}],["contain",{"_index":1021,"title":{},"body":{"components/CellsComponent.html":{},"components/DevicesDefaultComponent.html":{},"components/HomeComponent.html":{},"components/TestChambersComponent.html":{}}}],["container",{"_index":751,"title":{},"body":{"components/BatteryTestComponent.html":{},"components/CellsComponent.html":{},"components/DashboardComponent.html":{},"components/DevicesDefaultComponent.html":{},"components/FootNavComponent.html":{},"components/HeadNavComponent.html":{},"components/TestChambersComponent.html":{}}}],["content",{"_index":317,"title":{},"body":{"components/AddCellsComponent.html":{},"components/AddTestChamberComponent.html":{},"components/CellsComponent.html":{},"interfaces/Charts.html":{},"components/DashboardComponent.html":{},"components/DevicesDefaultComponent.html":{},"components/EditCellsComponent.html":{},"components/EditTestChamberComponent.html":{},"components/HeadNavComponent.html":{},"components/HomeComponent.html":{},"injectables/TestChamberService.html":{},"components/TestChambersComponent.html":{}}}],["content_copy",{"_index":2314,"title":{},"body":{"components/ViewTestChambersComponent.html":{}}}],["contentdispositionheader",{"_index":1402,"title":{},"body":{"interfaces/Charts.html":{}}}],["contentdispositionheader.split('filename=')[1].replace(/\"/g",{"_index":1406,"title":{},"body":{"interfaces/Charts.html":{}}}],["control",{"_index":367,"title":{},"body":{"components/AddTestChamberComponent.html":{},"components/BatteryTestComponent.html":{},"components/CellsComponent.html":{},"components/EditTestChamberComponent.html":{},"components/TestChambersComponent.html":{}}}],["controlled",{"_index":1591,"title":{},"body":{"components/DevicesDefaultComponent.html":{},"components/TestChambersComponent.html":{}}}],["controller",{"_index":364,"title":{},"body":{"components/AddTestChamberComponent.html":{},"components/EditTestChamberComponent.html":{},"classes/TestChamber.html":{},"components/ViewTestChambersComponent.html":{},"interfaces/_TestChamber.html":{}}}],["controoler's",{"_index":374,"title":{},"body":{"components/AddTestChamberComponent.html":{},"components/EditTestChamberComponent.html":{}}}],["controoler\\'s",{"_index":393,"title":{},"body":{"components/AddTestChamberComponent.html":{},"components/EditTestChamberComponent.html":{}}}],["copied",{"_index":2297,"title":{},"body":{"components/ViewTestChambersComponent.html":{}}}],["copy",{"_index":1770,"title":{},"body":{"components/FootNavComponent.html":{}}}],["copy:hover",{"_index":2316,"title":{},"body":{"components/ViewTestChambersComponent.html":{}}}],["copyright",{"_index":1804,"title":{},"body":{"components/FootNavComponent.html":{}}}],["cover",{"_index":1812,"title":{},"body":{"components/FootNavComponent.html":{},"components/HeadNavComponent.html":{}}}],["coverage",{"_index":2322,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["create",{"_index":52,"title":{},"body":{"components/AddBatteryPackComponent.html":{},"components/AddCellsComponent.html":{},"components/AddTestChamberComponent.html":{},"components/AppComponent.html":{},"components/BatteryPacksComponent.html":{},"components/BatteryTestComponent.html":{},"components/CellsComponent.html":{},"components/DashboardComponent.html":{},"components/DeviceDataComponent.html":{},"components/DevicesComponent.html":{},"components/DevicesDefaultComponent.html":{},"components/DocsComponent.html":{},"components/EditBatteryPackComponent.html":{},"components/EditCellsComponent.html":{},"components/EditTestChamberComponent.html":{},"components/FootNavComponent.html":{},"components/HeadNavComponent.html":{},"components/HomeComponent.html":{},"components/NoResultComponent.html":{},"components/ShowAllTestsResultComponent.html":{},"components/TestChambersComponent.html":{},"components/ViewBatteryPacksComponent.html":{},"components/ViewCellsComponent.html":{},"components/ViewTestChambersComponent.html":{}}}],["createchart(channelquickresponse",{"_index":1245,"title":{},"body":{"interfaces/Charts.html":{}}}],["created",{"_index":218,"title":{},"body":{"components/AddCellsComponent.html":{},"components/AddTestChamberComponent.html":{},"components/ShowAllTestsResultComponent.html":{},"components/ViewTestChambersComponent.html":{}}}],["createdbyuser",{"_index":1963,"title":{},"body":{"interfaces/Test.html":{}}}],["createdon",{"_index":1111,"title":{},"body":{"interfaces/Channel.html":{},"interfaces/MeasuredParameters.html":{},"interfaces/QuickResponseMeasurement.html":{},"interfaces/RowInfo.html":{},"interfaces/SensorObj.html":{},"interfaces/Test.html":{},"classes/TestChamber.html":{},"interfaces/TestChannel.html":{},"interfaces/TestChannelDeepChannel.html":{},"interfaces/TestResultDocument.html":{},"interfaces/_TestChamber.html":{},"interfaces/_TestResultDeep.html":{},"interfaces/_TestResultLight.html":{}}}],["createdonchamber",{"_index":1106,"title":{},"body":{"interfaces/Channel.html":{},"interfaces/MeasuredParameters.html":{},"interfaces/QuickResponseMeasurement.html":{},"interfaces/RowInfo.html":{},"interfaces/SensorObj.html":{},"interfaces/Test.html":{},"interfaces/TestChannel.html":{},"interfaces/TestChannelDeepChannel.html":{},"interfaces/TestResultDocument.html":{},"interfaces/_TestResultDeep.html":{},"interfaces/_TestResultLight.html":{}}}],["createnewtestchamber",{"_index":2004,"title":{},"body":{"injectables/TestChamberService.html":{}}}],["createnewtestchamber(chamberconfig",{"_index":2016,"title":{},"body":{"injectables/TestChamberService.html":{}}}],["createnewtestchamber(this.chamber",{"_index":359,"title":{},"body":{"components/AddTestChamberComponent.html":{}}}],["createnewtestcomponent",{"_index":51,"title":{},"body":{"components/AddBatteryPackComponent.html":{},"components/AddCellsComponent.html":{},"components/AddTestChamberComponent.html":{},"components/AppComponent.html":{},"components/BatteryPacksComponent.html":{},"components/BatteryTestComponent.html":{},"modules/BatteryTestModule.html":{},"modules/BatteryTestRoutingModule.html":{},"components/CellsComponent.html":{},"components/DashboardComponent.html":{},"components/DeviceDataComponent.html":{},"components/DevicesComponent.html":{},"components/DevicesDefaultComponent.html":{},"components/DocsComponent.html":{},"components/EditBatteryPackComponent.html":{},"components/EditCellsComponent.html":{},"components/EditTestChamberComponent.html":{},"components/FootNavComponent.html":{},"components/HeadNavComponent.html":{},"components/HomeComponent.html":{},"components/NoResultComponent.html":{},"components/ShowAllTestsResultComponent.html":{},"components/TestChambersComponent.html":{},"components/ViewBatteryPacksComponent.html":{},"components/ViewCellsComponent.html":{},"components/ViewTestChambersComponent.html":{},"coverage.html":{},"overview.html":{}}}],["createtest",{"_index":2005,"title":{},"body":{"injectables/TestChamberService.html":{}}}],["createtest(chamberid",{"_index":2019,"title":{},"body":{"injectables/TestChamberService.html":{}}}],["createuser",{"_index":2183,"title":{},"body":{"injectables/UserService.html":{}}}],["createuser(user",{"_index":2186,"title":{},"body":{"injectables/UserService.html":{},"interfaces/_User.html":{},"interfaces/_UserLight.html":{}}}],["creating",{"_index":2001,"title":{},"body":{"classes/TestChamber.html":{},"interfaces/_TestChamber.html":{}}}],["creation",{"_index":229,"title":{},"body":{"components/AddCellsComponent.html":{},"components/AddTestChamberComponent.html":{}}}],["crucial",{"_index":1885,"title":{},"body":{"components/HomeComponent.html":{}}}],["current",{"_index":293,"title":{},"body":{"components/AddCellsComponent.html":{},"interfaces/Channel.html":{},"interfaces/Charts.html":{},"components/DashboardComponent.html":{},"interfaces/DriveCycle.html":{},"components/EditCellsComponent.html":{},"components/HomeComponent.html":{},"interfaces/MeasuredParameters.html":{},"interfaces/QuickResponseMeasurement.html":{},"interfaces/RowInfo.html":{},"interfaces/SensorObj.html":{},"interfaces/TestChannel.html":{},"interfaces/TestChannelDeepChannel.html":{},"interfaces/TestResultDocument.html":{},"components/ViewCellsComponent.html":{},"interfaces/_TestResultDeep.html":{},"interfaces/_TestResultLight.html":{}}}],["current(a",{"_index":292,"title":{},"body":{"components/AddCellsComponent.html":{},"components/EditCellsComponent.html":{}}}],["current?:number",{"_index":1654,"title":{},"body":{"interfaces/DriveCycle.html":{}}}],["currentmultiplierindex",{"_index":1096,"title":{},"body":{"interfaces/Channel.html":{},"interfaces/MeasuredParameters.html":{},"interfaces/QuickResponseMeasurement.html":{},"interfaces/RowInfo.html":{},"interfaces/SensorObj.html":{},"interfaces/TestChannel.html":{},"interfaces/TestChannelDeepChannel.html":{},"interfaces/TestResultDocument.html":{},"interfaces/_TestResultDeep.html":{},"interfaces/_TestResultLight.html":{}}}],["currentword",{"_index":1563,"title":{},"body":{"components/DevicesDefaultComponent.html":{}}}],["cursor",{"_index":753,"title":{},"body":{"components/BatteryTestComponent.html":{},"components/DashboardComponent.html":{},"components/DevicesDefaultComponent.html":{},"components/EditCellsComponent.html":{},"components/EditTestChamberComponent.html":{},"components/HeadNavComponent.html":{},"components/ShowAllTestsResultComponent.html":{},"components/ViewCellsComponent.html":{},"components/ViewTestChambersComponent.html":{}}}],["cursor:default",{"_index":1483,"title":{},"body":{"components/DashboardComponent.html":{}}}],["customizable",{"_index":1005,"title":{},"body":{"components/CellsComponent.html":{}}}],["customize",{"_index":2141,"title":{},"body":{"components/TestChambersComponent.html":{}}}],["cutting",{"_index":2090,"title":{},"body":{"components/TestChambersComponent.html":{}}}],["cycle",{"_index":1599,"title":{},"body":{"components/DevicesDefaultComponent.html":{},"components/HomeComponent.html":{}}}],["cyclic",{"_index":1894,"title":{},"body":{"components/HomeComponent.html":{}}}],["cylindrical",{"_index":1604,"title":{},"body":{"components/DevicesDefaultComponent.html":{}}}],["d",{"_index":178,"title":{},"body":{"components/AddCellsComponent.html":{},"interfaces/Charts.html":{},"components/EditCellsComponent.html":{},"components/ShowAllTestsResultComponent.html":{},"components/ViewTestChambersComponent.html":{}}}],["d.values",{"_index":1282,"title":{},"body":{"interfaces/Charts.html":{}}}],["dashboard",{"_index":626,"title":{},"body":{"modules/AppRoutingModule.html":{},"interfaces/BreadCrumbs.html":{},"components/DashboardComponent.html":{},"components/FootNavComponent.html":{},"components/HeadNavComponent.html":{}}}],["dashboard'},{'name",{"_index":55,"title":{},"body":{"components/AddBatteryPackComponent.html":{},"components/AddCellsComponent.html":{},"components/AddTestChamberComponent.html":{},"components/AppComponent.html":{},"components/BatteryPacksComponent.html":{},"components/BatteryTestComponent.html":{},"components/CellsComponent.html":{},"components/DashboardComponent.html":{},"components/DeviceDataComponent.html":{},"components/DevicesComponent.html":{},"components/DevicesDefaultComponent.html":{},"components/DocsComponent.html":{},"components/EditBatteryPackComponent.html":{},"components/EditCellsComponent.html":{},"components/EditTestChamberComponent.html":{},"components/FootNavComponent.html":{},"components/HeadNavComponent.html":{},"components/HomeComponent.html":{},"components/NoResultComponent.html":{},"components/ShowAllTestsResultComponent.html":{},"components/TestChambersComponent.html":{},"components/ViewBatteryPacksComponent.html":{},"components/ViewCellsComponent.html":{},"components/ViewTestChambersComponent.html":{}}}],["dashboard.component.css",{"_index":800,"title":{},"body":{"interfaces/BreadCrumbs.html":{},"components/DashboardComponent.html":{}}}],["dashboard.component.html",{"_index":799,"title":{},"body":{"interfaces/BreadCrumbs.html":{},"components/DashboardComponent.html":{}}}],["dashboardcomponent",{"_index":54,"title":{"components/DashboardComponent.html":{}},"body":{"components/AddBatteryPackComponent.html":{},"components/AddCellsComponent.html":{},"components/AddTestChamberComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/BatteryPacksComponent.html":{},"components/BatteryTestComponent.html":{},"interfaces/BreadCrumbs.html":{},"components/CellsComponent.html":{},"components/DashboardComponent.html":{},"components/DeviceDataComponent.html":{},"components/DevicesComponent.html":{},"components/DevicesDefaultComponent.html":{},"components/DocsComponent.html":{},"components/EditBatteryPackComponent.html":{},"components/EditCellsComponent.html":{},"components/EditTestChamberComponent.html":{},"components/FootNavComponent.html":{},"components/HeadNavComponent.html":{},"components/HomeComponent.html":{},"components/NoResultComponent.html":{},"components/ShowAllTestsResultComponent.html":{},"components/TestChambersComponent.html":{},"components/ViewBatteryPacksComponent.html":{},"components/ViewCellsComponent.html":{},"components/ViewTestChambersComponent.html":{},"coverage.html":{},"overview.html":{}}}],["data",{"_index":843,"title":{},"body":{"interfaces/BreadCrumbs.html":{},"components/CellsComponent.html":{},"interfaces/Charts.html":{},"components/DashboardComponent.html":{},"components/DeviceDataComponent.html":{},"components/FootNavComponent.html":{},"injectables/TestChamberService.html":{},"components/TestChambersComponent.html":{},"components/ViewCellsComponent.html":{},"components/ViewTestChambersComponent.html":{}}}],["data',url:'./',status:'disabled",{"_index":838,"title":{},"body":{"interfaces/BreadCrumbs.html":{},"components/DashboardComponent.html":{}}}],["data'},{'name",{"_index":58,"title":{},"body":{"components/AddBatteryPackComponent.html":{},"components/AddCellsComponent.html":{},"components/AddTestChamberComponent.html":{},"components/AppComponent.html":{},"components/BatteryPacksComponent.html":{},"components/BatteryTestComponent.html":{},"components/CellsComponent.html":{},"components/DashboardComponent.html":{},"components/DeviceDataComponent.html":{},"components/DevicesComponent.html":{},"components/DevicesDefaultComponent.html":{},"components/DocsComponent.html":{},"components/EditBatteryPackComponent.html":{},"components/EditCellsComponent.html":{},"components/EditTestChamberComponent.html":{},"components/FootNavComponent.html":{},"components/HeadNavComponent.html":{},"components/HomeComponent.html":{},"components/NoResultComponent.html":{},"components/ShowAllTestsResultComponent.html":{},"components/TestChambersComponent.html":{},"components/ViewBatteryPacksComponent.html":{},"components/ViewCellsComponent.html":{},"components/ViewTestChambersComponent.html":{}}}],["data.component",{"_index":595,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["data.component.css",{"_index":1502,"title":{},"body":{"components/DeviceDataComponent.html":{}}}],["data.component.html",{"_index":1503,"title":{},"body":{"components/DeviceDataComponent.html":{}}}],["data.component.ts",{"_index":1501,"title":{},"body":{"components/DeviceDataComponent.html":{},"coverage.html":{}}}],["data.component.ts:11",{"_index":1509,"title":{},"body":{"components/DeviceDataComponent.html":{}}}],["data.component.ts:12",{"_index":1506,"title":{},"body":{"components/DeviceDataComponent.html":{}}}],["data.component.ts:15",{"_index":1508,"title":{},"body":{"components/DeviceDataComponent.html":{}}}],["data.component.ts:22",{"_index":1507,"title":{},"body":{"components/DeviceDataComponent.html":{}}}],["data.length",{"_index":845,"title":{},"body":{"interfaces/BreadCrumbs.html":{},"components/CellsComponent.html":{},"components/DashboardComponent.html":{}}}],["data.length;//check",{"_index":847,"title":{},"body":{"interfaces/BreadCrumbs.html":{},"components/DashboardComponent.html":{}}}],["data.measuredparameters",{"_index":1292,"title":{},"body":{"interfaces/Charts.html":{}}}],["data.service",{"_index":791,"title":{},"body":{"interfaces/BreadCrumbs.html":{},"components/DashboardComponent.html":{}}}],["data.service.ts",{"_index":1543,"title":{},"body":{"injectables/DeviceDataService.html":{},"injectables/TestDataService.html":{},"coverage.html":{}}}],["data.service.ts:10",{"_index":1545,"title":{},"body":{"injectables/DeviceDataService.html":{},"injectables/TestDataService.html":{}}}],["data.service.ts:14",{"_index":1547,"title":{},"body":{"injectables/DeviceDataService.html":{},"injectables/TestDataService.html":{}}}],["data.service.ts:18",{"_index":1546,"title":{},"body":{"injectables/DeviceDataService.html":{},"injectables/TestDataService.html":{}}}],["data.service.ts:22",{"_index":2165,"title":{},"body":{"injectables/TestDataService.html":{}}}],["data.status",{"_index":1295,"title":{},"body":{"interfaces/Charts.html":{}}}],["data.statusch",{"_index":1242,"title":{},"body":{"interfaces/Charts.html":{}}}],["data/:deviceid",{"_index":629,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["data/device",{"_index":594,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/DeviceDataComponent.html":{},"coverage.html":{}}}],["data:any",{"_index":2086,"title":{},"body":{"components/TestChambersComponent.html":{}}}],["data:devicedatalight",{"_index":841,"title":{},"body":{"interfaces/BreadCrumbs.html":{},"components/DashboardComponent.html":{}}}],["datasets",{"_index":1252,"title":{},"body":{"interfaces/Charts.html":{}}}],["date",{"_index":513,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Channel.html":{},"components/HomeComponent.html":{},"interfaces/MeasuredParameters.html":{},"interfaces/QuickResponseMeasurement.html":{},"interfaces/RowInfo.html":{},"interfaces/SensorObj.html":{},"components/ShowAllTestsResultComponent.html":{},"interfaces/Test.html":{},"classes/TestChamber.html":{},"interfaces/TestChannel.html":{},"interfaces/TestChannelDeepChannel.html":{},"interfaces/TestResultDocument.html":{},"components/ViewTestChambersComponent.html":{},"interfaces/_TestChamber.html":{},"interfaces/_TestResultDeep.html":{},"interfaces/_TestResultLight.html":{}}}],["date.now",{"_index":437,"title":{},"body":{"classes/Anim.html":{},"classes/Dot.html":{},"components/HomeComponent.html":{}}}],["db",{"_index":1834,"title":{},"body":{"components/HeadNavComponent.html":{}}}],["dccaff61",{"_index":1640,"title":{},"body":{"components/DevicesDefaultComponent.html":{}}}],["decisions",{"_index":2127,"title":{},"body":{"components/TestChambersComponent.html":{}}}],["declarations",{"_index":563,"title":{},"body":{"modules/AppModule.html":{},"modules/BatteryPacksModule.html":{},"modules/BatteryTestModule.html":{},"modules/CellsModule.html":{},"modules/SharedModule.html":{},"modules/TestChambersModule.html":{}}}],["decoration",{"_index":1484,"title":{},"body":{"components/DashboardComponent.html":{},"components/FootNavComponent.html":{}}}],["decorators",{"_index":1668,"title":{},"body":{"components/EditCellsComponent.html":{},"components/EditTestChamberComponent.html":{}}}],["default",{"_index":139,"title":{},"body":{"components/AddCellsComponent.html":{},"components/AddTestChamberComponent.html":{},"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/BatteryTestComponent.html":{},"components/CellsComponent.html":{},"injectables/ComponentStoreService.html":{},"components/DashboardComponent.html":{},"components/DeviceDataComponent.html":{},"components/DevicesDefaultComponent.html":{},"components/EditCellsComponent.html":{},"components/EditTestChamberComponent.html":{},"components/FootNavComponent.html":{},"components/ShowAllTestsResultComponent.html":{},"injectables/TestChamberService.html":{},"components/TestChambersComponent.html":{},"components/ViewCellsComponent.html":{},"components/ViewTestChambersComponent.html":{},"miscellaneous/variables.html":{}}}],["default'},{'name",{"_index":63,"title":{},"body":{"components/AddBatteryPackComponent.html":{},"components/AddCellsComponent.html":{},"components/AddTestChamberComponent.html":{},"components/AppComponent.html":{},"components/BatteryPacksComponent.html":{},"components/BatteryTestComponent.html":{},"components/CellsComponent.html":{},"components/DashboardComponent.html":{},"components/DeviceDataComponent.html":{},"components/DevicesComponent.html":{},"components/DevicesDefaultComponent.html":{},"components/DocsComponent.html":{},"components/EditBatteryPackComponent.html":{},"components/EditCellsComponent.html":{},"components/EditTestChamberComponent.html":{},"components/FootNavComponent.html":{},"components/HeadNavComponent.html":{},"components/HomeComponent.html":{},"components/NoResultComponent.html":{},"components/ShowAllTestsResultComponent.html":{},"components/TestChambersComponent.html":{},"components/ViewBatteryPacksComponent.html":{},"components/ViewCellsComponent.html":{},"components/ViewTestChambersComponent.html":{}}}],["default.component",{"_index":602,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["default.component.css",{"_index":1561,"title":{},"body":{"components/DevicesDefaultComponent.html":{}}}],["default.component.html",{"_index":1562,"title":{},"body":{"components/DevicesDefaultComponent.html":{}}}],["default.component.ts",{"_index":1560,"title":{},"body":{"components/DevicesDefaultComponent.html":{},"coverage.html":{}}}],["default.component.ts:28",{"_index":1566,"title":{},"body":{"components/DevicesDefaultComponent.html":{}}}],["default.component.ts:29",{"_index":1564,"title":{},"body":{"components/DevicesDefaultComponent.html":{}}}],["default.component.ts:32",{"_index":1565,"title":{},"body":{"components/DevicesDefaultComponent.html":{}}}],["default/devices",{"_index":601,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/DevicesDefaultComponent.html":{},"coverage.html":{}}}],["default_msg",{"_index":2228,"title":{},"body":{"components/ViewCellsComponent.html":{},"components/ViewTestChambersComponent.html":{}}}],["defaultmsg",{"_index":1424,"title":{},"body":{"injectables/ComponentStoreService.html":{}}}],["defined",{"_index":131,"title":{},"body":{"components/AddCellsComponent.html":{},"components/AddTestChamberComponent.html":{},"classes/Anim.html":{},"components/AppComponent.html":{},"guards/AuthGuard.html":{},"components/BatteryTestComponent.html":{},"classes/CellClass.html":{},"injectables/CellService.html":{},"components/CellsComponent.html":{},"injectables/ComponentStoreService.html":{},"components/DashboardComponent.html":{},"components/DeviceDataComponent.html":{},"injectables/DeviceDataService.html":{},"components/DevicesDefaultComponent.html":{},"components/DocsComponent.html":{},"classes/Dot.html":{},"components/EditCellsComponent.html":{},"components/EditTestChamberComponent.html":{},"components/FootNavComponent.html":{},"components/HeadNavComponent.html":{},"components/HomeComponent.html":{},"components/NoResultComponent.html":{},"components/ShowAllTestsResultComponent.html":{},"classes/TestChamber.html":{},"injectables/TestChamberService.html":{},"components/TestChambersComponent.html":{},"injectables/TestDataService.html":{},"injectables/TestService.html":{},"injectables/UserService.html":{},"components/ViewCellsComponent.html":{},"components/ViewTestChambersComponent.html":{}}}],["delay",{"_index":699,"title":{},"body":{"components/BatteryTestComponent.html":{},"injectables/TestChamberService.html":{}}}],["delete",{"_index":1356,"title":{},"body":{"interfaces/Charts.html":{},"components/EditCellsComponent.html":{},"components/EditTestChamberComponent.html":{}}}],["delete(`${environment.apiuri}/api/protected/cell/cell",{"_index":943,"title":{},"body":{"injectables/CellService.html":{}}}],["delete(`${environment.apiuri}/api/protected/test",{"_index":2052,"title":{},"body":{"injectables/TestChamberService.html":{}}}],["delete:hover",{"_index":1711,"title":{},"body":{"components/EditCellsComponent.html":{},"components/EditTestChamberComponent.html":{}}}],["delete_forever",{"_index":1707,"title":{},"body":{"components/EditCellsComponent.html":{},"components/EditTestChamberComponent.html":{}}}],["deletechannel",{"_index":1659,"title":{},"body":{"components/EditCellsComponent.html":{},"components/EditTestChamberComponent.html":{}}}],["deleted",{"_index":1705,"title":{},"body":{"components/EditCellsComponent.html":{},"components/EditTestChamberComponent.html":{}}}],["deletetest",{"_index":1351,"title":{},"body":{"interfaces/Charts.html":{},"injectables/TestChamberService.html":{}}}],["deletetest(chamberid",{"_index":2021,"title":{},"body":{"injectables/TestChamberService.html":{}}}],["deletetest(this.chamberid",{"_index":1365,"title":{},"body":{"interfaces/Charts.html":{}}}],["deletetestchamber",{"_index":2006,"title":{},"body":{"injectables/TestChamberService.html":{}}}],["deletetestchamber(chamberid",{"_index":2023,"title":{},"body":{"injectables/TestChamberService.html":{}}}],["deletetestchamber(this.chamberid",{"_index":1734,"title":{},"body":{"components/EditTestChamberComponent.html":{}}}],["deletion",{"_index":1700,"title":{},"body":{"components/EditCellsComponent.html":{},"components/EditTestChamberComponent.html":{}}}],["dependencies",{"_index":553,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"modules/BatteryPacksModule.html":{},"modules/BatteryTestModule.html":{},"modules/CellsModule.html":{},"modules/TestChambersModule.html":{},"dependencies.html":{},"overview.html":{}}}],["derivedparameters",{"_index":1139,"title":{},"body":{"interfaces/Channel.html":{},"interfaces/MeasuredParameters.html":{},"interfaces/QuickResponseMeasurement.html":{},"interfaces/RowInfo.html":{},"interfaces/SensorObj.html":{},"interfaces/TestChannel.html":{},"interfaces/TestChannelDeepChannel.html":{},"interfaces/TestResultDocument.html":{},"interfaces/_TestResultDeep.html":{},"interfaces/_TestResultLight.html":{}}}],["description",{"_index":1447,"title":{},"body":{"components/DashboardComponent.html":{},"components/FootNavComponent.html":{}}}],["designed",{"_index":1609,"title":{},"body":{"components/DevicesDefaultComponent.html":{},"components/TestChambersComponent.html":{}}}],["detailed",{"_index":979,"title":{},"body":{"components/CellsComponent.html":{}}}],["details",{"_index":809,"title":{},"body":{"interfaces/BreadCrumbs.html":{},"components/DashboardComponent.html":{},"components/DevicesDefaultComponent.html":{},"components/ViewCellsComponent.html":{},"components/ViewTestChambersComponent.html":{}}}],["detects",{"_index":821,"title":{},"body":{"interfaces/BreadCrumbs.html":{},"components/DashboardComponent.html":{}}}],["detecturlchanges",{"_index":819,"title":{},"body":{"interfaces/BreadCrumbs.html":{},"components/DashboardComponent.html":{}}}],["dev",{"_index":2382,"title":{},"body":{"index.html":{}}}],["developer",{"_index":1741,"title":{},"body":{"components/FootNavComponent.html":{}}}],["developer.name",{"_index":1768,"title":{},"body":{"components/FootNavComponent.html":{}}}],["developer.role",{"_index":1769,"title":{},"body":{"components/FootNavComponent.html":{}}}],["development",{"_index":2129,"title":{},"body":{"components/TestChambersComponent.html":{},"index.html":{}}}],["device",{"_index":57,"title":{},"body":{"components/AddBatteryPackComponent.html":{},"components/AddCellsComponent.html":{},"components/AddTestChamberComponent.html":{},"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/BatteryPacksComponent.html":{},"components/BatteryTestComponent.html":{},"components/CellsComponent.html":{},"components/DashboardComponent.html":{},"components/DeviceDataComponent.html":{},"components/DevicesComponent.html":{},"components/DevicesDefaultComponent.html":{},"components/DocsComponent.html":{},"components/EditBatteryPackComponent.html":{},"components/EditCellsComponent.html":{},"components/EditTestChamberComponent.html":{},"components/FootNavComponent.html":{},"components/HeadNavComponent.html":{},"components/HomeComponent.html":{},"components/NoResultComponent.html":{},"components/ShowAllTestsResultComponent.html":{},"components/TestChambersComponent.html":{},"components/ViewBatteryPacksComponent.html":{},"components/ViewCellsComponent.html":{},"components/ViewTestChambersComponent.html":{}}}],["device's",{"_index":1879,"title":{},"body":{"components/HomeComponent.html":{}}}],["device.averagetemperature}}&deg;c",{"_index":1451,"title":{},"body":{"components/DashboardComponent.html":{}}}],["device.averagetemperature}}°c",{"_index":1499,"title":{},"body":{"components/DashboardComponent.html":{}}}],["device.chargedischargestatus",{"_index":1453,"title":{},"body":{"components/DashboardComponent.html":{}}}],["device.name",{"_index":1446,"title":{},"body":{"components/DashboardComponent.html":{}}}],["device.packcurrent}}a",{"_index":1449,"title":{},"body":{"components/DashboardComponent.html":{}}}],["device.packvoltage}}v",{"_index":1448,"title":{},"body":{"components/DashboardComponent.html":{}}}],["device\\'s",{"_index":1910,"title":{},"body":{"components/HomeComponent.html":{}}}],["devicedata",{"_index":1435,"title":{},"body":{"components/DashboardComponent.html":{}}}],["devicedata:devicedataservice",{"_index":813,"title":{},"body":{"interfaces/BreadCrumbs.html":{},"components/DashboardComponent.html":{}}}],["devicedatacomponent",{"_index":56,"title":{"components/DeviceDataComponent.html":{}},"body":{"components/AddBatteryPackComponent.html":{},"components/AddCellsComponent.html":{},"components/AddTestChamberComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/BatteryPacksComponent.html":{},"components/BatteryTestComponent.html":{},"components/CellsComponent.html":{},"components/DashboardComponent.html":{},"components/DeviceDataComponent.html":{},"components/DevicesComponent.html":{},"components/DevicesDefaultComponent.html":{},"components/DocsComponent.html":{},"components/EditBatteryPackComponent.html":{},"components/EditCellsComponent.html":{},"components/EditTestChamberComponent.html":{},"components/FootNavComponent.html":{},"components/HeadNavComponent.html":{},"components/HomeComponent.html":{},"components/NoResultComponent.html":{},"components/ShowAllTestsResultComponent.html":{},"components/TestChambersComponent.html":{},"components/ViewBatteryPacksComponent.html":{},"components/ViewCellsComponent.html":{},"components/ViewTestChambersComponent.html":{},"coverage.html":{},"overview.html":{}}}],["devicedatalight",{"_index":792,"title":{"interfaces/DeviceDataLight.html":{}},"body":{"interfaces/BreadCrumbs.html":{},"components/DashboardComponent.html":{},"interfaces/DeviceDataLight.html":{},"injectables/DeviceDataService.html":{},"coverage.html":{}}}],["devicedataservice",{"_index":789,"title":{"injectables/DeviceDataService.html":{}},"body":{"interfaces/BreadCrumbs.html":{},"components/DashboardComponent.html":{},"injectables/DeviceDataService.html":{},"coverage.html":{}}}],["deviceid",{"_index":1504,"title":{},"body":{"components/DeviceDataComponent.html":{}}}],["devices",{"_index":62,"title":{},"body":{"components/AddBatteryPackComponent.html":{},"components/AddCellsComponent.html":{},"components/AddTestChamberComponent.html":{},"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/BatteryPacksComponent.html":{},"components/BatteryTestComponent.html":{},"interfaces/BreadCrumbs.html":{},"components/CellsComponent.html":{},"components/DashboardComponent.html":{},"components/DeviceDataComponent.html":{},"components/DevicesComponent.html":{},"components/DevicesDefaultComponent.html":{},"components/DocsComponent.html":{},"components/EditBatteryPackComponent.html":{},"components/EditCellsComponent.html":{},"components/EditTestChamberComponent.html":{},"components/FootNavComponent.html":{},"components/HeadNavComponent.html":{},"components/HomeComponent.html":{},"components/NoResultComponent.html":{},"components/ShowAllTestsResultComponent.html":{},"components/TestChambersComponent.html":{},"components/ViewBatteryPacksComponent.html":{},"components/ViewCellsComponent.html":{},"components/ViewTestChambersComponent.html":{}}}],["devices'},{'name",{"_index":60,"title":{},"body":{"components/AddBatteryPackComponent.html":{},"components/AddCellsComponent.html":{},"components/AddTestChamberComponent.html":{},"components/AppComponent.html":{},"components/BatteryPacksComponent.html":{},"components/BatteryTestComponent.html":{},"components/CellsComponent.html":{},"components/DashboardComponent.html":{},"components/DeviceDataComponent.html":{},"components/DevicesComponent.html":{},"components/DevicesDefaultComponent.html":{},"components/DocsComponent.html":{},"components/EditBatteryPackComponent.html":{},"components/EditCellsComponent.html":{},"components/EditTestChamberComponent.html":{},"components/FootNavComponent.html":{},"components/HeadNavComponent.html":{},"components/HomeComponent.html":{},"components/NoResultComponent.html":{},"components/ShowAllTestsResultComponent.html":{},"components/TestChambersComponent.html":{},"components/ViewBatteryPacksComponent.html":{},"components/ViewCellsComponent.html":{},"components/ViewTestChambersComponent.html":{}}}],["devices.component.css",{"_index":1557,"title":{},"body":{"components/DevicesComponent.html":{}}}],["devices.component.html",{"_index":1558,"title":{},"body":{"components/DevicesComponent.html":{}}}],["devices:devicedatalight[]|undefined",{"_index":801,"title":{},"body":{"interfaces/BreadCrumbs.html":{},"components/DashboardComponent.html":{}}}],["devicescomponent",{"_index":59,"title":{"components/DevicesComponent.html":{}},"body":{"components/AddBatteryPackComponent.html":{},"components/AddCellsComponent.html":{},"components/AddTestChamberComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/BatteryPacksComponent.html":{},"components/BatteryTestComponent.html":{},"components/CellsComponent.html":{},"components/DashboardComponent.html":{},"components/DeviceDataComponent.html":{},"components/DevicesComponent.html":{},"components/DevicesDefaultComponent.html":{},"components/DocsComponent.html":{},"components/EditBatteryPackComponent.html":{},"components/EditCellsComponent.html":{},"components/EditTestChamberComponent.html":{},"components/FootNavComponent.html":{},"components/HeadNavComponent.html":{},"components/HomeComponent.html":{},"components/NoResultComponent.html":{},"components/ShowAllTestsResultComponent.html":{},"components/TestChambersComponent.html":{},"components/ViewBatteryPacksComponent.html":{},"components/ViewCellsComponent.html":{},"components/ViewTestChambersComponent.html":{},"coverage.html":{},"overview.html":{}}}],["devicesdefaultcomponent",{"_index":61,"title":{"components/DevicesDefaultComponent.html":{}},"body":{"components/AddBatteryPackComponent.html":{},"components/AddCellsComponent.html":{},"components/AddTestChamberComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/BatteryPacksComponent.html":{},"components/BatteryTestComponent.html":{},"components/CellsComponent.html":{},"components/DashboardComponent.html":{},"components/DeviceDataComponent.html":{},"components/DevicesComponent.html":{},"components/DevicesDefaultComponent.html":{},"components/DocsComponent.html":{},"components/EditBatteryPackComponent.html":{},"components/EditCellsComponent.html":{},"components/EditTestChamberComponent.html":{},"components/FootNavComponent.html":{},"components/HeadNavComponent.html":{},"components/HomeComponent.html":{},"components/NoResultComponent.html":{},"components/ShowAllTestsResultComponent.html":{},"components/TestChambersComponent.html":{},"components/ViewBatteryPacksComponent.html":{},"components/ViewCellsComponent.html":{},"components/ViewTestChambersComponent.html":{},"coverage.html":{},"overview.html":{}}}],["different",{"_index":390,"title":{},"body":{"components/AddTestChamberComponent.html":{},"components/DevicesDefaultComponent.html":{},"components/EditTestChamberComponent.html":{},"components/HomeComponent.html":{}}}],["directive",{"_index":34,"title":{},"body":{"components/AddBatteryPackComponent.html":{},"components/AddCellsComponent.html":{},"components/AddTestChamberComponent.html":{},"components/AppComponent.html":{},"components/BatteryPacksComponent.html":{},"components/BatteryTestComponent.html":{},"components/CellsComponent.html":{},"components/DashboardComponent.html":{},"components/DeviceDataComponent.html":{},"components/DevicesComponent.html":{},"components/DevicesDefaultComponent.html":{},"components/DocsComponent.html":{},"components/EditBatteryPackComponent.html":{},"components/EditCellsComponent.html":{},"components/EditTestChamberComponent.html":{},"components/FootNavComponent.html":{},"components/HeadNavComponent.html":{},"components/HomeComponent.html":{},"components/NoResultComponent.html":{},"components/ShowAllTestsResultComponent.html":{},"components/TestChambersComponent.html":{},"components/ViewBatteryPacksComponent.html":{},"components/ViewCellsComponent.html":{},"components/ViewTestChambersComponent.html":{}}}],["directives",{"_index":90,"title":{},"body":{"components/AddBatteryPackComponent.html":{},"components/AddCellsComponent.html":{},"components/AddTestChamberComponent.html":{},"components/AppComponent.html":{},"components/BatteryPacksComponent.html":{},"components/BatteryTestComponent.html":{},"components/CellsComponent.html":{},"components/DashboardComponent.html":{},"components/DeviceDataComponent.html":{},"components/DevicesComponent.html":{},"components/DevicesDefaultComponent.html":{},"components/DocsComponent.html":{},"components/EditBatteryPackComponent.html":{},"components/EditCellsComponent.html":{},"components/EditTestChamberComponent.html":{},"components/FootNavComponent.html":{},"components/HeadNavComponent.html":{},"components/HomeComponent.html":{},"components/NoResultComponent.html":{},"components/ShowAllTestsResultComponent.html":{},"components/TestChambersComponent.html":{},"components/ViewBatteryPacksComponent.html":{},"components/ViewCellsComponent.html":{},"components/ViewTestChambersComponent.html":{}}}],["directive|pipe|service|class|guard|interface|enum|module",{"_index":2390,"title":{},"body":{"index.html":{}}}],["directory",{"_index":2394,"title":{},"body":{"index.html":{}}}],["disabled",{"_index":788,"title":{},"body":{"interfaces/BreadCrumbs.html":{}}}],["discharge",{"_index":1165,"title":{},"body":{"interfaces/ChannelFields.html":{},"interfaces/FileField.html":{},"interfaces/InputField.html":{},"interfaces/PayLoad.html":{},"interfaces/SelectField.html":{},"interfaces/TestFormat.html":{},"interfaces/TextField.html":{},"miscellaneous/variables.html":{}}}],["discharging",{"_index":1527,"title":{},"body":{"interfaces/DeviceDataLight.html":{}}}],["display",{"_index":1258,"title":{},"body":{"interfaces/Charts.html":{},"components/DevicesDefaultComponent.html":{},"components/FootNavComponent.html":{},"components/HeadNavComponent.html":{},"components/HomeComponent.html":{}}}],["disposition",{"_index":1404,"title":{},"body":{"interfaces/Charts.html":{}}}],["dist",{"_index":2393,"title":{},"body":{"index.html":{}}}],["div",{"_index":1051,"title":{},"body":{"components/CellsComponent.html":{},"components/TestChambersComponent.html":{}}}],["divider",{"_index":1457,"title":{},"body":{"components/DashboardComponent.html":{}}}],["docs",{"_index":646,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/DocsComponent.html":{}}}],["docs'},{'name",{"_index":65,"title":{},"body":{"components/AddBatteryPackComponent.html":{},"components/AddCellsComponent.html":{},"components/AddTestChamberComponent.html":{},"components/AppComponent.html":{},"components/BatteryPacksComponent.html":{},"components/BatteryTestComponent.html":{},"components/CellsComponent.html":{},"components/DashboardComponent.html":{},"components/DeviceDataComponent.html":{},"components/DevicesComponent.html":{},"components/DevicesDefaultComponent.html":{},"components/DocsComponent.html":{},"components/EditBatteryPackComponent.html":{},"components/EditCellsComponent.html":{},"components/EditTestChamberComponent.html":{},"components/FootNavComponent.html":{},"components/HeadNavComponent.html":{},"components/HomeComponent.html":{},"components/NoResultComponent.html":{},"components/ShowAllTestsResultComponent.html":{},"components/TestChambersComponent.html":{},"components/ViewBatteryPacksComponent.html":{},"components/ViewCellsComponent.html":{},"components/ViewTestChambersComponent.html":{}}}],["docs.component.css",{"_index":1642,"title":{},"body":{"components/DocsComponent.html":{}}}],["docs.component.html",{"_index":1643,"title":{},"body":{"components/DocsComponent.html":{}}}],["docscomponent",{"_index":64,"title":{"components/DocsComponent.html":{}},"body":{"components/AddBatteryPackComponent.html":{},"components/AddCellsComponent.html":{},"components/AddTestChamberComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/BatteryPacksComponent.html":{},"components/BatteryTestComponent.html":{},"components/CellsComponent.html":{},"components/DashboardComponent.html":{},"components/DeviceDataComponent.html":{},"components/DevicesComponent.html":{},"components/DevicesDefaultComponent.html":{},"components/DocsComponent.html":{},"components/EditBatteryPackComponent.html":{},"components/EditCellsComponent.html":{},"components/EditTestChamberComponent.html":{},"components/FootNavComponent.html":{},"components/HeadNavComponent.html":{},"components/HomeComponent.html":{},"components/NoResultComponent.html":{},"components/ShowAllTestsResultComponent.html":{},"components/TestChambersComponent.html":{},"components/ViewBatteryPacksComponent.html":{},"components/ViewCellsComponent.html":{},"components/ViewTestChambersComponent.html":{},"coverage.html":{},"overview.html":{}}}],["document.getelementbyid(sprite",{"_index":422,"title":{},"body":{"classes/Anim.html":{},"classes/Dot.html":{},"components/HomeComponent.html":{}}}],["document.getelementbyid(track",{"_index":424,"title":{},"body":{"classes/Anim.html":{},"classes/Dot.html":{},"components/HomeComponent.html":{}}}],["documentation",{"_index":1764,"title":{},"body":{"components/FootNavComponent.html":{},"components/HeadNavComponent.html":{},"coverage.html":{}}}],["dom",{"_index":7,"title":{},"body":{"components/AddBatteryPackComponent.html":{},"components/AddCellsComponent.html":{},"components/AddTestChamberComponent.html":{},"components/AppComponent.html":{},"components/BatteryPacksComponent.html":{},"components/BatteryTestComponent.html":{},"components/CellsComponent.html":{},"components/DashboardComponent.html":{},"components/DeviceDataComponent.html":{},"components/DevicesComponent.html":{},"components/DevicesDefaultComponent.html":{},"components/DocsComponent.html":{},"components/EditBatteryPackComponent.html":{},"components/EditCellsComponent.html":{},"components/EditTestChamberComponent.html":{},"components/FootNavComponent.html":{},"components/HeadNavComponent.html":{},"components/HomeComponent.html":{},"components/NoResultComponent.html":{},"components/ShowAllTestsResultComponent.html":{},"components/TestChambersComponent.html":{},"components/ViewBatteryPacksComponent.html":{},"components/ViewCellsComponent.html":{},"components/ViewTestChambersComponent.html":{}}}],["domain",{"_index":2422,"title":{},"body":{"miscellaneous/variables.html":{}}}],["don't",{"_index":2144,"title":{},"body":{"components/TestChambersComponent.html":{},"components/ViewCellsComponent.html":{},"components/ViewTestChambersComponent.html":{}}}],["don\\'t",{"_index":2149,"title":{},"body":{"components/TestChambersComponent.html":{}}}],["done",{"_index":1701,"title":{},"body":{"components/EditCellsComponent.html":{},"components/EditTestChamberComponent.html":{}}}],["dot",{"_index":399,"title":{"classes/Dot.html":{}},"body":{"classes/Anim.html":{},"classes/Dot.html":{},"components/HomeComponent.html":{},"coverage.html":{}}}],["dot('dot_1",{"_index":457,"title":{},"body":{"classes/Anim.html":{},"classes/Dot.html":{},"components/HomeComponent.html":{}}}],["dot('dot_2",{"_index":463,"title":{},"body":{"classes/Anim.html":{},"classes/Dot.html":{},"components/HomeComponent.html":{}}}],["dot('dot_3",{"_index":469,"title":{},"body":{"classes/Anim.html":{},"classes/Dot.html":{},"components/HomeComponent.html":{}}}],["dot('dot_4",{"_index":475,"title":{},"body":{"classes/Anim.html":{},"classes/Dot.html":{},"components/HomeComponent.html":{}}}],["dot1",{"_index":456,"title":{},"body":{"classes/Anim.html":{},"classes/Dot.html":{},"components/HomeComponent.html":{}}}],["dot2",{"_index":462,"title":{},"body":{"classes/Anim.html":{},"classes/Dot.html":{},"components/HomeComponent.html":{}}}],["dot3",{"_index":468,"title":{},"body":{"classes/Anim.html":{},"classes/Dot.html":{},"components/HomeComponent.html":{}}}],["dot4",{"_index":474,"title":{},"body":{"classes/Anim.html":{},"classes/Dot.html":{},"components/HomeComponent.html":{}}}],["download(channelno",{"_index":1394,"title":{},"body":{"interfaces/Charts.html":{}}}],["downloadtestresult",{"_index":2007,"title":{},"body":{"injectables/TestChamberService.html":{}}}],["downloadtestresult(chamberid",{"_index":2025,"title":{},"body":{"injectables/TestChamberService.html":{}}}],["downloadtestresult(this.chamberid",{"_index":1395,"title":{},"body":{"interfaces/Charts.html":{}}}],["drive",{"_index":1895,"title":{},"body":{"components/HomeComponent.html":{}}}],["drivecycle",{"_index":1151,"title":{"interfaces/DriveCycle.html":{}},"body":{"interfaces/ChannelFields.html":{},"interfaces/DriveCycle.html":{},"interfaces/FileField.html":{},"interfaces/InputField.html":{},"interfaces/PayLoad.html":{},"interfaces/SelectField.html":{},"interfaces/TestFormat.html":{},"interfaces/TextField.html":{},"coverage.html":{}}}],["driven",{"_index":1756,"title":{},"body":{"components/FootNavComponent.html":{}}}],["dropdown",{"_index":1864,"title":{},"body":{"components/HeadNavComponent.html":{}}}],["duration",{"_index":400,"title":{},"body":{"classes/Anim.html":{},"classes/Dot.html":{},"components/HomeComponent.html":{}}}],["during",{"_index":2121,"title":{},"body":{"components/TestChambersComponent.html":{}}}],["dynamic",{"_index":1623,"title":{},"body":{"components/DevicesDefaultComponent.html":{},"dependencies.html":{}}}],["e",{"_index":227,"title":{},"body":{"components/AddCellsComponent.html":{},"components/AddTestChamberComponent.html":{},"components/EditCellsComponent.html":{},"components/EditTestChamberComponent.html":{},"components/FootNavComponent.html":{}}}],["e2e",{"_index":2398,"title":{},"body":{"index.html":{}}}],["e_mobilty@iitg.ac.in",{"_index":1767,"title":{},"body":{"components/FootNavComponent.html":{}}}],["each",{"_index":387,"title":{},"body":{"components/AddTestChamberComponent.html":{},"components/EditTestChamberComponent.html":{},"components/TestChambersComponent.html":{}}}],["ease",{"_index":991,"title":{},"body":{"components/CellsComponent.html":{},"components/HeadNavComponent.html":{}}}],["easy",{"_index":997,"title":{},"body":{"components/CellsComponent.html":{},"components/TestChambersComponent.html":{}}}],["edge",{"_index":320,"title":{},"body":{"components/AddCellsComponent.html":{},"components/AddTestChamberComponent.html":{},"components/EditCellsComponent.html":{},"components/EditTestChamberComponent.html":{},"components/TestChambersComponent.html":{}}}],["edit",{"_index":67,"title":{},"body":{"components/AddBatteryPackComponent.html":{},"components/AddCellsComponent.html":{},"components/AddTestChamberComponent.html":{},"components/AppComponent.html":{},"components/BatteryPacksComponent.html":{},"modules/BatteryPacksRoutingModule.html":{},"components/BatteryTestComponent.html":{},"components/CellsComponent.html":{},"interfaces/Charts.html":{},"components/DashboardComponent.html":{},"components/DeviceDataComponent.html":{},"components/DevicesComponent.html":{},"components/DevicesDefaultComponent.html":{},"components/DocsComponent.html":{},"components/EditBatteryPackComponent.html":{},"components/EditCellsComponent.html":{},"components/EditTestChamberComponent.html":{},"components/FootNavComponent.html":{},"components/HeadNavComponent.html":{},"components/HomeComponent.html":{},"components/NoResultComponent.html":{},"components/ShowAllTestsResultComponent.html":{},"components/TestChambersComponent.html":{},"components/ViewBatteryPacksComponent.html":{},"components/ViewCellsComponent.html":{},"components/ViewTestChambersComponent.html":{}}}],["edit/:cellid",{"_index":1093,"title":{},"body":{"modules/CellsRoutingModule.html":{}}}],["edit/:chamberid",{"_index":2161,"title":{},"body":{"modules/TestChambersRoutingModule.html":{}}}],["edit:hover",{"_index":2253,"title":{},"body":{"components/ViewCellsComponent.html":{},"components/ViewTestChambersComponent.html":{}}}],["editbatterypackcomponent",{"_index":66,"title":{"components/EditBatteryPackComponent.html":{}},"body":{"components/AddBatteryPackComponent.html":{},"components/AddCellsComponent.html":{},"components/AddTestChamberComponent.html":{},"components/AppComponent.html":{},"components/BatteryPacksComponent.html":{},"modules/BatteryPacksModule.html":{},"modules/BatteryPacksRoutingModule.html":{},"components/BatteryTestComponent.html":{},"components/CellsComponent.html":{},"components/DashboardComponent.html":{},"components/DeviceDataComponent.html":{},"components/DevicesComponent.html":{},"components/DevicesDefaultComponent.html":{},"components/DocsComponent.html":{},"components/EditBatteryPackComponent.html":{},"components/EditCellsComponent.html":{},"components/EditTestChamberComponent.html":{},"components/FootNavComponent.html":{},"components/HeadNavComponent.html":{},"components/HomeComponent.html":{},"components/NoResultComponent.html":{},"components/ShowAllTestsResultComponent.html":{},"components/TestChambersComponent.html":{},"components/ViewBatteryPacksComponent.html":{},"components/ViewCellsComponent.html":{},"components/ViewTestChambersComponent.html":{},"coverage.html":{},"overview.html":{}}}],["editcellscomponent",{"_index":68,"title":{"components/EditCellsComponent.html":{}},"body":{"components/AddBatteryPackComponent.html":{},"components/AddCellsComponent.html":{},"components/AddTestChamberComponent.html":{},"components/AppComponent.html":{},"components/BatteryPacksComponent.html":{},"components/BatteryTestComponent.html":{},"components/CellsComponent.html":{},"modules/CellsModule.html":{},"modules/CellsRoutingModule.html":{},"components/DashboardComponent.html":{},"components/DeviceDataComponent.html":{},"components/DevicesComponent.html":{},"components/DevicesDefaultComponent.html":{},"components/DocsComponent.html":{},"components/EditBatteryPackComponent.html":{},"components/EditCellsComponent.html":{},"components/EditTestChamberComponent.html":{},"components/FootNavComponent.html":{},"components/HeadNavComponent.html":{},"components/HomeComponent.html":{},"components/NoResultComponent.html":{},"components/ShowAllTestsResultComponent.html":{},"components/TestChambersComponent.html":{},"components/ViewBatteryPacksComponent.html":{},"components/ViewCellsComponent.html":{},"components/ViewTestChambersComponent.html":{},"coverage.html":{},"overview.html":{}}}],["edittestchambercomponent",{"_index":69,"title":{"components/EditTestChamberComponent.html":{}},"body":{"components/AddBatteryPackComponent.html":{},"components/AddCellsComponent.html":{},"components/AddTestChamberComponent.html":{},"components/AppComponent.html":{},"components/BatteryPacksComponent.html":{},"components/BatteryTestComponent.html":{},"components/CellsComponent.html":{},"components/DashboardComponent.html":{},"components/DeviceDataComponent.html":{},"components/DevicesComponent.html":{},"components/DevicesDefaultComponent.html":{},"components/DocsComponent.html":{},"components/EditBatteryPackComponent.html":{},"components/EditCellsComponent.html":{},"components/EditTestChamberComponent.html":{},"components/FootNavComponent.html":{},"components/HeadNavComponent.html":{},"components/HomeComponent.html":{},"components/NoResultComponent.html":{},"components/ShowAllTestsResultComponent.html":{},"components/TestChambersComponent.html":{},"modules/TestChambersModule.html":{},"modules/TestChambersRoutingModule.html":{},"components/ViewBatteryPacksComponent.html":{},"components/ViewCellsComponent.html":{},"components/ViewTestChambersComponent.html":{},"coverage.html":{},"overview.html":{}}}],["effective",{"_index":977,"title":{},"body":{"components/CellsComponent.html":{}}}],["effectively",{"_index":2147,"title":{},"body":{"components/TestChambersComponent.html":{}}}],["efficiency",{"_index":2096,"title":{},"body":{"components/TestChambersComponent.html":{}}}],["electric",{"_index":2135,"title":{},"body":{"components/TestChambersComponent.html":{}}}],["electrical",{"_index":285,"title":{},"body":{"components/AddCellsComponent.html":{},"components/EditCellsComponent.html":{}}}],["electronic",{"_index":365,"title":{},"body":{"components/AddTestChamberComponent.html":{},"components/EditTestChamberComponent.html":{}}}],["electronics",{"_index":2139,"title":{},"body":{"components/TestChambersComponent.html":{}}}],["element",{"_index":33,"title":{},"body":{"components/AddBatteryPackComponent.html":{},"components/AddCellsComponent.html":{},"components/AddTestChamberComponent.html":{},"components/AppComponent.html":{},"components/BatteryPacksComponent.html":{},"components/BatteryTestComponent.html":{},"interfaces/BreadCrumbs.html":{},"components/CellsComponent.html":{},"components/DashboardComponent.html":{},"components/DeviceDataComponent.html":{},"components/DevicesComponent.html":{},"components/DevicesDefaultComponent.html":{},"components/DocsComponent.html":{},"components/EditBatteryPackComponent.html":{},"components/EditCellsComponent.html":{},"components/EditTestChamberComponent.html":{},"components/FootNavComponent.html":{},"components/HeadNavComponent.html":{},"components/HomeComponent.html":{},"components/NoResultComponent.html":{},"components/ShowAllTestsResultComponent.html":{},"components/TestChambersComponent.html":{},"components/ViewBatteryPacksComponent.html":{},"components/ViewCellsComponent.html":{},"components/ViewTestChambersComponent.html":{}}}],["elements",{"_index":419,"title":{},"body":{"classes/Anim.html":{},"classes/Dot.html":{},"components/HomeComponent.html":{}}}],["email",{"_index":2192,"title":{},"body":{"injectables/UserService.html":{},"interfaces/_User.html":{},"interfaces/_UserLight.html":{}}}],["end",{"_index":1988,"title":{},"body":{"classes/TestChamber.html":{},"interfaces/_TestChamber.html":{},"index.html":{}}}],["engine",{"_index":1747,"title":{},"body":{"components/FootNavComponent.html":{}}}],["engine.png",{"_index":1746,"title":{},"body":{"components/FootNavComponent.html":{}}}],["ensuring",{"_index":980,"title":{},"body":{"components/CellsComponent.html":{}}}],["environment",{"_index":572,"title":{},"body":{"modules/AppModule.html":{},"guards/AuthGuard.html":{},"injectables/CellService.html":{},"components/DevicesDefaultComponent.html":{},"injectables/TestChamberService.html":{},"injectables/UserService.html":{},"interfaces/_User.html":{},"interfaces/_UserLight.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["environment.apiuri}/api/protected/cell/cell",{"_index":938,"title":{},"body":{"injectables/CellService.html":{}}}],["environment.apiuri}/api/protected/test",{"_index":2065,"title":{},"body":{"injectables/TestChamberService.html":{}}}],["environment.auth",{"_index":606,"title":{},"body":{"modules/AppModule.html":{}}}],["environment.httpinterceptor",{"_index":608,"title":{},"body":{"modules/AppModule.html":{}}}],["environments/environment",{"_index":573,"title":{},"body":{"modules/AppModule.html":{}}}],["equipped",{"_index":2118,"title":{},"body":{"components/TestChambersComponent.html":{}}}],["err",{"_index":728,"title":{},"body":{"components/BatteryTestComponent.html":{},"interfaces/Charts.html":{},"components/EditCellsComponent.html":{},"components/EditTestChamberComponent.html":{},"components/ViewCellsComponent.html":{},"components/ViewTestChambersComponent.html":{}}}],["error",{"_index":226,"title":{},"body":{"components/AddCellsComponent.html":{},"components/AddTestChamberComponent.html":{},"components/BatteryTestComponent.html":{},"interfaces/BreadCrumbs.html":{},"injectables/CellService.html":{},"interfaces/Charts.html":{},"components/DashboardComponent.html":{},"injectables/DeviceDataService.html":{},"components/EditCellsComponent.html":{},"components/EditTestChamberComponent.html":{},"injectables/TestChamberService.html":{},"injectables/TestDataService.html":{},"injectables/UserService.html":{},"components/ViewCellsComponent.html":{},"components/ViewTestChambersComponent.html":{},"interfaces/_User.html":{},"interfaces/_UserLight.html":{}}}],["error(error.error",{"_index":953,"title":{},"body":{"injectables/CellService.html":{},"injectables/DeviceDataService.html":{},"injectables/TestChamberService.html":{},"injectables/TestDataService.html":{},"injectables/UserService.html":{},"interfaces/_User.html":{},"interfaces/_UserLight.html":{}}}],["error.error",{"_index":952,"title":{},"body":{"injectables/CellService.html":{},"injectables/DeviceDataService.html":{},"injectables/TestChamberService.html":{},"injectables/TestDataService.html":{},"injectables/UserService.html":{},"interfaces/_User.html":{},"interfaces/_UserLight.html":{}}}],["error.status",{"_index":944,"title":{},"body":{"injectables/CellService.html":{},"injectables/DeviceDataService.html":{},"injectables/TestChamberService.html":{},"injectables/TestDataService.html":{},"injectables/UserService.html":{},"interfaces/_User.html":{},"interfaces/_UserLight.html":{}}}],["errorhandler",{"_index":892,"title":{},"body":{"injectables/CellService.html":{},"injectables/DeviceDataService.html":{},"injectables/TestChamberService.html":{},"injectables/TestDataService.html":{},"injectables/UserService.html":{}}}],["errorhandler(error",{"_index":903,"title":{},"body":{"injectables/CellService.html":{},"injectables/DeviceDataService.html":{},"injectables/TestChamberService.html":{},"injectables/TestDataService.html":{},"injectables/UserService.html":{},"interfaces/_User.html":{},"interfaces/_UserLight.html":{}}}],["errorhandler(error:httperrorresponse",{"_index":1553,"title":{},"body":{"injectables/DeviceDataService.html":{},"injectables/TestDataService.html":{}}}],["errorpath",{"_index":2428,"title":{},"body":{"miscellaneous/variables.html":{}}}],["event.stoppropagation",{"_index":1225,"title":{},"body":{"interfaces/Charts.html":{}}}],["events",{"_index":1482,"title":{},"body":{"components/DashboardComponent.html":{}}}],["execute",{"_index":1970,"title":{},"body":{"interfaces/Test.html":{},"index.html":{}}}],["existant",{"_index":254,"title":{},"body":{"components/AddCellsComponent.html":{},"components/EditCellsComponent.html":{}}}],["existing",{"_index":242,"title":{},"body":{"components/AddCellsComponent.html":{},"components/AddTestChamberComponent.html":{},"components/CellsComponent.html":{},"components/EditCellsComponent.html":{},"components/EditTestChamberComponent.html":{},"components/TestChambersComponent.html":{}}}],["exp",{"_index":1971,"title":{},"body":{"interfaces/Test.html":{}}}],["experiment",{"_index":303,"title":{},"body":{"components/AddCellsComponent.html":{},"components/AddTestChamberComponent.html":{},"injectables/CellService.html":{},"interfaces/Charts.html":{},"components/EditCellsComponent.html":{},"components/EditTestChamberComponent.html":{}}}],["experiments",{"_index":1889,"title":{},"body":{"components/HomeComponent.html":{},"components/NoResultComponent.html":{}}}],["expert",{"_index":2146,"title":{},"body":{"components/TestChambersComponent.html":{}}}],["export",{"_index":27,"title":{},"body":{"components/AddBatteryPackComponent.html":{},"components/AddCellsComponent.html":{},"components/AddTestChamberComponent.html":{},"classes/Anim.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"components/BatteryPacksComponent.html":{},"modules/BatteryPacksModule.html":{},"modules/BatteryPacksRoutingModule.html":{},"components/BatteryTestComponent.html":{},"modules/BatteryTestModule.html":{},"modules/BatteryTestRoutingModule.html":{},"interfaces/BreadCrumbs.html":{},"interfaces/Cell.html":{},"classes/CellClass.html":{},"injectables/CellService.html":{},"interfaces/CellTemplate.html":{},"components/CellsComponent.html":{},"modules/CellsModule.html":{},"modules/CellsRoutingModule.html":{},"interfaces/Channel.html":{},"interfaces/ChannelFields.html":{},"interfaces/Charts.html":{},"injectables/ComponentStoreService.html":{},"components/DashboardComponent.html":{},"components/DeviceDataComponent.html":{},"interfaces/DeviceDataLight.html":{},"injectables/DeviceDataService.html":{},"components/DevicesComponent.html":{},"components/DevicesDefaultComponent.html":{},"components/DocsComponent.html":{},"classes/Dot.html":{},"interfaces/DriveCycle.html":{},"components/EditBatteryPackComponent.html":{},"components/EditCellsComponent.html":{},"components/EditTestChamberComponent.html":{},"interfaces/FileField.html":{},"components/FootNavComponent.html":{},"components/HeadNavComponent.html":{},"components/HomeComponent.html":{},"interfaces/InputField.html":{},"interfaces/MeasuredParameters.html":{},"components/NoResultComponent.html":{},"interfaces/PayLoad.html":{},"interfaces/QuickResponseMeasurement.html":{},"interfaces/RowInfo.html":{},"interfaces/SelectField.html":{},"interfaces/SensorObj.html":{},"modules/SharedModule.html":{},"components/ShowAllTestsResultComponent.html":{},"interfaces/Test.html":{},"classes/TestChamber.html":{},"injectables/TestChamberService.html":{},"components/TestChambersComponent.html":{},"modules/TestChambersModule.html":{},"modules/TestChambersRoutingModule.html":{},"interfaces/TestChannel.html":{},"interfaces/TestChannelDeepChannel.html":{},"injectables/TestDataService.html":{},"interfaces/TestFormat.html":{},"interfaces/TestResultDocument.html":{},"injectables/TestService.html":{},"interfaces/TextField.html":{},"interfaces/ToastMsg.html":{},"injectables/UserService.html":{},"components/ViewBatteryPacksComponent.html":{},"components/ViewCellsComponent.html":{},"components/ViewTestChambersComponent.html":{},"interfaces/_TestChamber.html":{},"interfaces/_TestResultDeep.html":{},"interfaces/_TestResultLight.html":{},"interfaces/_User.html":{},"interfaces/_UserLight.html":{}}}],["exports",{"_index":650,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/BatteryPacksRoutingModule.html":{},"modules/BatteryTestRoutingModule.html":{},"modules/CellsRoutingModule.html":{},"modules/SharedModule.html":{},"modules/TestChambersRoutingModule.html":{}}}],["express",{"_index":282,"title":{},"body":{"components/AddCellsComponent.html":{},"components/EditCellsComponent.html":{}}}],["eye:hover",{"_index":2317,"title":{},"body":{"components/ViewTestChambersComponent.html":{}}}],["facility",{"_index":1890,"title":{},"body":{"components/HomeComponent.html":{}}}],["factor",{"_index":281,"title":{},"body":{"components/AddCellsComponent.html":{},"components/EditCellsComponent.html":{},"components/ViewCellsComponent.html":{}}}],["failed",{"_index":230,"title":{},"body":{"components/AddCellsComponent.html":{},"components/AddTestChamberComponent.html":{},"components/EditCellsComponent.html":{},"components/EditTestChamberComponent.html":{},"components/HeadNavComponent.html":{}}}],["false",{"_index":153,"title":{},"body":{"components/AddCellsComponent.html":{},"components/AddTestChamberComponent.html":{},"components/AppComponent.html":{},"components/BatteryTestComponent.html":{},"interfaces/BreadCrumbs.html":{},"components/CellsComponent.html":{},"interfaces/Charts.html":{},"components/DashboardComponent.html":{},"components/EditCellsComponent.html":{},"components/EditTestChamberComponent.html":{},"components/ShowAllTestsResultComponent.html":{},"components/TestChambersComponent.html":{},"components/ViewCellsComponent.html":{},"components/ViewTestChambersComponent.html":{},"miscellaneous/variables.html":{}}}],["family",{"_index":1616,"title":{},"body":{"components/DevicesDefaultComponent.html":{},"components/FootNavComponent.html":{},"components/HomeComponent.html":{}}}],["features",{"_index":983,"title":{},"body":{"components/CellsComponent.html":{},"components/TestChambersComponent.html":{}}}],["fields",{"_index":258,"title":{},"body":{"components/AddCellsComponent.html":{},"interfaces/ChannelFields.html":{},"components/EditCellsComponent.html":{},"interfaces/FileField.html":{},"interfaces/InputField.html":{},"interfaces/PayLoad.html":{},"interfaces/SelectField.html":{},"interfaces/TestFormat.html":{},"interfaces/TextField.html":{},"miscellaneous/variables.html":{}}}],["file",{"_index":9,"title":{},"body":{"components/AddBatteryPackComponent.html":{},"components/AddCellsComponent.html":{},"components/AddTestChamberComponent.html":{},"classes/Anim.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"components/BatteryPacksComponent.html":{},"modules/BatteryPacksModule.html":{},"modules/BatteryPacksRoutingModule.html":{},"components/BatteryTestComponent.html":{},"modules/BatteryTestModule.html":{},"modules/BatteryTestRoutingModule.html":{},"interfaces/BreadCrumbs.html":{},"interfaces/Cell.html":{},"classes/CellClass.html":{},"injectables/CellService.html":{},"interfaces/CellTemplate.html":{},"components/CellsComponent.html":{},"modules/CellsModule.html":{},"modules/CellsRoutingModule.html":{},"interfaces/Channel.html":{},"interfaces/ChannelFields.html":{},"interfaces/Charts.html":{},"injectables/ComponentStoreService.html":{},"components/DashboardComponent.html":{},"components/DeviceDataComponent.html":{},"interfaces/DeviceDataLight.html":{},"injectables/DeviceDataService.html":{},"components/DevicesComponent.html":{},"components/DevicesDefaultComponent.html":{},"components/DocsComponent.html":{},"classes/Dot.html":{},"interfaces/DriveCycle.html":{},"components/EditBatteryPackComponent.html":{},"components/EditCellsComponent.html":{},"components/EditTestChamberComponent.html":{},"interfaces/FileField.html":{},"components/FootNavComponent.html":{},"components/HeadNavComponent.html":{},"components/HomeComponent.html":{},"interfaces/InputField.html":{},"interfaces/MeasuredParameters.html":{},"components/NoResultComponent.html":{},"interfaces/PayLoad.html":{},"interfaces/QuickResponseMeasurement.html":{},"interfaces/RowInfo.html":{},"interfaces/SelectField.html":{},"interfaces/SensorObj.html":{},"modules/SharedModule.html":{},"components/ShowAllTestsResultComponent.html":{},"interfaces/Test.html":{},"classes/TestChamber.html":{},"injectables/TestChamberService.html":{},"components/TestChambersComponent.html":{},"modules/TestChambersModule.html":{},"modules/TestChambersRoutingModule.html":{},"interfaces/TestChannel.html":{},"interfaces/TestChannelDeepChannel.html":{},"injectables/TestDataService.html":{},"interfaces/TestFormat.html":{},"interfaces/TestResultDocument.html":{},"injectables/TestService.html":{},"interfaces/TextField.html":{},"interfaces/ToastMsg.html":{},"injectables/UserService.html":{},"components/ViewBatteryPacksComponent.html":{},"components/ViewCellsComponent.html":{},"components/ViewTestChambersComponent.html":{},"interfaces/_TestChamber.html":{},"interfaces/_TestResultDeep.html":{},"interfaces/_TestResultLight.html":{},"interfaces/_User.html":{},"interfaces/_UserLight.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/variables.html":{}}}],["filefield",{"_index":1161,"title":{"interfaces/FileField.html":{}},"body":{"interfaces/ChannelFields.html":{},"interfaces/FileField.html":{},"interfaces/InputField.html":{},"interfaces/PayLoad.html":{},"interfaces/SelectField.html":{},"interfaces/TestFormat.html":{},"interfaces/TextField.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["filename",{"_index":1405,"title":{},"body":{"interfaces/Charts.html":{}}}],["files",{"_index":2387,"title":{},"body":{"index.html":{}}}],["filter",{"_index":1075,"title":{},"body":{"components/CellsComponent.html":{},"components/ShowAllTestsResultComponent.html":{},"components/TestChambersComponent.html":{},"components/ViewCellsComponent.html":{},"components/ViewTestChambersComponent.html":{}}}],["first",{"_index":833,"title":{},"body":{"interfaces/BreadCrumbs.html":{},"components/DashboardComponent.html":{},"index.html":{}}}],["firstresponse",{"_index":1828,"title":{},"body":{"components/HeadNavComponent.html":{}}}],["fixed",{"_index":542,"title":{},"body":{"components/AppComponent.html":{}}}],["flex",{"_index":1900,"title":{},"body":{"components/HomeComponent.html":{}}}],["flexible",{"_index":1009,"title":{},"body":{"components/CellsComponent.html":{}}}],["font",{"_index":1024,"title":{},"body":{"components/CellsComponent.html":{},"components/DashboardComponent.html":{},"components/DevicesDefaultComponent.html":{},"components/FootNavComponent.html":{},"components/HomeComponent.html":{},"components/TestChambersComponent.html":{},"components/ViewCellsComponent.html":{},"components/ViewTestChambersComponent.html":{}}}],["foot",{"_index":71,"title":{},"body":{"components/AddBatteryPackComponent.html":{},"components/AddCellsComponent.html":{},"components/AddTestChamberComponent.html":{},"components/AppComponent.html":{},"components/BatteryPacksComponent.html":{},"components/BatteryTestComponent.html":{},"components/CellsComponent.html":{},"components/DashboardComponent.html":{},"components/DeviceDataComponent.html":{},"components/DevicesComponent.html":{},"components/DevicesDefaultComponent.html":{},"components/DocsComponent.html":{},"components/EditBatteryPackComponent.html":{},"components/EditCellsComponent.html":{},"components/EditTestChamberComponent.html":{},"components/FootNavComponent.html":{},"components/HeadNavComponent.html":{},"components/HomeComponent.html":{},"components/NoResultComponent.html":{},"components/ShowAllTestsResultComponent.html":{},"components/TestChambersComponent.html":{},"components/ViewBatteryPacksComponent.html":{},"components/ViewCellsComponent.html":{},"components/ViewTestChambersComponent.html":{}}}],["footer",{"_index":1775,"title":{},"body":{"components/FootNavComponent.html":{}}}],["footnavcomponent",{"_index":70,"title":{"components/FootNavComponent.html":{}},"body":{"components/AddBatteryPackComponent.html":{},"components/AddCellsComponent.html":{},"components/AddTestChamberComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/BatteryPacksComponent.html":{},"components/BatteryTestComponent.html":{},"components/CellsComponent.html":{},"components/DashboardComponent.html":{},"components/DeviceDataComponent.html":{},"components/DevicesComponent.html":{},"components/DevicesDefaultComponent.html":{},"components/DocsComponent.html":{},"components/EditBatteryPackComponent.html":{},"components/EditCellsComponent.html":{},"components/EditTestChamberComponent.html":{},"components/FootNavComponent.html":{},"components/HeadNavComponent.html":{},"components/HomeComponent.html":{},"components/NoResultComponent.html":{},"components/ShowAllTestsResultComponent.html":{},"components/TestChambersComponent.html":{},"components/ViewBatteryPacksComponent.html":{},"components/ViewCellsComponent.html":{},"components/ViewTestChambersComponent.html":{},"coverage.html":{},"overview.html":{}}}],["forcedstatus",{"_index":1964,"title":{},"body":{"interfaces/Test.html":{},"injectables/TestChamberService.html":{}}}],["forcestatus",{"_index":2008,"title":{},"body":{"injectables/TestChamberService.html":{}}}],["forcestatus(chamberid",{"_index":2028,"title":{},"body":{"injectables/TestChamberService.html":{}}}],["forcestatus(this.chamberid",{"_index":1387,"title":{},"body":{"interfaces/Charts.html":{}}}],["form",{"_index":280,"title":{},"body":{"components/AddCellsComponent.html":{},"components/EditCellsComponent.html":{},"components/ViewCellsComponent.html":{}}}],["formfactor",{"_index":861,"title":{},"body":{"interfaces/Cell.html":{},"classes/CellClass.html":{},"interfaces/CellTemplate.html":{}}}],["formfields",{"_index":1105,"title":{},"body":{"interfaces/Channel.html":{},"interfaces/MeasuredParameters.html":{},"interfaces/QuickResponseMeasurement.html":{},"interfaces/RowInfo.html":{},"interfaces/SensorObj.html":{},"interfaces/Test.html":{},"interfaces/TestChannel.html":{},"interfaces/TestChannelDeepChannel.html":{},"interfaces/TestResultDocument.html":{},"interfaces/_TestResultDeep.html":{},"interfaces/_TestResultLight.html":{}}}],["formsmodule",{"_index":1916,"title":{},"body":{"modules/SharedModule.html":{}}}],["found",{"_index":1956,"title":{},"body":{"components/ShowAllTestsResultComponent.html":{}}}],["friendly",{"_index":2142,"title":{},"body":{"components/TestChambersComponent.html":{}}}],["front",{"_index":1998,"title":{},"body":{"classes/TestChamber.html":{},"interfaces/_TestChamber.html":{}}}],["full",{"_index":645,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["further",{"_index":2402,"title":{},"body":{"index.html":{}}}],["future",{"_index":985,"title":{},"body":{"components/CellsComponent.html":{},"components/TestChambersComponent.html":{}}}],["gain",{"_index":2123,"title":{},"body":{"components/TestChambersComponent.html":{}}}],["gathered",{"_index":2120,"title":{},"body":{"components/TestChambersComponent.html":{}}}],["generate",{"_index":271,"title":{},"body":{"components/AddCellsComponent.html":{},"index.html":{}}}],["generated",{"_index":2377,"title":{},"body":{"index.html":{}}}],["generates",{"_index":265,"title":{},"body":{"components/AddCellsComponent.html":{},"components/AddTestChamberComponent.html":{},"components/EditCellsComponent.html":{},"components/EditTestChamberComponent.html":{}}}],["get(`${environment.apiuri}/api/protected/cell/cell",{"_index":925,"title":{},"body":{"injectables/CellService.html":{}}}],["get(`${environment.apiuri}/api/protected/test",{"_index":2048,"title":{},"body":{"injectables/TestChamberService.html":{}}}],["get(`${environment.apiuri}/api/users",{"_index":2196,"title":{},"body":{"injectables/UserService.html":{},"interfaces/_User.html":{},"interfaces/_UserLight.html":{}}}],["getalltests",{"_index":1938,"title":{},"body":{"components/ShowAllTestsResultComponent.html":{},"injectables/TestChamberService.html":{}}}],["getapikey",{"_index":2009,"title":{},"body":{"injectables/TestChamberService.html":{}}}],["getapikey(chamberid",{"_index":2031,"title":{},"body":{"injectables/TestChamberService.html":{}}}],["getapikey(this.selectedtestchamber?._id",{"_index":2292,"title":{},"body":{"components/ViewTestChambersComponent.html":{}}}],["getcellforexperiment",{"_index":893,"title":{},"body":{"injectables/CellService.html":{}}}],["getcellforexperiment(searchstr",{"_index":906,"title":{},"body":{"injectables/CellService.html":{}}}],["getcells",{"_index":894,"title":{},"body":{"injectables/CellService.html":{}}}],["getcells(cellid",{"_index":908,"title":{},"body":{"injectables/CellService.html":{}}}],["getchambers",{"_index":2010,"title":{},"body":{"injectables/TestChamberService.html":{}}}],["getchambers(chamberid",{"_index":2033,"title":{},"body":{"injectables/TestChamberService.html":{}}}],["getconnectionstatus",{"_index":2011,"title":{},"body":{"injectables/TestChamberService.html":{}}}],["getconnectionstatus(chamberid",{"_index":2035,"title":{},"body":{"injectables/TestChamberService.html":{}}}],["getconnectionstatus(this.chamberid",{"_index":1375,"title":{},"body":{"interfaces/Charts.html":{}}}],["getconnectionstatus(this.selectedtestchamber._id",{"_index":2285,"title":{},"body":{"components/ViewTestChambersComponent.html":{}}}],["getdevicedatalight",{"_index":1544,"title":{},"body":{"injectables/DeviceDataService.html":{}}}],["getlivetests",{"_index":2012,"title":{},"body":{"injectables/TestChamberService.html":{}}}],["getquickresponse",{"_index":1236,"title":{},"body":{"interfaces/Charts.html":{},"injectables/TestChamberService.html":{}}}],["getquickresponse(chamberid",{"_index":2038,"title":{},"body":{"injectables/TestChamberService.html":{}}}],["gets",{"_index":1991,"title":{},"body":{"classes/TestChamber.html":{},"interfaces/_TestChamber.html":{}}}],["gettemplates",{"_index":175,"title":{},"body":{"components/AddCellsComponent.html":{},"injectables/CellService.html":{},"components/EditCellsComponent.html":{}}}],["gettestdata",{"_index":2013,"title":{},"body":{"injectables/TestChamberService.html":{}}}],["gettestdata(chamberid",{"_index":2041,"title":{},"body":{"injectables/TestChamberService.html":{}}}],["gettestdata(this.chamberid",{"_index":1345,"title":{},"body":{"interfaces/Charts.html":{}}}],["gettestdatadeep",{"_index":2163,"title":{},"body":{"injectables/TestDataService.html":{}}}],["gettestdatalight",{"_index":2164,"title":{},"body":{"injectables/TestDataService.html":{}}}],["gettests",{"_index":704,"title":{},"body":{"components/BatteryTestComponent.html":{}}}],["getting",{"_index":823,"title":{"index.html":{}},"body":{"interfaces/BreadCrumbs.html":{},"components/DashboardComponent.html":{},"components/ViewCellsComponent.html":{},"components/ViewTestChambersComponent.html":{}}}],["getusers",{"_index":116,"title":{},"body":{"components/AddCellsComponent.html":{},"components/AddTestChamberComponent.html":{},"components/EditCellsComponent.html":{},"components/EditTestChamberComponent.html":{},"injectables/UserService.html":{}}}],["getusers(searchstr",{"_index":136,"title":{},"body":{"components/AddCellsComponent.html":{},"components/AddTestChamberComponent.html":{},"components/EditCellsComponent.html":{},"components/EditTestChamberComponent.html":{},"injectables/UserService.html":{},"interfaces/_User.html":{},"interfaces/_UserLight.html":{}}}],["give",{"_index":267,"title":{},"body":{"components/AddCellsComponent.html":{},"components/AddTestChamberComponent.html":{},"components/EditCellsComponent.html":{},"components/EditTestChamberComponent.html":{}}}],["gives",{"_index":377,"title":{},"body":{"components/AddTestChamberComponent.html":{},"components/EditTestChamberComponent.html":{}}}],["go",{"_index":1886,"title":{},"body":{"components/HomeComponent.html":{},"index.html":{}}}],["good",{"_index":1530,"title":{},"body":{"interfaces/DeviceDataLight.html":{}}}],["gotopackdetails",{"_index":817,"title":{},"body":{"interfaces/BreadCrumbs.html":{},"components/DashboardComponent.html":{}}}],["gradient",{"_index":1068,"title":{},"body":{"components/CellsComponent.html":{},"components/TestChambersComponent.html":{}}}],["graph",{"_index":2409,"title":{},"body":{"modules.html":{}}}],["gray",{"_index":1469,"title":{},"body":{"components/DashboardComponent.html":{},"components/FootNavComponent.html":{},"components/ViewCellsComponent.html":{},"components/ViewTestChambersComponent.html":{}}}],["green",{"_index":221,"title":{},"body":{"components/AddCellsComponent.html":{},"components/AddTestChamberComponent.html":{},"components/EditCellsComponent.html":{},"components/EditTestChamberComponent.html":{}}}],["guard",{"_index":651,"title":{"guards/AuthGuard.html":{}},"body":{"coverage.html":{},"overview.html":{}}}],["guards",{"_index":652,"title":{},"body":{"guards/AuthGuard.html":{}}}],["guards/auth.guard",{"_index":624,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["guwahati",{"_index":1772,"title":{},"body":{"components/FootNavComponent.html":{}}}],["h2",{"_index":1032,"title":{},"body":{"components/CellsComponent.html":{},"components/TestChambersComponent.html":{}}}],["h2,h3",{"_index":1896,"title":{},"body":{"components/HomeComponent.html":{}}}],["h:mm",{"_index":1960,"title":{},"body":{"components/ShowAllTestsResultComponent.html":{},"components/ViewTestChambersComponent.html":{}}}],["handlers",{"_index":1766,"title":{},"body":{"components/FootNavComponent.html":{}}}],["happen",{"_index":1175,"title":{},"body":{"interfaces/ChannelFields.html":{},"interfaces/FileField.html":{},"interfaces/InputField.html":{},"interfaces/PayLoad.html":{},"interfaces/SelectField.html":{},"interfaces/TestFormat.html":{},"interfaces/TextField.html":{},"miscellaneous/variables.html":{}}}],["happened",{"_index":2217,"title":{},"body":{"components/ViewCellsComponent.html":{},"components/ViewTestChambersComponent.html":{}}}],["head",{"_index":74,"title":{},"body":{"components/AddBatteryPackComponent.html":{},"components/AddCellsComponent.html":{},"components/AddTestChamberComponent.html":{},"components/AppComponent.html":{},"components/BatteryPacksComponent.html":{},"components/BatteryTestComponent.html":{},"components/CellsComponent.html":{},"components/DashboardComponent.html":{},"components/DeviceDataComponent.html":{},"components/DevicesComponent.html":{},"components/DevicesDefaultComponent.html":{},"components/DocsComponent.html":{},"components/EditBatteryPackComponent.html":{},"components/EditCellsComponent.html":{},"components/EditTestChamberComponent.html":{},"components/FootNavComponent.html":{},"components/HeadNavComponent.html":{},"components/HomeComponent.html":{},"components/NoResultComponent.html":{},"components/ShowAllTestsResultComponent.html":{},"components/TestChambersComponent.html":{},"components/ViewBatteryPacksComponent.html":{},"components/ViewCellsComponent.html":{},"components/ViewTestChambersComponent.html":{}}}],["header",{"_index":745,"title":{},"body":{"components/BatteryTestComponent.html":{},"components/DevicesDefaultComponent.html":{}}}],["headers",{"_index":2068,"title":{},"body":{"injectables/TestChamberService.html":{}}}],["headnavcomponent",{"_index":73,"title":{"components/HeadNavComponent.html":{}},"body":{"components/AddBatteryPackComponent.html":{},"components/AddCellsComponent.html":{},"components/AddTestChamberComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/BatteryPacksComponent.html":{},"components/BatteryTestComponent.html":{},"components/CellsComponent.html":{},"components/DashboardComponent.html":{},"components/DeviceDataComponent.html":{},"components/DevicesComponent.html":{},"components/DevicesDefaultComponent.html":{},"components/DocsComponent.html":{},"components/EditBatteryPackComponent.html":{},"components/EditCellsComponent.html":{},"components/EditTestChamberComponent.html":{},"components/FootNavComponent.html":{},"components/HeadNavComponent.html":{},"components/HomeComponent.html":{},"components/NoResultComponent.html":{},"components/ShowAllTestsResultComponent.html":{},"components/TestChambersComponent.html":{},"components/ViewBatteryPacksComponent.html":{},"components/ViewCellsComponent.html":{},"components/ViewTestChambersComponent.html":{},"coverage.html":{},"overview.html":{}}}],["health",{"_index":1887,"title":{},"body":{"components/HomeComponent.html":{}}}],["height",{"_index":1016,"title":{},"body":{"components/CellsComponent.html":{},"components/DevicesDefaultComponent.html":{},"components/FootNavComponent.html":{},"components/HeadNavComponent.html":{},"components/HomeComponent.html":{},"components/TestChambersComponent.html":{}}}],["help",{"_index":2403,"title":{},"body":{"index.html":{}}}],["helvetica",{"_index":1617,"title":{},"body":{"components/DevicesDefaultComponent.html":{}}}],["helvetica,sans",{"_index":1897,"title":{},"body":{"components/HomeComponent.html":{}}}],["here",{"_index":1914,"title":{},"body":{"components/NoResultComponent.html":{}}}],["hidden",{"_index":1063,"title":{},"body":{"components/CellsComponent.html":{},"components/DevicesDefaultComponent.html":{},"components/TestChambersComponent.html":{}}}],["hold",{"_index":389,"title":{},"body":{"components/AddTestChamberComponent.html":{},"interfaces/ChannelFields.html":{},"components/EditTestChamberComponent.html":{},"interfaces/FileField.html":{},"interfaces/InputField.html":{},"interfaces/PayLoad.html":{},"interfaces/SelectField.html":{},"interfaces/TestFormat.html":{},"interfaces/TextField.html":{},"miscellaneous/variables.html":{}}}],["home",{"_index":450,"title":{},"body":{"classes/Anim.html":{},"modules/AppRoutingModule.html":{},"classes/Dot.html":{},"components/FootNavComponent.html":{},"components/HomeComponent.html":{}}}],["home'},{'name",{"_index":76,"title":{},"body":{"components/AddBatteryPackComponent.html":{},"components/AddCellsComponent.html":{},"components/AddTestChamberComponent.html":{},"components/AppComponent.html":{},"components/BatteryPacksComponent.html":{},"components/BatteryTestComponent.html":{},"components/CellsComponent.html":{},"components/DashboardComponent.html":{},"components/DeviceDataComponent.html":{},"components/DevicesComponent.html":{},"components/DevicesDefaultComponent.html":{},"components/DocsComponent.html":{},"components/EditBatteryPackComponent.html":{},"components/EditCellsComponent.html":{},"components/EditTestChamberComponent.html":{},"components/FootNavComponent.html":{},"components/HeadNavComponent.html":{},"components/HomeComponent.html":{},"components/NoResultComponent.html":{},"components/ShowAllTestsResultComponent.html":{},"components/TestChambersComponent.html":{},"components/ViewBatteryPacksComponent.html":{},"components/ViewCellsComponent.html":{},"components/ViewTestChambersComponent.html":{}}}],["home.component.css",{"_index":452,"title":{},"body":{"classes/Anim.html":{},"classes/Dot.html":{},"components/HomeComponent.html":{}}}],["home.component.html",{"_index":451,"title":{},"body":{"classes/Anim.html":{},"classes/Dot.html":{},"components/HomeComponent.html":{}}}],["homecomponent",{"_index":75,"title":{"components/HomeComponent.html":{}},"body":{"components/AddBatteryPackComponent.html":{},"components/AddCellsComponent.html":{},"components/AddTestChamberComponent.html":{},"classes/Anim.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/BatteryPacksComponent.html":{},"components/BatteryTestComponent.html":{},"components/CellsComponent.html":{},"components/DashboardComponent.html":{},"components/DeviceDataComponent.html":{},"components/DevicesComponent.html":{},"components/DevicesDefaultComponent.html":{},"components/DocsComponent.html":{},"classes/Dot.html":{},"components/EditBatteryPackComponent.html":{},"components/EditCellsComponent.html":{},"components/EditTestChamberComponent.html":{},"components/FootNavComponent.html":{},"components/HeadNavComponent.html":{},"components/HomeComponent.html":{},"components/NoResultComponent.html":{},"components/ShowAllTestsResultComponent.html":{},"components/TestChambersComponent.html":{},"components/ViewBatteryPacksComponent.html":{},"components/ViewCellsComponent.html":{},"components/ViewTestChambersComponent.html":{},"coverage.html":{},"overview.html":{}}}],["hours",{"_index":1172,"title":{},"body":{"interfaces/ChannelFields.html":{},"interfaces/FileField.html":{},"interfaces/InputField.html":{},"interfaces/PayLoad.html":{},"interfaces/SelectField.html":{},"interfaces/TestFormat.html":{},"interfaces/TextField.html":{},"miscellaneous/variables.html":{}}}],["html",{"_index":32,"title":{},"body":{"components/AddBatteryPackComponent.html":{},"components/AddCellsComponent.html":{},"components/AddTestChamberComponent.html":{},"components/AppComponent.html":{},"components/BatteryPacksComponent.html":{},"components/BatteryTestComponent.html":{},"components/CellsComponent.html":{},"components/DashboardComponent.html":{},"components/DeviceDataComponent.html":{},"components/DevicesComponent.html":{},"components/DevicesDefaultComponent.html":{},"components/DocsComponent.html":{},"components/EditBatteryPackComponent.html":{},"components/EditCellsComponent.html":{},"components/EditTestChamberComponent.html":{},"components/FootNavComponent.html":{},"components/HeadNavComponent.html":{},"components/HomeComponent.html":{},"components/NoResultComponent.html":{},"components/ShowAllTestsResultComponent.html":{},"components/TestChambersComponent.html":{},"components/ViewBatteryPacksComponent.html":{},"components/ViewCellsComponent.html":{},"components/ViewTestChambersComponent.html":{}}}],["http",{"_index":900,"title":{},"body":{"injectables/CellService.html":{},"injectables/DeviceDataService.html":{},"injectables/TestChamberService.html":{},"injectables/TestDataService.html":{},"injectables/TestService.html":{},"injectables/UserService.html":{},"interfaces/_User.html":{},"interfaces/_UserLight.html":{}}}],["http://localhost:4200",{"_index":2384,"title":{},"body":{"index.html":{}}}],["http:httpclient",{"_index":1550,"title":{},"body":{"injectables/DeviceDataService.html":{},"injectables/TestDataService.html":{},"injectables/TestService.html":{}}}],["http_interceptors",{"_index":599,"title":{},"body":{"modules/AppModule.html":{}}}],["httpclient",{"_index":898,"title":{},"body":{"injectables/CellService.html":{},"injectables/DeviceDataService.html":{},"injectables/TestChamberService.html":{},"injectables/TestDataService.html":{},"injectables/TestService.html":{},"injectables/UserService.html":{},"interfaces/_User.html":{},"interfaces/_UserLight.html":{}}}],["httpclientmodule",{"_index":596,"title":{},"body":{"modules/AppModule.html":{}}}],["httperrorresponse",{"_index":904,"title":{},"body":{"injectables/CellService.html":{},"injectables/DeviceDataService.html":{},"injectables/TestChamberService.html":{},"injectables/TestDataService.html":{},"injectables/UserService.html":{},"interfaces/_User.html":{},"interfaces/_UserLight.html":{}}}],["httpheaders",{"_index":2046,"title":{},"body":{"injectables/TestChamberService.html":{}}}],["httpinterceptor",{"_index":607,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["httpparams",{"_index":918,"title":{},"body":{"injectables/CellService.html":{},"injectables/TestChamberService.html":{},"injectables/UserService.html":{},"interfaces/_User.html":{},"interfaces/_UserLight.html":{}}}],["httpresponse",{"_index":917,"title":{},"body":{"injectables/CellService.html":{},"injectables/DeviceDataService.html":{},"injectables/UserService.html":{},"interfaces/_User.html":{},"interfaces/_UserLight.html":{}}}],["https://github.com/infinity",{"_index":1745,"title":{},"body":{"components/FootNavComponent.html":{}}}],["humidity",{"_index":1272,"title":{},"body":{"interfaces/Charts.html":{}}}],["icons",{"_index":2362,"title":{},"body":{"dependencies.html":{}}}],["id",{"_index":262,"title":{},"body":{"components/AddCellsComponent.html":{},"components/AddTestChamberComponent.html":{},"components/BatteryTestComponent.html":{},"interfaces/ChannelFields.html":{},"interfaces/DeviceDataLight.html":{},"components/EditCellsComponent.html":{},"components/EditTestChamberComponent.html":{},"interfaces/FileField.html":{},"interfaces/InputField.html":{},"interfaces/PayLoad.html":{},"interfaces/SelectField.html":{},"components/ShowAllTestsResultComponent.html":{},"interfaces/Test.html":{},"interfaces/TestFormat.html":{},"interfaces/TextField.html":{},"components/ViewCellsComponent.html":{},"components/ViewTestChambersComponent.html":{},"miscellaneous/variables.html":{}}}],["id:string",{"_index":1531,"title":{},"body":{"interfaces/DeviceDataLight.html":{}}}],["idea",{"_index":378,"title":{},"body":{"components/AddTestChamberComponent.html":{},"components/EditTestChamberComponent.html":{}}}],["identifier",{"_index":264,"title":{},"body":{"components/AddCellsComponent.html":{},"components/AddTestChamberComponent.html":{},"components/EditCellsComponent.html":{},"components/EditTestChamberComponent.html":{},"coverage.html":{}}}],["identify",{"_index":994,"title":{},"body":{"components/CellsComponent.html":{}}}],["idle",{"_index":1525,"title":{},"body":{"interfaces/DeviceDataLight.html":{}}}],["if(data",{"_index":827,"title":{},"body":{"interfaces/BreadCrumbs.html":{},"components/DashboardComponent.html":{}}}],["if(data.length>0",{"_index":2087,"title":{},"body":{"components/TestChambersComponent.html":{}}}],["if(error.status",{"_index":1554,"title":{},"body":{"injectables/DeviceDataService.html":{},"injectables/TestDataService.html":{}}}],["if(urlcomponents.length",{"_index":834,"title":{},"body":{"interfaces/BreadCrumbs.html":{},"components/DashboardComponent.html":{}}}],["iit",{"_index":1771,"title":{},"body":{"components/FootNavComponent.html":{}}}],["image",{"_index":1013,"title":{},"body":{"components/CellsComponent.html":{},"components/DevicesDefaultComponent.html":{},"components/FootNavComponent.html":{},"components/HomeComponent.html":{},"components/TestChambersComponent.html":{}}}],["img",{"_index":1899,"title":{},"body":{"components/HomeComponent.html":{}}}],["implements",{"_index":97,"title":{},"body":{"components/AddCellsComponent.html":{},"components/AddTestChamberComponent.html":{},"classes/Anim.html":{},"components/AppComponent.html":{},"guards/AuthGuard.html":{},"components/BatteryTestComponent.html":{},"interfaces/BreadCrumbs.html":{},"interfaces/Cell.html":{},"classes/CellClass.html":{},"components/CellsComponent.html":{},"interfaces/Charts.html":{},"components/DashboardComponent.html":{},"components/DeviceDataComponent.html":{},"components/DocsComponent.html":{},"classes/Dot.html":{},"components/EditCellsComponent.html":{},"components/EditTestChamberComponent.html":{},"components/FootNavComponent.html":{},"components/HeadNavComponent.html":{},"components/HomeComponent.html":{},"components/NoResultComponent.html":{},"components/ShowAllTestsResultComponent.html":{},"components/TestChambersComponent.html":{},"components/ViewCellsComponent.html":{},"components/ViewTestChambersComponent.html":{},"index.html":{}}}],["import",{"_index":24,"title":{},"body":{"components/AddBatteryPackComponent.html":{},"components/AddCellsComponent.html":{},"components/AddTestChamberComponent.html":{},"classes/Anim.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"components/BatteryPacksComponent.html":{},"modules/BatteryPacksModule.html":{},"modules/BatteryPacksRoutingModule.html":{},"components/BatteryTestComponent.html":{},"modules/BatteryTestModule.html":{},"modules/BatteryTestRoutingModule.html":{},"interfaces/BreadCrumbs.html":{},"interfaces/Cell.html":{},"classes/CellClass.html":{},"injectables/CellService.html":{},"components/CellsComponent.html":{},"modules/CellsModule.html":{},"modules/CellsRoutingModule.html":{},"interfaces/Channel.html":{},"interfaces/ChannelFields.html":{},"interfaces/Charts.html":{},"injectables/ComponentStoreService.html":{},"components/DashboardComponent.html":{},"components/DeviceDataComponent.html":{},"injectables/DeviceDataService.html":{},"components/DevicesComponent.html":{},"components/DevicesDefaultComponent.html":{},"components/DocsComponent.html":{},"classes/Dot.html":{},"components/EditBatteryPackComponent.html":{},"components/EditCellsComponent.html":{},"components/EditTestChamberComponent.html":{},"interfaces/FileField.html":{},"components/FootNavComponent.html":{},"components/HeadNavComponent.html":{},"components/HomeComponent.html":{},"interfaces/InputField.html":{},"interfaces/MeasuredParameters.html":{},"components/NoResultComponent.html":{},"interfaces/PayLoad.html":{},"interfaces/QuickResponseMeasurement.html":{},"interfaces/RowInfo.html":{},"interfaces/SelectField.html":{},"interfaces/SensorObj.html":{},"modules/SharedModule.html":{},"components/ShowAllTestsResultComponent.html":{},"interfaces/Test.html":{},"classes/TestChamber.html":{},"injectables/TestChamberService.html":{},"components/TestChambersComponent.html":{},"modules/TestChambersModule.html":{},"modules/TestChambersRoutingModule.html":{},"interfaces/TestChannel.html":{},"interfaces/TestChannelDeepChannel.html":{},"injectables/TestDataService.html":{},"interfaces/TestFormat.html":{},"interfaces/TestResultDocument.html":{},"injectables/TestService.html":{},"interfaces/TextField.html":{},"injectables/UserService.html":{},"components/ViewBatteryPacksComponent.html":{},"components/ViewCellsComponent.html":{},"components/ViewTestChambersComponent.html":{},"interfaces/_TestChamber.html":{},"interfaces/_TestResultDeep.html":{},"interfaces/_TestResultLight.html":{},"interfaces/_User.html":{},"interfaces/_UserLight.html":{}}}],["import('./battery",{"_index":634,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["import('./cells/cells.module').then((m",{"_index":631,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["import('./test",{"_index":639,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["important",{"_index":1792,"title":{},"body":{"components/FootNavComponent.html":{},"components/TestChambersComponent.html":{}}}],["imports",{"_index":564,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/BatteryPacksModule.html":{},"modules/BatteryPacksRoutingModule.html":{},"modules/BatteryTestModule.html":{},"modules/BatteryTestRoutingModule.html":{},"modules/CellsModule.html":{},"modules/CellsRoutingModule.html":{},"modules/SharedModule.html":{},"modules/TestChambersModule.html":{},"modules/TestChambersRoutingModule.html":{}}}],["includes(this.searchid.tolowercase().trim",{"_index":1953,"title":{},"body":{"components/ShowAllTestsResultComponent.html":{}}}],["includes(this.searchstr.tolowercase().trim",{"_index":2222,"title":{},"body":{"components/ViewCellsComponent.html":{},"components/ViewTestChambersComponent.html":{}}}],["including",{"_index":1603,"title":{},"body":{"components/DevicesDefaultComponent.html":{},"components/TestChambersComponent.html":{}}}],["independent",{"_index":385,"title":{},"body":{"components/AddTestChamberComponent.html":{},"components/EditTestChamberComponent.html":{}}}],["index",{"_index":103,"title":{"index.html":{}},"body":{"components/AddCellsComponent.html":{},"components/AddTestChamberComponent.html":{},"classes/Anim.html":{},"components/AppComponent.html":{},"guards/AuthGuard.html":{},"components/BatteryTestComponent.html":{},"interfaces/BreadCrumbs.html":{},"interfaces/Cell.html":{},"classes/CellClass.html":{},"injectables/CellService.html":{},"interfaces/CellTemplate.html":{},"components/CellsComponent.html":{},"interfaces/Channel.html":{},"interfaces/ChannelFields.html":{},"interfaces/Charts.html":{},"injectables/ComponentStoreService.html":{},"components/DashboardComponent.html":{},"components/DeviceDataComponent.html":{},"interfaces/DeviceDataLight.html":{},"injectables/DeviceDataService.html":{},"components/DevicesDefaultComponent.html":{},"components/DocsComponent.html":{},"classes/Dot.html":{},"interfaces/DriveCycle.html":{},"components/EditCellsComponent.html":{},"components/EditTestChamberComponent.html":{},"interfaces/FileField.html":{},"components/FootNavComponent.html":{},"components/HeadNavComponent.html":{},"components/HomeComponent.html":{},"interfaces/InputField.html":{},"interfaces/MeasuredParameters.html":{},"components/NoResultComponent.html":{},"interfaces/PayLoad.html":{},"interfaces/QuickResponseMeasurement.html":{},"interfaces/RowInfo.html":{},"interfaces/SelectField.html":{},"interfaces/SensorObj.html":{},"components/ShowAllTestsResultComponent.html":{},"interfaces/Test.html":{},"classes/TestChamber.html":{},"injectables/TestChamberService.html":{},"components/TestChambersComponent.html":{},"interfaces/TestChannel.html":{},"interfaces/TestChannelDeepChannel.html":{},"injectables/TestDataService.html":{},"interfaces/TestFormat.html":{},"interfaces/TestResultDocument.html":{},"injectables/TestService.html":{},"interfaces/TextField.html":{},"interfaces/ToastMsg.html":{},"injectables/UserService.html":{},"components/ViewCellsComponent.html":{},"components/ViewTestChambersComponent.html":{},"interfaces/_TestChamber.html":{},"interfaces/_TestResultDeep.html":{},"interfaces/_TestResultLight.html":{},"interfaces/_User.html":{},"interfaces/_UserLight.html":{},"miscellaneous/variables.html":{}}}],["indexafter",{"_index":2039,"title":{},"body":{"injectables/TestChamberService.html":{}}}],["info",{"_index":3,"title":{},"body":{"components/AddBatteryPackComponent.html":{},"components/AddCellsComponent.html":{},"components/AddTestChamberComponent.html":{},"classes/Anim.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"components/BatteryPacksComponent.html":{},"modules/BatteryPacksModule.html":{},"modules/BatteryPacksRoutingModule.html":{},"components/BatteryTestComponent.html":{},"modules/BatteryTestModule.html":{},"modules/BatteryTestRoutingModule.html":{},"interfaces/BreadCrumbs.html":{},"interfaces/Cell.html":{},"classes/CellClass.html":{},"injectables/CellService.html":{},"interfaces/CellTemplate.html":{},"components/CellsComponent.html":{},"modules/CellsModule.html":{},"modules/CellsRoutingModule.html":{},"interfaces/Channel.html":{},"interfaces/ChannelFields.html":{},"interfaces/Charts.html":{},"injectables/ComponentStoreService.html":{},"components/DashboardComponent.html":{},"components/DeviceDataComponent.html":{},"interfaces/DeviceDataLight.html":{},"injectables/DeviceDataService.html":{},"components/DevicesComponent.html":{},"components/DevicesDefaultComponent.html":{},"components/DocsComponent.html":{},"classes/Dot.html":{},"interfaces/DriveCycle.html":{},"components/EditBatteryPackComponent.html":{},"components/EditCellsComponent.html":{},"components/EditTestChamberComponent.html":{},"interfaces/FileField.html":{},"components/FootNavComponent.html":{},"components/HeadNavComponent.html":{},"components/HomeComponent.html":{},"interfaces/InputField.html":{},"interfaces/MeasuredParameters.html":{},"components/NoResultComponent.html":{},"interfaces/PayLoad.html":{},"interfaces/QuickResponseMeasurement.html":{},"interfaces/RowInfo.html":{},"interfaces/SelectField.html":{},"interfaces/SensorObj.html":{},"modules/SharedModule.html":{},"components/ShowAllTestsResultComponent.html":{},"interfaces/Test.html":{},"classes/TestChamber.html":{},"injectables/TestChamberService.html":{},"components/TestChambersComponent.html":{},"modules/TestChambersModule.html":{},"modules/TestChambersRoutingModule.html":{},"interfaces/TestChannel.html":{},"interfaces/TestChannelDeepChannel.html":{},"injectables/TestDataService.html":{},"interfaces/TestFormat.html":{},"interfaces/TestResultDocument.html":{},"injectables/TestService.html":{},"interfaces/TextField.html":{},"interfaces/ToastMsg.html":{},"injectables/UserService.html":{},"components/ViewBatteryPacksComponent.html":{},"components/ViewCellsComponent.html":{},"components/ViewTestChambersComponent.html":{},"interfaces/_TestChamber.html":{},"interfaces/_TestResultDeep.html":{},"interfaces/_TestResultLight.html":{},"interfaces/_User.html":{},"interfaces/_UserLight.html":{}}}],["info/for",{"_index":939,"title":{},"body":{"injectables/CellService.html":{}}}],["info:active",{"_index":1870,"title":{},"body":{"components/HeadNavComponent.html":{}}}],["info:hover",{"_index":1813,"title":{},"body":{"components/FootNavComponent.html":{},"components/HeadNavComponent.html":{}}}],["information",{"_index":261,"title":{},"body":{"components/AddCellsComponent.html":{},"components/CellsComponent.html":{},"interfaces/Charts.html":{},"components/EditCellsComponent.html":{},"components/ViewCellsComponent.html":{},"components/ViewTestChambersComponent.html":{}}}],["informed",{"_index":2126,"title":{},"body":{"components/TestChambersComponent.html":{}}}],["initialize",{"_index":414,"title":{},"body":{"classes/Anim.html":{},"classes/Dot.html":{},"components/HomeComponent.html":{}}}],["injectable",{"_index":665,"title":{"injectables/CellService.html":{},"injectables/ComponentStoreService.html":{},"injectables/DeviceDataService.html":{},"injectables/TestChamberService.html":{},"injectables/TestDataService.html":{},"injectables/TestService.html":{},"injectables/UserService.html":{}},"body":{"guards/AuthGuard.html":{},"injectables/CellService.html":{},"injectables/ComponentStoreService.html":{},"injectables/DeviceDataService.html":{},"injectables/TestChamberService.html":{},"injectables/TestDataService.html":{},"injectables/TestService.html":{},"injectables/UserService.html":{},"interfaces/_User.html":{},"interfaces/_UserLight.html":{},"coverage.html":{}}}],["injectables",{"_index":889,"title":{},"body":{"injectables/CellService.html":{},"injectables/ComponentStoreService.html":{},"injectables/DeviceDataService.html":{},"injectables/TestChamberService.html":{},"injectables/TestDataService.html":{},"injectables/TestService.html":{},"injectables/UserService.html":{},"overview.html":{}}}],["inline",{"_index":1624,"title":{},"body":{"components/DevicesDefaultComponent.html":{},"components/FootNavComponent.html":{},"components/HeadNavComponent.html":{}}}],["inner",{"_index":327,"title":{},"body":{"components/AddCellsComponent.html":{},"components/AddTestChamberComponent.html":{},"components/EditCellsComponent.html":{},"components/EditTestChamberComponent.html":{}}}],["input",{"_index":322,"title":{},"body":{"components/AddCellsComponent.html":{},"components/AddTestChamberComponent.html":{},"interfaces/ChannelFields.html":{},"components/EditCellsComponent.html":{},"components/EditTestChamberComponent.html":{},"interfaces/FileField.html":{},"interfaces/InputField.html":{},"interfaces/PayLoad.html":{},"interfaces/SelectField.html":{},"interfaces/TestFormat.html":{},"interfaces/TextField.html":{},"miscellaneous/variables.html":{}}}],["inputfield",{"_index":1160,"title":{"interfaces/InputField.html":{}},"body":{"interfaces/ChannelFields.html":{},"interfaces/FileField.html":{},"interfaces/InputField.html":{},"interfaces/PayLoad.html":{},"interfaces/SelectField.html":{},"interfaces/TestFormat.html":{},"interfaces/TextField.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["insights",{"_index":2124,"title":{},"body":{"components/TestChambersComponent.html":{}}}],["instanceof",{"_index":828,"title":{},"body":{"interfaces/BreadCrumbs.html":{},"components/DashboardComponent.html":{}}}],["integrate",{"_index":1000,"title":{},"body":{"components/CellsComponent.html":{}}}],["integrated",{"_index":1755,"title":{},"body":{"components/FootNavComponent.html":{}}}],["integration",{"_index":998,"title":{},"body":{"components/CellsComponent.html":{}}}],["intelligent",{"_index":1752,"title":{},"body":{"components/FootNavComponent.html":{},"components/HomeComponent.html":{}}}],["intelligentbms",{"_index":515,"title":{},"body":{"components/AppComponent.html":{},"index.html":{}}}],["interface",{"_index":782,"title":{"interfaces/BreadCrumbs.html":{},"interfaces/Cell.html":{},"interfaces/CellTemplate.html":{},"interfaces/Channel.html":{},"interfaces/ChannelFields.html":{},"interfaces/Charts.html":{},"interfaces/DeviceDataLight.html":{},"interfaces/DriveCycle.html":{},"interfaces/FileField.html":{},"interfaces/InputField.html":{},"interfaces/MeasuredParameters.html":{},"interfaces/PayLoad.html":{},"interfaces/QuickResponseMeasurement.html":{},"interfaces/RowInfo.html":{},"interfaces/SelectField.html":{},"interfaces/SensorObj.html":{},"interfaces/Test.html":{},"interfaces/TestChannel.html":{},"interfaces/TestChannelDeepChannel.html":{},"interfaces/TestFormat.html":{},"interfaces/TestResultDocument.html":{},"interfaces/TextField.html":{},"interfaces/ToastMsg.html":{},"interfaces/_TestChamber.html":{},"interfaces/_TestResultDeep.html":{},"interfaces/_TestResultLight.html":{},"interfaces/_User.html":{},"interfaces/_UserLight.html":{}},"body":{"interfaces/BreadCrumbs.html":{},"interfaces/Cell.html":{},"classes/CellClass.html":{},"interfaces/CellTemplate.html":{},"interfaces/Channel.html":{},"interfaces/ChannelFields.html":{},"interfaces/Charts.html":{},"components/DashboardComponent.html":{},"interfaces/DeviceDataLight.html":{},"interfaces/DriveCycle.html":{},"interfaces/FileField.html":{},"interfaces/InputField.html":{},"interfaces/MeasuredParameters.html":{},"interfaces/PayLoad.html":{},"interfaces/QuickResponseMeasurement.html":{},"interfaces/RowInfo.html":{},"interfaces/SelectField.html":{},"interfaces/SensorObj.html":{},"interfaces/Test.html":{},"classes/TestChamber.html":{},"components/TestChambersComponent.html":{},"interfaces/TestChannel.html":{},"interfaces/TestChannelDeepChannel.html":{},"interfaces/TestFormat.html":{},"interfaces/TestResultDocument.html":{},"interfaces/TextField.html":{},"interfaces/ToastMsg.html":{},"injectables/UserService.html":{},"interfaces/_TestChamber.html":{},"interfaces/_TestResultDeep.html":{},"interfaces/_TestResultLight.html":{},"interfaces/_User.html":{},"interfaces/_UserLight.html":{},"coverage.html":{}}}],["interfaces",{"_index":784,"title":{},"body":{"interfaces/BreadCrumbs.html":{},"interfaces/Cell.html":{},"interfaces/CellTemplate.html":{},"interfaces/Channel.html":{},"interfaces/ChannelFields.html":{},"interfaces/Charts.html":{},"interfaces/DeviceDataLight.html":{},"interfaces/DriveCycle.html":{},"interfaces/FileField.html":{},"interfaces/InputField.html":{},"interfaces/MeasuredParameters.html":{},"interfaces/PayLoad.html":{},"interfaces/QuickResponseMeasurement.html":{},"interfaces/RowInfo.html":{},"interfaces/SelectField.html":{},"interfaces/SensorObj.html":{},"interfaces/Test.html":{},"interfaces/TestChannel.html":{},"interfaces/TestChannelDeepChannel.html":{},"interfaces/TestFormat.html":{},"interfaces/TestResultDocument.html":{},"interfaces/TextField.html":{},"interfaces/ToastMsg.html":{},"interfaces/_TestChamber.html":{},"interfaces/_TestResultDeep.html":{},"interfaces/_TestResultLight.html":{},"interfaces/_User.html":{},"interfaces/_UserLight.html":{},"overview.html":{}}}],["intervalid",{"_index":700,"title":{},"body":{"components/BatteryTestComponent.html":{}}}],["intro",{"_index":1049,"title":{},"body":{"components/CellsComponent.html":{},"components/HomeComponent.html":{},"components/TestChambersComponent.html":{}}}],["introducing",{"_index":1584,"title":{},"body":{"components/DevicesDefaultComponent.html":{}}}],["intuitive",{"_index":1607,"title":{},"body":{"components/DevicesDefaultComponent.html":{}}}],["inventory",{"_index":252,"title":{},"body":{"components/AddCellsComponent.html":{},"components/CellsComponent.html":{},"components/EditCellsComponent.html":{}}}],["isaddrowbuttondisabled",{"_index":1148,"title":{},"body":{"interfaces/ChannelFields.html":{},"interfaces/FileField.html":{},"interfaces/InputField.html":{},"interfaces/PayLoad.html":{},"interfaces/SelectField.html":{},"interfaces/TestFormat.html":{},"interfaces/TextField.html":{}}}],["isanycellavailable",{"_index":964,"title":{},"body":{"components/CellsComponent.html":{}}}],["isanytestchamberavailable",{"_index":2078,"title":{},"body":{"components/TestChambersComponent.html":{}}}],["isapivisible",{"_index":2256,"title":{},"body":{"components/ViewTestChambersComponent.html":{}}}],["iscomplete",{"_index":1965,"title":{},"body":{"interfaces/Test.html":{}}}],["isconamte",{"_index":1176,"title":{},"body":{"interfaces/ChannelFields.html":{},"interfaces/FileField.html":{},"interfaces/InputField.html":{},"interfaces/PayLoad.html":{},"interfaces/SelectField.html":{},"interfaces/TestFormat.html":{},"interfaces/TextField.html":{}}}],["isconnected",{"_index":1207,"title":{},"body":{"interfaces/Charts.html":{},"classes/TestChamber.html":{},"components/ViewTestChambersComponent.html":{},"interfaces/_TestChamber.html":{}}}],["isconnectedintervalid",{"_index":1208,"title":{},"body":{"interfaces/Charts.html":{},"components/ViewTestChambersComponent.html":{}}}],["isonoverview",{"_index":1429,"title":{},"body":{"components/DashboardComponent.html":{}}}],["isonoverview:boolean",{"_index":804,"title":{},"body":{"interfaces/BreadCrumbs.html":{},"components/DashboardComponent.html":{}}}],["isremoverowbuttondisabled",{"_index":1149,"title":{},"body":{"interfaces/ChannelFields.html":{},"interfaces/FileField.html":{},"interfaces/InputField.html":{},"interfaces/PayLoad.html":{},"interfaces/SelectField.html":{},"interfaces/TestFormat.html":{},"interfaces/TextField.html":{}}}],["issavedisabled",{"_index":108,"title":{},"body":{"components/AddCellsComponent.html":{},"components/AddTestChamberComponent.html":{},"components/EditCellsComponent.html":{},"components/EditTestChamberComponent.html":{}}}],["istestinfoviewenabled",{"_index":701,"title":{},"body":{"components/BatteryTestComponent.html":{},"components/ShowAllTestsResultComponent.html":{}}}],["it's",{"_index":392,"title":{},"body":{"components/AddTestChamberComponent.html":{},"components/EditTestChamberComponent.html":{},"components/ViewCellsComponent.html":{},"components/ViewTestChambersComponent.html":{}}}],["it\\'s",{"_index":394,"title":{},"body":{"components/AddTestChamberComponent.html":{},"components/EditTestChamberComponent.html":{}}}],["item",{"_index":1795,"title":{},"body":{"components/FootNavComponent.html":{},"components/ViewTestChambersComponent.html":{}}}],["item._id",{"_index":1950,"title":{},"body":{"components/ShowAllTestsResultComponent.html":{}}}],["item.cellname",{"_index":2221,"title":{},"body":{"components/ViewCellsComponent.html":{}}}],["item.name",{"_index":1445,"title":{},"body":{"components/DashboardComponent.html":{},"components/ViewTestChambersComponent.html":{}}}],["item:hover",{"_index":1873,"title":{},"body":{"components/HeadNavComponent.html":{}}}],["items",{"_index":544,"title":{},"body":{"components/AppComponent.html":{},"components/DevicesDefaultComponent.html":{},"components/HomeComponent.html":{}}}],["justify",{"_index":1631,"title":{},"body":{"components/DevicesDefaultComponent.html":{},"components/FootNavComponent.html":{}}}],["karma",{"_index":2397,"title":{},"body":{"index.html":{}}}],["keep",{"_index":481,"title":{},"body":{"classes/Anim.html":{},"components/CellsComponent.html":{},"interfaces/Charts.html":{},"classes/Dot.html":{},"components/HomeComponent.html":{}}}],["keepupdatingchart(channelquickresponse",{"_index":1286,"title":{},"body":{"interfaces/Charts.html":{}}}],["key",{"_index":2050,"title":{},"body":{"injectables/TestChamberService.html":{},"components/ViewTestChambersComponent.html":{}}}],["keyframes",{"_index":1853,"title":{},"body":{"components/HeadNavComponent.html":{}}}],["koushik",{"_index":1749,"title":{},"body":{"components/FootNavComponent.html":{}}}],["lab_panel",{"_index":2089,"title":{},"body":{"components/TestChambersComponent.html":{}}}],["label",{"_index":1253,"title":{},"body":{"interfaces/Charts.html":{}}}],["labels",{"_index":1254,"title":{},"body":{"interfaces/Charts.html":{}}}],["labelstring",{"_index":1259,"title":{},"body":{"interfaces/Charts.html":{}}}],["laboratory",{"_index":1774,"title":{},"body":{"components/FootNavComponent.html":{}}}],["labs",{"_index":735,"title":{},"body":{"components/BatteryTestComponent.html":{}}}],["lastonline",{"_index":1518,"title":{},"body":{"interfaces/DeviceDataLight.html":{}}}],["lastonline:any",{"_index":1540,"title":{},"body":{"interfaces/DeviceDataLight.html":{}}}],["lastseen",{"_index":1997,"title":{},"body":{"classes/TestChamber.html":{},"interfaces/_TestChamber.html":{}}}],["later",{"_index":2114,"title":{},"body":{"components/TestChambersComponent.html":{}}}],["learning",{"_index":1754,"title":{},"body":{"components/FootNavComponent.html":{}}}],["left",{"_index":1066,"title":{},"body":{"components/CellsComponent.html":{},"components/DashboardComponent.html":{},"components/DevicesDefaultComponent.html":{},"components/FootNavComponent.html":{},"components/HomeComponent.html":{},"components/TestChambersComponent.html":{}}}],["legend",{"_index":31,"title":{},"body":{"components/AddBatteryPackComponent.html":{},"components/AddCellsComponent.html":{},"components/AddTestChamberComponent.html":{},"components/AppComponent.html":{},"components/BatteryPacksComponent.html":{},"components/BatteryTestComponent.html":{},"components/CellsComponent.html":{},"components/DashboardComponent.html":{},"components/DeviceDataComponent.html":{},"components/DevicesComponent.html":{},"components/DevicesDefaultComponent.html":{},"components/DocsComponent.html":{},"components/EditBatteryPackComponent.html":{},"components/EditCellsComponent.html":{},"components/EditTestChamberComponent.html":{},"components/FootNavComponent.html":{},"components/HeadNavComponent.html":{},"components/HomeComponent.html":{},"components/NoResultComponent.html":{},"components/ShowAllTestsResultComponent.html":{},"components/TestChambersComponent.html":{},"components/ViewBatteryPacksComponent.html":{},"components/ViewCellsComponent.html":{},"components/ViewTestChambersComponent.html":{}}}],["lets",{"_index":1602,"title":{},"body":{"components/DevicesDefaultComponent.html":{}}}],["letter",{"_index":1058,"title":{},"body":{"components/CellsComponent.html":{},"components/TestChambersComponent.html":{}}}],["leverage",{"_index":1880,"title":{},"body":{"components/HomeComponent.html":{}}}],["li",{"_index":1044,"title":{},"body":{"components/CellsComponent.html":{},"components/TestChambersComponent.html":{}}}],["li::before",{"_index":1907,"title":{},"body":{"components/HomeComponent.html":{}}}],["li:hover",{"_index":1874,"title":{},"body":{"components/HeadNavComponent.html":{}}}],["liberation",{"_index":1788,"title":{},"body":{"components/FootNavComponent.html":{}}}],["life",{"_index":1600,"title":{},"body":{"components/DevicesDefaultComponent.html":{}}}],["lightblue",{"_index":1466,"title":{},"body":{"components/DashboardComponent.html":{}}}],["line",{"_index":1046,"title":{},"body":{"components/CellsComponent.html":{},"interfaces/Charts.html":{},"components/FootNavComponent.html":{},"components/TestChambersComponent.html":{}}}],["linear",{"_index":1067,"title":{},"body":{"components/CellsComponent.html":{},"components/FootNavComponent.html":{},"components/TestChambersComponent.html":{}}}],["link",{"_index":1791,"title":{},"body":{"components/FootNavComponent.html":{},"components/HeadNavComponent.html":{}}}],["link:hover",{"_index":1858,"title":{},"body":{"components/HeadNavComponent.html":{}}}],["links",{"_index":1763,"title":{},"body":{"components/FootNavComponent.html":{}}}],["list",{"_index":1037,"title":{},"body":{"components/CellsComponent.html":{},"components/HomeComponent.html":{},"components/ShowAllTestsResultComponent.html":{},"components/TestChambersComponent.html":{},"components/ViewCellsComponent.html":{},"components/ViewTestChambersComponent.html":{}}}],["list>li",{"_index":1906,"title":{},"body":{"components/HomeComponent.html":{}}}],["listen",{"_index":1422,"title":{},"body":{"injectables/ComponentStoreService.html":{}}}],["literal",{"_index":868,"title":{},"body":{"interfaces/Cell.html":{},"interfaces/_TestChamber.html":{}}}],["live",{"_index":734,"title":{},"body":{"components/BatteryTestComponent.html":{}}}],["livetests",{"_index":702,"title":{},"body":{"components/BatteryTestComponent.html":{}}}],["loadchildren",{"_index":630,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["loading",{"_index":304,"title":{},"body":{"components/AddCellsComponent.html":{},"components/AddTestChamberComponent.html":{},"components/EditCellsComponent.html":{},"components/EditTestChamberComponent.html":{},"components/ViewTestChambersComponent.html":{}}}],["localhost",{"_index":486,"title":{},"body":{"classes/Anim.html":{},"components/BatteryTestComponent.html":{},"components/CellsComponent.html":{},"components/DevicesDefaultComponent.html":{},"classes/Dot.html":{},"components/HomeComponent.html":{},"components/ShowAllTestsResultComponent.html":{}}}],["location",{"_index":382,"title":{},"body":{"components/AddTestChamberComponent.html":{},"classes/Anim.html":{},"components/BatteryTestComponent.html":{},"components/CellsComponent.html":{},"interfaces/Charts.html":{},"components/DevicesDefaultComponent.html":{},"classes/Dot.html":{},"components/EditTestChamberComponent.html":{},"components/HeadNavComponent.html":{},"components/HomeComponent.html":{},"components/ShowAllTestsResultComponent.html":{},"classes/TestChamber.html":{},"components/ViewTestChambersComponent.html":{},"interfaces/_TestChamber.html":{}}}],["log",{"_index":1848,"title":{},"body":{"components/HeadNavComponent.html":{}}}],["loggedin",{"_index":672,"title":{},"body":{"guards/AuthGuard.html":{}}}],["login",{"_index":1817,"title":{},"body":{"components/HeadNavComponent.html":{}}}],["logo",{"_index":1808,"title":{},"body":{"components/FootNavComponent.html":{}}}],["logout",{"_index":1818,"title":{},"body":{"components/HeadNavComponent.html":{}}}],["long",{"_index":1163,"title":{},"body":{"interfaces/ChannelFields.html":{},"interfaces/FileField.html":{},"interfaces/InputField.html":{},"interfaces/PayLoad.html":{},"interfaces/SelectField.html":{},"interfaces/TestFormat.html":{},"interfaces/TextField.html":{},"miscellaneous/variables.html":{}}}],["losing",{"_index":2112,"title":{},"body":{"components/TestChambersComponent.html":{}}}],["m",{"_index":637,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["m.batterypacksmodule",{"_index":638,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["m.batterytestmodule",{"_index":648,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["m.cellsmodule",{"_index":632,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["m.testchambersmodule",{"_index":642,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["mah",{"_index":961,"title":{},"body":{"interfaces/CellTemplate.html":{},"components/ViewCellsComponent.html":{}}}],["maintain",{"_index":371,"title":{},"body":{"components/AddTestChamberComponent.html":{},"components/CellsComponent.html":{},"components/EditTestChamberComponent.html":{}}}],["make",{"_index":2125,"title":{},"body":{"components/TestChambersComponent.html":{}}}],["makes",{"_index":2143,"title":{},"body":{"components/TestChambersComponent.html":{}}}],["manage",{"_index":990,"title":{},"body":{"components/CellsComponent.html":{},"components/DevicesDefaultComponent.html":{}}}],["management",{"_index":278,"title":{},"body":{"components/AddCellsComponent.html":{},"components/CellsComponent.html":{},"components/DevicesDefaultComponent.html":{},"components/EditCellsComponent.html":{},"components/FootNavComponent.html":{},"components/HomeComponent.html":{}}}],["manufacturer",{"_index":276,"title":{},"body":{"components/AddCellsComponent.html":{},"interfaces/Cell.html":{},"classes/CellClass.html":{},"interfaces/CellTemplate.html":{},"components/EditCellsComponent.html":{},"components/ViewCellsComponent.html":{}}}],["many",{"_index":384,"title":{},"body":{"components/AddTestChamberComponent.html":{},"interfaces/BreadCrumbs.html":{},"components/DashboardComponent.html":{},"components/EditTestChamberComponent.html":{}}}],["margin",{"_index":306,"title":{},"body":{"components/AddCellsComponent.html":{},"components/AddTestChamberComponent.html":{},"components/AppComponent.html":{},"components/BatteryTestComponent.html":{},"components/CellsComponent.html":{},"components/DashboardComponent.html":{},"components/DevicesDefaultComponent.html":{},"components/EditCellsComponent.html":{},"components/EditTestChamberComponent.html":{},"components/FootNavComponent.html":{},"components/TestChambersComponent.html":{},"components/ViewCellsComponent.html":{},"components/ViewTestChambersComponent.html":{}}}],["margin:10px",{"_index":310,"title":{},"body":{"components/AddCellsComponent.html":{},"components/AddTestChamberComponent.html":{}}}],["mark",{"_index":1699,"title":{},"body":{"components/EditCellsComponent.html":{},"components/EditTestChamberComponent.html":{}}}],["marked",{"_index":1704,"title":{},"body":{"components/EditCellsComponent.html":{}}}],["markfordelete",{"_index":895,"title":{},"body":{"injectables/CellService.html":{}}}],["markfordelete(cellid",{"_index":912,"title":{},"body":{"injectables/CellService.html":{}}}],["markfordelete(this.cellid",{"_index":1703,"title":{},"body":{"components/EditCellsComponent.html":{}}}],["matching",{"_index":93,"title":{},"body":{"components/AddBatteryPackComponent.html":{},"components/AddCellsComponent.html":{},"components/AddTestChamberComponent.html":{},"classes/Anim.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"components/BatteryPacksComponent.html":{},"modules/BatteryPacksModule.html":{},"modules/BatteryPacksRoutingModule.html":{},"components/BatteryTestComponent.html":{},"modules/BatteryTestModule.html":{},"modules/BatteryTestRoutingModule.html":{},"interfaces/BreadCrumbs.html":{},"interfaces/Cell.html":{},"classes/CellClass.html":{},"injectables/CellService.html":{},"interfaces/CellTemplate.html":{},"components/CellsComponent.html":{},"modules/CellsModule.html":{},"modules/CellsRoutingModule.html":{},"interfaces/Channel.html":{},"interfaces/ChannelFields.html":{},"interfaces/Charts.html":{},"injectables/ComponentStoreService.html":{},"components/DashboardComponent.html":{},"components/DeviceDataComponent.html":{},"interfaces/DeviceDataLight.html":{},"injectables/DeviceDataService.html":{},"components/DevicesComponent.html":{},"components/DevicesDefaultComponent.html":{},"components/DocsComponent.html":{},"classes/Dot.html":{},"interfaces/DriveCycle.html":{},"components/EditBatteryPackComponent.html":{},"components/EditCellsComponent.html":{},"components/EditTestChamberComponent.html":{},"interfaces/FileField.html":{},"components/FootNavComponent.html":{},"components/HeadNavComponent.html":{},"components/HomeComponent.html":{},"interfaces/InputField.html":{},"interfaces/MeasuredParameters.html":{},"components/NoResultComponent.html":{},"interfaces/PayLoad.html":{},"interfaces/QuickResponseMeasurement.html":{},"interfaces/RowInfo.html":{},"interfaces/SelectField.html":{},"interfaces/SensorObj.html":{},"modules/SharedModule.html":{},"components/ShowAllTestsResultComponent.html":{},"interfaces/Test.html":{},"classes/TestChamber.html":{},"injectables/TestChamberService.html":{},"components/TestChambersComponent.html":{},"modules/TestChambersModule.html":{},"modules/TestChambersRoutingModule.html":{},"interfaces/TestChannel.html":{},"interfaces/TestChannelDeepChannel.html":{},"injectables/TestDataService.html":{},"interfaces/TestFormat.html":{},"interfaces/TestResultDocument.html":{},"injectables/TestService.html":{},"interfaces/TextField.html":{},"interfaces/ToastMsg.html":{},"injectables/UserService.html":{},"components/ViewBatteryPacksComponent.html":{},"components/ViewCellsComponent.html":{},"components/ViewTestChambersComponent.html":{},"interfaces/_TestChamber.html":{},"interfaces/_TestResultDeep.html":{},"interfaces/_TestResultLight.html":{},"interfaces/_User.html":{},"interfaces/_UserLight.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["math.min((date.now",{"_index":441,"title":{},"body":{"classes/Anim.html":{},"classes/Dot.html":{},"components/HomeComponent.html":{}}}],["max",{"_index":294,"title":{},"body":{"components/AddCellsComponent.html":{},"components/AddTestChamberComponent.html":{},"components/EditCellsComponent.html":{},"components/EditTestChamberComponent.html":{},"components/ViewTestChambersComponent.html":{}}}],["maximum",{"_index":296,"title":{},"body":{"components/AddCellsComponent.html":{},"components/AddTestChamberComponent.html":{},"components/EditCellsComponent.html":{},"components/EditTestChamberComponent.html":{},"components/ViewCellsComponent.html":{},"components/ViewTestChambersComponent.html":{}}}],["maxnoofchannels",{"_index":1974,"title":{},"body":{"classes/TestChamber.html":{},"interfaces/_TestChamber.html":{}}}],["maxnoofdatapoints",{"_index":1210,"title":{},"body":{"interfaces/Charts.html":{}}}],["maxtemp",{"_index":1975,"title":{},"body":{"classes/TestChamber.html":{},"interfaces/_TestChamber.html":{}}}],["maxvolt",{"_index":862,"title":{},"body":{"interfaces/Cell.html":{},"classes/CellClass.html":{}}}],["maxvoltage",{"_index":955,"title":{},"body":{"interfaces/CellTemplate.html":{}}}],["md",{"_index":2252,"title":{},"body":{"components/ViewCellsComponent.html":{},"components/ViewTestChambersComponent.html":{}}}],["measuredparameters",{"_index":1130,"title":{"interfaces/MeasuredParameters.html":{}},"body":{"interfaces/Channel.html":{},"interfaces/Charts.html":{},"interfaces/MeasuredParameters.html":{},"interfaces/QuickResponseMeasurement.html":{},"interfaces/RowInfo.html":{},"interfaces/SensorObj.html":{},"interfaces/TestChannel.html":{},"interfaces/TestChannelDeepChannel.html":{},"interfaces/TestResultDocument.html":{},"interfaces/_TestResultDeep.html":{},"interfaces/_TestResultLight.html":{},"coverage.html":{}}}],["measurementupdateintervalid",{"_index":1202,"title":{},"body":{"interfaces/Charts.html":{}}}],["measuring",{"_index":1593,"title":{},"body":{"components/DevicesDefaultComponent.html":{}}}],["medical",{"_index":2137,"title":{},"body":{"components/TestChambersComponent.html":{}}}],["menlo",{"_index":1786,"title":{},"body":{"components/FootNavComponent.html":{}}}],["mention",{"_index":1594,"title":{},"body":{"components/DevicesDefaultComponent.html":{}}}],["menu",{"_index":1869,"title":{},"body":{"components/HeadNavComponent.html":{}}}],["metadata",{"_index":15,"title":{},"body":{"components/AddBatteryPackComponent.html":{},"components/AddCellsComponent.html":{},"components/AddTestChamberComponent.html":{},"components/AppComponent.html":{},"components/BatteryPacksComponent.html":{},"components/BatteryTestComponent.html":{},"components/CellsComponent.html":{},"components/DashboardComponent.html":{},"components/DeviceDataComponent.html":{},"components/DevicesComponent.html":{},"components/DevicesDefaultComponent.html":{},"components/DocsComponent.html":{},"components/EditBatteryPackComponent.html":{},"components/EditCellsComponent.html":{},"components/EditTestChamberComponent.html":{},"components/FootNavComponent.html":{},"components/HeadNavComponent.html":{},"components/HomeComponent.html":{},"components/NoResultComponent.html":{},"components/ShowAllTestsResultComponent.html":{},"components/TestChambersComponent.html":{},"components/ViewBatteryPacksComponent.html":{},"components/ViewCellsComponent.html":{},"components/ViewTestChambersComponent.html":{}}}],["methods",{"_index":115,"title":{},"body":{"components/AddCellsComponent.html":{},"components/AddTestChamberComponent.html":{},"classes/Anim.html":{},"components/AppComponent.html":{},"guards/AuthGuard.html":{},"components/BatteryTestComponent.html":{},"injectables/CellService.html":{},"components/CellsComponent.html":{},"injectables/ComponentStoreService.html":{},"components/DashboardComponent.html":{},"components/DeviceDataComponent.html":{},"injectables/DeviceDataService.html":{},"components/DevicesDefaultComponent.html":{},"components/DocsComponent.html":{},"classes/Dot.html":{},"components/EditCellsComponent.html":{},"components/EditTestChamberComponent.html":{},"components/FootNavComponent.html":{},"components/HeadNavComponent.html":{},"components/HomeComponent.html":{},"components/NoResultComponent.html":{},"components/ShowAllTestsResultComponent.html":{},"injectables/TestChamberService.html":{},"components/TestChambersComponent.html":{},"injectables/TestDataService.html":{},"injectables/TestService.html":{},"injectables/UserService.html":{},"components/ViewCellsComponent.html":{},"components/ViewTestChambersComponent.html":{}}}],["middle",{"_index":750,"title":{},"body":{"components/BatteryTestComponent.html":{},"components/DashboardComponent.html":{},"components/FootNavComponent.html":{},"components/HeadNavComponent.html":{}}}],["min",{"_index":299,"title":{},"body":{"components/AddCellsComponent.html":{},"components/AddTestChamberComponent.html":{},"components/EditCellsComponent.html":{},"components/EditTestChamberComponent.html":{}}}],["minimum",{"_index":300,"title":{},"body":{"components/AddCellsComponent.html":{},"components/AddTestChamberComponent.html":{},"components/EditCellsComponent.html":{},"components/EditTestChamberComponent.html":{},"components/ViewCellsComponent.html":{},"components/ViewTestChambersComponent.html":{}}}],["mintemp",{"_index":1976,"title":{},"body":{"classes/TestChamber.html":{},"interfaces/_TestChamber.html":{}}}],["minutes",{"_index":1173,"title":{},"body":{"interfaces/ChannelFields.html":{},"interfaces/FileField.html":{},"interfaces/InputField.html":{},"interfaces/PayLoad.html":{},"interfaces/SelectField.html":{},"interfaces/TestFormat.html":{},"interfaces/TextField.html":{},"miscellaneous/variables.html":{}}}],["minvolt",{"_index":863,"title":{},"body":{"interfaces/Cell.html":{},"classes/CellClass.html":{}}}],["minvoltage",{"_index":956,"title":{},"body":{"interfaces/CellTemplate.html":{}}}],["miscellaneous",{"_index":2416,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["mmm",{"_index":1958,"title":{},"body":{"components/ShowAllTestsResultComponent.html":{},"components/ViewTestChambersComponent.html":{}}}],["mobility",{"_index":1773,"title":{},"body":{"components/FootNavComponent.html":{}}}],["modal",{"_index":1217,"title":{},"body":{"interfaces/Charts.html":{},"components/EditCellsComponent.html":{},"components/EditTestChamberComponent.html":{}}}],["modalbody",{"_index":1206,"title":{},"body":{"interfaces/Charts.html":{},"components/EditCellsComponent.html":{},"components/EditTestChamberComponent.html":{}}}],["modalservice",{"_index":1218,"title":{},"body":{"interfaces/Charts.html":{},"components/EditCellsComponent.html":{},"components/EditTestChamberComponent.html":{}}}],["modaltitle",{"_index":1205,"title":{},"body":{"interfaces/Charts.html":{},"components/EditCellsComponent.html":{},"components/EditTestChamberComponent.html":{}}}],["models/cell",{"_index":923,"title":{},"body":{"injectables/CellService.html":{},"components/ViewCellsComponent.html":{}}}],["models/celltemplate",{"_index":168,"title":{},"body":{"components/AddCellsComponent.html":{},"components/EditCellsComponent.html":{}}}],["models/devicedata",{"_index":793,"title":{},"body":{"interfaces/BreadCrumbs.html":{},"components/DashboardComponent.html":{},"injectables/DeviceDataService.html":{}}}],["models/testchamber",{"_index":354,"title":{},"body":{"components/AddTestChamberComponent.html":{},"components/EditTestChamberComponent.html":{},"injectables/TestChamberService.html":{}}}],["models/testresult",{"_index":719,"title":{},"body":{"components/BatteryTestComponent.html":{},"interfaces/Charts.html":{},"components/ShowAllTestsResultComponent.html":{},"injectables/TestDataService.html":{}}}],["models/toastmsg",{"_index":522,"title":{},"body":{"components/AppComponent.html":{},"injectables/ComponentStoreService.html":{}}}],["moderate",{"_index":1529,"title":{},"body":{"interfaces/DeviceDataLight.html":{}}}],["module",{"_index":550,"title":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/BatteryPacksModule.html":{},"modules/BatteryPacksRoutingModule.html":{},"modules/BatteryTestModule.html":{},"modules/BatteryTestRoutingModule.html":{},"modules/CellsModule.html":{},"modules/CellsRoutingModule.html":{},"modules/SharedModule.html":{},"modules/TestChambersModule.html":{},"modules/TestChambersRoutingModule.html":{}},"body":{}}],["modules",{"_index":552,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/BatteryPacksModule.html":{},"modules/BatteryPacksRoutingModule.html":{},"modules/BatteryTestModule.html":{},"modules/BatteryTestRoutingModule.html":{},"modules/CellsModule.html":{},"modules/CellsRoutingModule.html":{},"modules/SharedModule.html":{},"modules/TestChambersModule.html":{},"modules/TestChambersRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["moment",{"_index":737,"title":{},"body":{"components/BatteryTestComponent.html":{}}}],["mongodb",{"_index":1990,"title":{},"body":{"classes/TestChamber.html":{},"interfaces/_TestChamber.html":{}}}],["mongoose",{"_index":1972,"title":{},"body":{"interfaces/Test.html":{}}}],["monitering",{"_index":1760,"title":{},"body":{"components/FootNavComponent.html":{}}}],["monitor",{"_index":1884,"title":{},"body":{"components/HomeComponent.html":{},"components/TestChambersComponent.html":{}}}],["monitoring",{"_index":1610,"title":{},"body":{"components/DevicesDefaultComponent.html":{}}}],["mono",{"_index":1785,"title":{},"body":{"components/FootNavComponent.html":{}}}],["monospace",{"_index":1781,"title":{},"body":{"components/FootNavComponent.html":{}}}],["more",{"_index":2404,"title":{},"body":{"index.html":{}}}],["mouseevent",{"_index":1224,"title":{},"body":{"interfaces/Charts.html":{}}}],["move",{"_index":1646,"title":{},"body":{"classes/Dot.html":{}}}],["move(u",{"_index":427,"title":{},"body":{"classes/Anim.html":{},"classes/Dot.html":{},"components/HomeComponent.html":{}}}],["msg",{"_index":217,"title":{},"body":{"components/AddCellsComponent.html":{},"components/AddTestChamberComponent.html":{},"components/AppComponent.html":{},"interfaces/Charts.html":{},"injectables/ComponentStoreService.html":{},"components/EditCellsComponent.html":{},"components/EditTestChamberComponent.html":{},"components/HeadNavComponent.html":{},"interfaces/ToastMsg.html":{},"components/ViewTestChambersComponent.html":{}}}],["msg.color",{"_index":529,"title":{},"body":{"components/AppComponent.html":{}}}],["msg.msg",{"_index":527,"title":{},"body":{"components/AppComponent.html":{}}}],["msg.timeout",{"_index":533,"title":{},"body":{"components/AppComponent.html":{}}}],["msg:string",{"_index":2178,"title":{},"body":{"interfaces/ToastMsg.html":{}}}],["msgs",{"_index":1421,"title":{},"body":{"injectables/ComponentStoreService.html":{}}}],["much",{"_index":379,"title":{},"body":{"components/AddTestChamberComponent.html":{},"components/EditTestChamberComponent.html":{}}}],["multi",{"_index":615,"title":{},"body":{"modules/AppModule.html":{}}}],["multiplier",{"_index":1097,"title":{},"body":{"interfaces/Channel.html":{},"interfaces/ChannelFields.html":{},"interfaces/FileField.html":{},"interfaces/InputField.html":{},"interfaces/MeasuredParameters.html":{},"interfaces/PayLoad.html":{},"interfaces/QuickResponseMeasurement.html":{},"interfaces/RowInfo.html":{},"interfaces/SelectField.html":{},"interfaces/SensorObj.html":{},"interfaces/TestChannel.html":{},"interfaces/TestChannelDeepChannel.html":{},"interfaces/TestFormat.html":{},"interfaces/TestResultDocument.html":{},"interfaces/TextField.html":{},"interfaces/_TestResultDeep.html":{},"interfaces/_TestResultLight.html":{},"miscellaneous/variables.html":{}}}],["name",{"_index":37,"title":{},"body":{"components/AddBatteryPackComponent.html":{},"components/AddCellsComponent.html":{},"components/AddTestChamberComponent.html":{},"classes/Anim.html":{},"components/AppComponent.html":{},"guards/AuthGuard.html":{},"components/BatteryPacksComponent.html":{},"components/BatteryTestComponent.html":{},"interfaces/BreadCrumbs.html":{},"classes/CellClass.html":{},"injectables/CellService.html":{},"components/CellsComponent.html":{},"interfaces/ChannelFields.html":{},"interfaces/Charts.html":{},"injectables/ComponentStoreService.html":{},"components/DashboardComponent.html":{},"components/DeviceDataComponent.html":{},"interfaces/DeviceDataLight.html":{},"injectables/DeviceDataService.html":{},"components/DevicesComponent.html":{},"components/DevicesDefaultComponent.html":{},"components/DocsComponent.html":{},"classes/Dot.html":{},"components/EditBatteryPackComponent.html":{},"components/EditCellsComponent.html":{},"components/EditTestChamberComponent.html":{},"interfaces/FileField.html":{},"components/FootNavComponent.html":{},"components/HeadNavComponent.html":{},"components/HomeComponent.html":{},"interfaces/InputField.html":{},"components/NoResultComponent.html":{},"interfaces/PayLoad.html":{},"interfaces/SelectField.html":{},"components/ShowAllTestsResultComponent.html":{},"classes/TestChamber.html":{},"injectables/TestChamberService.html":{},"components/TestChambersComponent.html":{},"injectables/TestDataService.html":{},"interfaces/TestFormat.html":{},"injectables/TestService.html":{},"interfaces/TextField.html":{},"injectables/UserService.html":{},"components/ViewBatteryPacksComponent.html":{},"components/ViewCellsComponent.html":{},"components/ViewTestChambersComponent.html":{},"interfaces/_TestChamber.html":{},"interfaces/_User.html":{},"interfaces/_UserLight.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["name/base",{"_index":268,"title":{},"body":{"components/AddCellsComponent.html":{},"components/EditCellsComponent.html":{}}}],["name:string",{"_index":1532,"title":{},"body":{"interfaces/DeviceDataLight.html":{}}}],["name?:string",{"_index":797,"title":{},"body":{"interfaces/BreadCrumbs.html":{},"components/DashboardComponent.html":{}}}],["nav",{"_index":1738,"title":{},"body":{"components/FootNavComponent.html":{},"components/HeadNavComponent.html":{}}}],["nav'},{'name",{"_index":72,"title":{},"body":{"components/AddBatteryPackComponent.html":{},"components/AddCellsComponent.html":{},"components/AddTestChamberComponent.html":{},"components/AppComponent.html":{},"components/BatteryPacksComponent.html":{},"components/BatteryTestComponent.html":{},"components/CellsComponent.html":{},"components/DashboardComponent.html":{},"components/DeviceDataComponent.html":{},"components/DevicesComponent.html":{},"components/DevicesDefaultComponent.html":{},"components/DocsComponent.html":{},"components/EditBatteryPackComponent.html":{},"components/EditCellsComponent.html":{},"components/EditTestChamberComponent.html":{},"components/FootNavComponent.html":{},"components/HeadNavComponent.html":{},"components/HomeComponent.html":{},"components/NoResultComponent.html":{},"components/ShowAllTestsResultComponent.html":{},"components/TestChambersComponent.html":{},"components/ViewBatteryPacksComponent.html":{},"components/ViewCellsComponent.html":{},"components/ViewTestChambersComponent.html":{}}}],["nav.component",{"_index":579,"title":{},"body":{"modules/AppModule.html":{}}}],["nav.component.css",{"_index":1739,"title":{},"body":{"components/FootNavComponent.html":{},"components/HeadNavComponent.html":{}}}],["nav.component.html",{"_index":1740,"title":{},"body":{"components/FootNavComponent.html":{},"components/HeadNavComponent.html":{}}}],["nav.component.ts",{"_index":1737,"title":{},"body":{"components/FootNavComponent.html":{},"components/HeadNavComponent.html":{},"coverage.html":{}}}],["nav.component.ts:14",{"_index":1742,"title":{},"body":{"components/FootNavComponent.html":{},"components/HeadNavComponent.html":{}}}],["nav.component.ts:15",{"_index":1819,"title":{},"body":{"components/HeadNavComponent.html":{}}}],["nav.component.ts:17",{"_index":1743,"title":{},"body":{"components/FootNavComponent.html":{}}}],["nav.component.ts:22",{"_index":1823,"title":{},"body":{"components/HeadNavComponent.html":{}}}],["nav.component.ts:51",{"_index":1820,"title":{},"body":{"components/HeadNavComponent.html":{}}}],["nav.component.ts:54",{"_index":1821,"title":{},"body":{"components/HeadNavComponent.html":{}}}],["nav.component.ts:57",{"_index":1822,"title":{},"body":{"components/HeadNavComponent.html":{}}}],["nav.component.ts:9",{"_index":1751,"title":{},"body":{"components/FootNavComponent.html":{}}}],["nav/foot",{"_index":578,"title":{},"body":{"modules/AppModule.html":{},"components/FootNavComponent.html":{},"coverage.html":{}}}],["nav/head",{"_index":581,"title":{},"body":{"modules/AppModule.html":{},"components/HeadNavComponent.html":{},"coverage.html":{}}}],["navbar",{"_index":1875,"title":{},"body":{"components/HeadNavComponent.html":{}}}],["navigate",{"_index":2383,"title":{},"body":{"index.html":{}}}],["navigation",{"_index":1489,"title":{},"body":{"components/DashboardComponent.html":{}}}],["navigationend",{"_index":795,"title":{},"body":{"interfaces/BreadCrumbs.html":{},"components/DashboardComponent.html":{}}}],["need",{"_index":981,"title":{},"body":{"components/CellsComponent.html":{},"components/DevicesDefaultComponent.html":{},"classes/TestChamber.html":{},"components/TestChambersComponent.html":{},"interfaces/_TestChamber.html":{},"index.html":{}}}],["needing",{"_index":2103,"title":{},"body":{"components/TestChambersComponent.html":{}}}],["needs",{"_index":1008,"title":{},"body":{"components/CellsComponent.html":{},"components/TestChambersComponent.html":{}}}],["network",{"_index":948,"title":{},"body":{"injectables/CellService.html":{},"injectables/DeviceDataService.html":{},"injectables/TestChamberService.html":{},"injectables/TestDataService.html":{},"injectables/UserService.html":{},"interfaces/_User.html":{},"interfaces/_UserLight.html":{}}}],["never",{"_index":1359,"title":{},"body":{"interfaces/Charts.html":{},"components/TestChambersComponent.html":{}}}],["new",{"_index":53,"title":{},"body":{"components/AddBatteryPackComponent.html":{},"components/AddCellsComponent.html":{},"components/AddTestChamberComponent.html":{},"classes/Anim.html":{},"components/AppComponent.html":{},"components/BatteryPacksComponent.html":{},"components/BatteryTestComponent.html":{},"modules/BatteryTestModule.html":{},"modules/BatteryTestRoutingModule.html":{},"injectables/CellService.html":{},"components/CellsComponent.html":{},"interfaces/Charts.html":{},"injectables/ComponentStoreService.html":{},"components/DashboardComponent.html":{},"components/DeviceDataComponent.html":{},"injectables/DeviceDataService.html":{},"components/DevicesComponent.html":{},"components/DevicesDefaultComponent.html":{},"components/DocsComponent.html":{},"classes/Dot.html":{},"components/EditBatteryPackComponent.html":{},"components/EditCellsComponent.html":{},"components/EditTestChamberComponent.html":{},"components/FootNavComponent.html":{},"components/HeadNavComponent.html":{},"components/HomeComponent.html":{},"components/NoResultComponent.html":{},"components/ShowAllTestsResultComponent.html":{},"classes/TestChamber.html":{},"injectables/TestChamberService.html":{},"components/TestChambersComponent.html":{},"injectables/TestDataService.html":{},"injectables/UserService.html":{},"components/ViewBatteryPacksComponent.html":{},"components/ViewCellsComponent.html":{},"components/ViewTestChambersComponent.html":{},"interfaces/_TestChamber.html":{},"interfaces/_User.html":{},"interfaces/_UserLight.html":{},"coverage.html":{},"index.html":{}}}],["newmeasurements",{"_index":1299,"title":{},"body":{"interfaces/Charts.html":{}}}],["newmeasurements.celltemp?.foreach((tempobjnew",{"_index":1315,"title":{},"body":{"interfaces/Charts.html":{}}}],["newmeasurements.chamberhum",{"_index":1306,"title":{},"body":{"interfaces/Charts.html":{}}}],["newmeasurements.chamberhum?.length",{"_index":1307,"title":{},"body":{"interfaces/Charts.html":{}}}],["newmeasurements.chambertemp",{"_index":1309,"title":{},"body":{"interfaces/Charts.html":{}}}],["newmeasurements.chambertemp?.length",{"_index":1310,"title":{},"body":{"interfaces/Charts.html":{}}}],["newmeasurements.current",{"_index":1300,"title":{},"body":{"interfaces/Charts.html":{}}}],["newmeasurements.current?.length",{"_index":1301,"title":{},"body":{"interfaces/Charts.html":{}}}],["newmeasurements.time",{"_index":1312,"title":{},"body":{"interfaces/Charts.html":{}}}],["newmeasurements.time.length",{"_index":1321,"title":{},"body":{"interfaces/Charts.html":{}}}],["newmeasurements.time?.length",{"_index":1313,"title":{},"body":{"interfaces/Charts.html":{}}}],["newmeasurements.voltage",{"_index":1303,"title":{},"body":{"interfaces/Charts.html":{}}}],["newmeasurements.voltage?.length",{"_index":1304,"title":{},"body":{"interfaces/Charts.html":{}}}],["next",{"_index":213,"title":{},"body":{"components/AddCellsComponent.html":{},"components/AddTestChamberComponent.html":{},"components/BatteryTestComponent.html":{},"components/CellsComponent.html":{},"interfaces/Charts.html":{},"components/EditCellsComponent.html":{},"components/EditTestChamberComponent.html":{},"components/TestChambersComponent.html":{},"components/ViewCellsComponent.html":{},"components/ViewTestChambersComponent.html":{}}}],["ng",{"_index":590,"title":{},"body":{"modules/AppModule.html":{},"modules/BatteryTestModule.html":{},"modules/CellsModule.html":{},"interfaces/Charts.html":{},"components/EditCellsComponent.html":{},"components/EditTestChamberComponent.html":{},"modules/TestChambersModule.html":{},"dependencies.html":{},"index.html":{}}}],["ng2",{"_index":771,"title":{},"body":{"modules/BatteryTestModule.html":{},"interfaces/Charts.html":{},"dependencies.html":{}}}],["ngbmodal",{"_index":1182,"title":{},"body":{"interfaces/Charts.html":{},"components/EditCellsComponent.html":{},"components/EditTestChamberComponent.html":{}}}],["ngbmodule",{"_index":603,"title":{},"body":{"modules/AppModule.html":{}}}],["ngbpagination",{"_index":768,"title":{},"body":{"modules/BatteryTestModule.html":{},"modules/CellsModule.html":{},"modules/TestChambersModule.html":{},"overview.html":{}}}],["ngchartsmodule",{"_index":770,"title":{},"body":{"modules/BatteryTestModule.html":{}}}],["ngcircleprogressmodule",{"_index":589,"title":{},"body":{"modules/AppModule.html":{}}}],["ngcircleprogressmodule.forroot",{"_index":609,"title":{},"body":{"modules/AppModule.html":{}}}],["ngmodule",{"_index":574,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/BatteryPacksModule.html":{},"modules/BatteryPacksRoutingModule.html":{},"modules/BatteryTestModule.html":{},"modules/BatteryTestRoutingModule.html":{},"modules/CellsModule.html":{},"modules/CellsRoutingModule.html":{},"modules/SharedModule.html":{},"modules/TestChambersModule.html":{},"modules/TestChambersRoutingModule.html":{}}}],["ngondestroy",{"_index":117,"title":{},"body":{"components/AddCellsComponent.html":{},"components/AddTestChamberComponent.html":{},"components/BatteryTestComponent.html":{},"interfaces/BreadCrumbs.html":{},"components/CellsComponent.html":{},"interfaces/Charts.html":{},"components/DashboardComponent.html":{},"components/DeviceDataComponent.html":{},"components/EditCellsComponent.html":{},"components/EditTestChamberComponent.html":{},"components/HeadNavComponent.html":{},"components/ShowAllTestsResultComponent.html":{},"components/TestChambersComponent.html":{},"components/ViewCellsComponent.html":{},"components/ViewTestChambersComponent.html":{}}}],["ngoninit",{"_index":118,"title":{},"body":{"components/AddCellsComponent.html":{},"classes/Anim.html":{},"components/AppComponent.html":{},"components/BatteryTestComponent.html":{},"interfaces/BreadCrumbs.html":{},"components/CellsComponent.html":{},"components/DashboardComponent.html":{},"components/DeviceDataComponent.html":{},"components/DevicesDefaultComponent.html":{},"components/DocsComponent.html":{},"classes/Dot.html":{},"components/EditCellsComponent.html":{},"components/EditTestChamberComponent.html":{},"components/FootNavComponent.html":{},"components/HeadNavComponent.html":{},"components/HomeComponent.html":{},"components/NoResultComponent.html":{},"components/ShowAllTestsResultComponent.html":{},"components/TestChambersComponent.html":{},"components/ViewCellsComponent.html":{},"components/ViewTestChambersComponent.html":{}}}],["ngselectmodule",{"_index":779,"title":{},"body":{"modules/BatteryTestModule.html":{},"modules/CellsModule.html":{},"modules/TestChambersModule.html":{}}}],["nomcap",{"_index":864,"title":{},"body":{"interfaces/Cell.html":{},"classes/CellClass.html":{}}}],["nomcapacity",{"_index":957,"title":{},"body":{"interfaces/CellTemplate.html":{}}}],["nomcurr",{"_index":865,"title":{},"body":{"interfaces/Cell.html":{},"classes/CellClass.html":{}}}],["nomcurrent",{"_index":958,"title":{},"body":{"interfaces/CellTemplate.html":{}}}],["nominal",{"_index":286,"title":{},"body":{"components/AddCellsComponent.html":{},"components/EditCellsComponent.html":{},"components/ViewCellsComponent.html":{}}}],["nomvolt",{"_index":866,"title":{},"body":{"interfaces/Cell.html":{},"classes/CellClass.html":{}}}],["nomvoltage",{"_index":959,"title":{},"body":{"interfaces/CellTemplate.html":{}}}],["none",{"_index":314,"title":{},"body":{"components/AddCellsComponent.html":{},"components/AddTestChamberComponent.html":{},"components/CellsComponent.html":{},"components/DashboardComponent.html":{},"components/EditCellsComponent.html":{},"components/EditTestChamberComponent.html":{},"components/FootNavComponent.html":{},"components/HeadNavComponent.html":{},"components/HomeComponent.html":{},"components/TestChambersComponent.html":{}}}],["noofdevices",{"_index":1430,"title":{},"body":{"components/DashboardComponent.html":{}}}],["noofdevices:number|undefined",{"_index":802,"title":{},"body":{"interfaces/BreadCrumbs.html":{},"components/DashboardComponent.html":{}}}],["noofdevicesconnected",{"_index":1431,"title":{},"body":{"components/DashboardComponent.html":{}}}],["noofdevicesconnected:number|undefined",{"_index":803,"title":{},"body":{"interfaces/BreadCrumbs.html":{},"components/DashboardComponent.html":{}}}],["noresultcomponent",{"_index":77,"title":{"components/NoResultComponent.html":{}},"body":{"components/AddBatteryPackComponent.html":{},"components/AddCellsComponent.html":{},"components/AddTestChamberComponent.html":{},"components/AppComponent.html":{},"components/BatteryPacksComponent.html":{},"components/BatteryTestComponent.html":{},"modules/BatteryTestModule.html":{},"components/CellsComponent.html":{},"components/DashboardComponent.html":{},"components/DeviceDataComponent.html":{},"components/DevicesComponent.html":{},"components/DevicesDefaultComponent.html":{},"components/DocsComponent.html":{},"components/EditBatteryPackComponent.html":{},"components/EditCellsComponent.html":{},"components/EditTestChamberComponent.html":{},"components/FootNavComponent.html":{},"components/HeadNavComponent.html":{},"components/HomeComponent.html":{},"components/NoResultComponent.html":{},"components/ShowAllTestsResultComponent.html":{},"components/TestChambersComponent.html":{},"components/ViewBatteryPacksComponent.html":{},"components/ViewCellsComponent.html":{},"components/ViewTestChambersComponent.html":{},"coverage.html":{},"overview.html":{}}}],["notification",{"_index":1426,"title":{},"body":{"injectables/ComponentStoreService.html":{},"interfaces/ToastMsg.html":{}}}],["null",{"_index":535,"title":{},"body":{"components/AppComponent.html":{},"interfaces/ChannelFields.html":{},"interfaces/Charts.html":{},"components/EditTestChamberComponent.html":{},"interfaces/FileField.html":{},"interfaces/InputField.html":{},"interfaces/PayLoad.html":{},"interfaces/SelectField.html":{},"interfaces/Test.html":{},"injectables/TestChamberService.html":{},"interfaces/TestFormat.html":{},"interfaces/TextField.html":{},"miscellaneous/variables.html":{}}}],["number",{"_index":711,"title":{},"body":{"components/BatteryTestComponent.html":{},"interfaces/Cell.html":{},"classes/CellClass.html":{},"interfaces/CellTemplate.html":{},"interfaces/Channel.html":{},"interfaces/ChannelFields.html":{},"interfaces/Charts.html":{},"components/DashboardComponent.html":{},"interfaces/DeviceDataLight.html":{},"components/DevicesDefaultComponent.html":{},"interfaces/DriveCycle.html":{},"interfaces/FileField.html":{},"interfaces/InputField.html":{},"interfaces/MeasuredParameters.html":{},"interfaces/PayLoad.html":{},"interfaces/QuickResponseMeasurement.html":{},"interfaces/RowInfo.html":{},"interfaces/SelectField.html":{},"interfaces/SensorObj.html":{},"components/ShowAllTestsResultComponent.html":{},"classes/TestChamber.html":{},"injectables/TestChamberService.html":{},"interfaces/TestChannel.html":{},"interfaces/TestChannelDeepChannel.html":{},"interfaces/TestFormat.html":{},"interfaces/TestResultDocument.html":{},"interfaces/TextField.html":{},"interfaces/ToastMsg.html":{},"components/ViewCellsComponent.html":{},"components/ViewTestChambersComponent.html":{},"interfaces/_TestChamber.html":{},"interfaces/_TestResultDeep.html":{},"interfaces/_TestResultLight.html":{}}}],["object",{"_index":1744,"title":{},"body":{"components/FootNavComponent.html":{},"interfaces/Test.html":{},"miscellaneous/variables.html":{}}}],["objectid",{"_index":1989,"title":{},"body":{"classes/TestChamber.html":{},"interfaces/_TestChamber.html":{}}}],["observable",{"_index":663,"title":{},"body":{"guards/AuthGuard.html":{},"components/HeadNavComponent.html":{},"injectables/TestChamberService.html":{},"injectables/UserService.html":{},"interfaces/_User.html":{},"interfaces/_UserLight.html":{}}}],["observable,throwerror",{"_index":1548,"title":{},"body":{"injectables/DeviceDataService.html":{}}}],["observe",{"_index":2071,"title":{},"body":{"injectables/TestChamberService.html":{}}}],["occured",{"_index":1706,"title":{},"body":{"components/EditCellsComponent.html":{},"components/EditTestChamberComponent.html":{}}}],["of(\"inserted",{"_index":1838,"title":{},"body":{"components/HeadNavComponent.html":{}}}],["of(\"inset",{"_index":1839,"title":{},"body":{"components/HeadNavComponent.html":{}}}],["of('exists",{"_index":1833,"title":{},"body":{"components/HeadNavComponent.html":{}}}],["of(null",{"_index":1840,"title":{},"body":{"components/HeadNavComponent.html":{}}}],["offers",{"_index":2094,"title":{},"body":{"components/TestChambersComponent.html":{}}}],["offline",{"_index":2302,"title":{},"body":{"components/ViewTestChambersComponent.html":{}}}],["ok",{"_index":1710,"title":{},"body":{"components/EditCellsComponent.html":{},"components/EditTestChamberComponent.html":{}}}],["ol",{"_index":1493,"title":{},"body":{"components/DashboardComponent.html":{}}}],["once",{"_index":1358,"title":{},"body":{"interfaces/Charts.html":{},"components/EditCellsComponent.html":{},"components/EditTestChamberComponent.html":{}}}],["onclickchild(event",{"_index":1223,"title":{},"body":{"interfaces/Charts.html":{}}}],["onclickparent(event",{"_index":1226,"title":{},"body":{"interfaces/Charts.html":{}}}],["ondestroy",{"_index":99,"title":{},"body":{"components/AddCellsComponent.html":{},"components/AddTestChamberComponent.html":{},"components/BatteryTestComponent.html":{},"interfaces/BreadCrumbs.html":{},"components/CellsComponent.html":{},"interfaces/Charts.html":{},"components/DashboardComponent.html":{},"components/DeviceDataComponent.html":{},"components/EditCellsComponent.html":{},"components/EditTestChamberComponent.html":{},"components/HeadNavComponent.html":{},"components/ShowAllTestsResultComponent.html":{},"components/TestChambersComponent.html":{},"components/ViewCellsComponent.html":{},"components/ViewTestChambersComponent.html":{}}}],["one",{"_index":1702,"title":{},"body":{"components/EditCellsComponent.html":{},"components/EditTestChamberComponent.html":{}}}],["onfinish",{"_index":402,"title":{},"body":{"classes/Anim.html":{},"classes/Dot.html":{},"components/HomeComponent.html":{}}}],["ongoing",{"_index":733,"title":{},"body":{"components/BatteryTestComponent.html":{}}}],["oninit",{"_index":98,"title":{},"body":{"components/AddCellsComponent.html":{},"classes/Anim.html":{},"components/AppComponent.html":{},"components/BatteryTestComponent.html":{},"interfaces/BreadCrumbs.html":{},"components/CellsComponent.html":{},"interfaces/Charts.html":{},"components/DashboardComponent.html":{},"components/DeviceDataComponent.html":{},"components/DevicesDefaultComponent.html":{},"components/DocsComponent.html":{},"classes/Dot.html":{},"components/EditCellsComponent.html":{},"components/EditTestChamberComponent.html":{},"components/FootNavComponent.html":{},"components/HeadNavComponent.html":{},"components/HomeComponent.html":{},"components/NoResultComponent.html":{},"components/ShowAllTestsResultComponent.html":{},"components/TestChambersComponent.html":{},"components/ViewCellsComponent.html":{},"components/ViewTestChambersComponent.html":{}}}],["online",{"_index":1456,"title":{},"body":{"components/DashboardComponent.html":{},"components/ViewTestChambersComponent.html":{}}}],["onrows",{"_index":1115,"title":{},"body":{"interfaces/Channel.html":{},"interfaces/MeasuredParameters.html":{},"interfaces/QuickResponseMeasurement.html":{},"interfaces/RowInfo.html":{},"interfaces/SensorObj.html":{},"interfaces/TestChannel.html":{},"interfaces/TestChannelDeepChannel.html":{},"interfaces/TestResultDocument.html":{},"interfaces/_TestResultDeep.html":{},"interfaces/_TestResultLight.html":{}}}],["opera",{"_index":321,"title":{},"body":{"components/AddCellsComponent.html":{},"components/AddTestChamberComponent.html":{},"components/EditCellsComponent.html":{},"components/EditTestChamberComponent.html":{}}}],["option",{"_index":2067,"title":{},"body":{"injectables/TestChamberService.html":{}}}],["optional",{"_index":106,"title":{},"body":{"components/AddCellsComponent.html":{},"components/AddTestChamberComponent.html":{},"classes/Anim.html":{},"components/AppComponent.html":{},"guards/AuthGuard.html":{},"components/BatteryTestComponent.html":{},"interfaces/BreadCrumbs.html":{},"interfaces/Cell.html":{},"classes/CellClass.html":{},"injectables/CellService.html":{},"interfaces/CellTemplate.html":{},"components/CellsComponent.html":{},"interfaces/Channel.html":{},"interfaces/Charts.html":{},"injectables/ComponentStoreService.html":{},"components/DashboardComponent.html":{},"components/DeviceDataComponent.html":{},"injectables/DeviceDataService.html":{},"components/DevicesDefaultComponent.html":{},"classes/Dot.html":{},"interfaces/DriveCycle.html":{},"components/EditCellsComponent.html":{},"components/EditTestChamberComponent.html":{},"components/HeadNavComponent.html":{},"components/HomeComponent.html":{},"interfaces/MeasuredParameters.html":{},"interfaces/RowInfo.html":{},"components/ShowAllTestsResultComponent.html":{},"interfaces/Test.html":{},"classes/TestChamber.html":{},"injectables/TestChamberService.html":{},"components/TestChambersComponent.html":{},"interfaces/TestChannel.html":{},"interfaces/TestChannelDeepChannel.html":{},"injectables/TestDataService.html":{},"injectables/TestService.html":{},"interfaces/ToastMsg.html":{},"injectables/UserService.html":{},"components/ViewCellsComponent.html":{},"components/ViewTestChambersComponent.html":{},"interfaces/_TestChamber.html":{},"interfaces/_TestResultDeep.html":{},"interfaces/_TestResultLight.html":{},"interfaces/_User.html":{},"interfaces/_UserLight.html":{}}}],["options",{"_index":1010,"title":{},"body":{"components/CellsComponent.html":{},"interfaces/ChannelFields.html":{},"interfaces/FileField.html":{},"interfaces/InputField.html":{},"interfaces/PayLoad.html":{},"interfaces/SelectField.html":{},"interfaces/TestFormat.html":{},"interfaces/TextField.html":{},"miscellaneous/variables.html":{}}}],["organize",{"_index":989,"title":{},"body":{"components/CellsComponent.html":{}}}],["organizing",{"_index":1012,"title":{},"body":{"components/CellsComponent.html":{}}}],["origin",{"_index":1801,"title":{},"body":{"components/FootNavComponent.html":{},"components/HeadNavComponent.html":{}}}],["os",{"_index":1677,"title":{},"body":{"components/EditCellsComponent.html":{},"components/EditTestChamberComponent.html":{}}}],["os$.subscribe((cell_",{"_index":1683,"title":{},"body":{"components/EditCellsComponent.html":{}}}],["os$.subscribe((chambers",{"_index":1727,"title":{},"body":{"components/EditTestChamberComponent.html":{}}}],["os$.subscribe((testinfo",{"_index":1341,"title":{},"body":{"interfaces/Charts.html":{}}}],["os$.subscribe(msg",{"_index":1841,"title":{},"body":{"components/HeadNavComponent.html":{}}}],["os$:observable",{"_index":1824,"title":{},"body":{"components/HeadNavComponent.html":{}}}],["otherwise",{"_index":1994,"title":{},"body":{"classes/TestChamber.html":{},"interfaces/_TestChamber.html":{}}}],["out",{"_index":484,"title":{},"body":{"classes/Anim.html":{},"modules/AppModule.html":{},"modules/BatteryPacksModule.html":{},"modules/BatteryTestModule.html":{},"modules/CellsModule.html":{},"classes/Dot.html":{},"components/HeadNavComponent.html":{},"components/HomeComponent.html":{},"injectables/TestChamberService.html":{},"modules/TestChambersModule.html":{},"index.html":{},"overview.html":{}}}],["outer",{"_index":324,"title":{},"body":{"components/AddCellsComponent.html":{},"components/AddTestChamberComponent.html":{},"components/EditCellsComponent.html":{},"components/EditTestChamberComponent.html":{}}}],["overall",{"_index":1454,"title":{},"body":{"components/DashboardComponent.html":{}}}],["overallrowmultiplier",{"_index":1150,"title":{},"body":{"interfaces/ChannelFields.html":{},"interfaces/FileField.html":{},"interfaces/InputField.html":{},"interfaces/PayLoad.html":{},"interfaces/SelectField.html":{},"interfaces/TestFormat.html":{},"interfaces/TextField.html":{}}}],["overflow",{"_index":1062,"title":{},"body":{"components/CellsComponent.html":{},"components/DevicesDefaultComponent.html":{},"components/TestChambersComponent.html":{}}}],["overview",{"_index":2406,"title":{"overview.html":{}},"body":{"index.html":{},"overview.html":{}}}],["p",{"_index":428,"title":{},"body":{"classes/Anim.html":{},"classes/Dot.html":{},"components/HomeComponent.html":{}}}],["p.y",{"_index":433,"title":{},"body":{"classes/Anim.html":{},"classes/Dot.html":{},"components/HomeComponent.html":{}}}],["pack",{"_index":19,"title":{},"body":{"components/AddBatteryPackComponent.html":{},"interfaces/BreadCrumbs.html":{},"components/DashboardComponent.html":{},"components/DevicesDefaultComponent.html":{},"components/EditBatteryPackComponent.html":{},"components/HomeComponent.html":{}}}],["pack'},{'name",{"_index":38,"title":{},"body":{"components/AddBatteryPackComponent.html":{},"components/AddCellsComponent.html":{},"components/AddTestChamberComponent.html":{},"components/AppComponent.html":{},"components/BatteryPacksComponent.html":{},"components/BatteryTestComponent.html":{},"components/CellsComponent.html":{},"components/DashboardComponent.html":{},"components/DeviceDataComponent.html":{},"components/DevicesComponent.html":{},"components/DevicesDefaultComponent.html":{},"components/DocsComponent.html":{},"components/EditBatteryPackComponent.html":{},"components/EditCellsComponent.html":{},"components/EditTestChamberComponent.html":{},"components/FootNavComponent.html":{},"components/HeadNavComponent.html":{},"components/HomeComponent.html":{},"components/NoResultComponent.html":{},"components/ShowAllTestsResultComponent.html":{},"components/TestChambersComponent.html":{},"components/ViewBatteryPacksComponent.html":{},"components/ViewCellsComponent.html":{},"components/ViewTestChambersComponent.html":{}}}],["pack.component",{"_index":693,"title":{},"body":{"modules/BatteryPacksModule.html":{},"modules/BatteryPacksRoutingModule.html":{}}}],["pack.component.css",{"_index":21,"title":{},"body":{"components/AddBatteryPackComponent.html":{},"components/EditBatteryPackComponent.html":{}}}],["pack.component.html",{"_index":23,"title":{},"body":{"components/AddBatteryPackComponent.html":{},"components/EditBatteryPackComponent.html":{}}}],["pack.component.ts",{"_index":14,"title":{},"body":{"components/AddBatteryPackComponent.html":{},"components/EditBatteryPackComponent.html":{},"coverage.html":{}}}],["pack.png",{"_index":1637,"title":{},"body":{"components/DevicesDefaultComponent.html":{}}}],["pack/add",{"_index":13,"title":{},"body":{"components/AddBatteryPackComponent.html":{},"modules/BatteryPacksModule.html":{},"modules/BatteryPacksRoutingModule.html":{},"coverage.html":{}}}],["pack/edit",{"_index":692,"title":{},"body":{"modules/BatteryPacksModule.html":{},"modules/BatteryPacksRoutingModule.html":{},"components/EditBatteryPackComponent.html":{},"coverage.html":{}}}],["pack:hover",{"_index":1476,"title":{},"body":{"components/DashboardComponent.html":{}}}],["package",{"_index":2349,"title":{"dependencies.html":{},"properties.html":{}},"body":{"index.html":{}}}],["packcondition",{"_index":1519,"title":{},"body":{"interfaces/DeviceDataLight.html":{}}}],["packcondition:'poor'|'moderate'|'good",{"_index":1539,"title":{},"body":{"interfaces/DeviceDataLight.html":{}}}],["packcurrent",{"_index":1520,"title":{},"body":{"interfaces/DeviceDataLight.html":{}}}],["packcurrent:number",{"_index":1536,"title":{},"body":{"interfaces/DeviceDataLight.html":{}}}],["packs",{"_index":633,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/BatteryPacksComponent.html":{},"modules/BatteryPacksModule.html":{},"modules/BatteryPacksRoutingModule.html":{},"components/DevicesDefaultComponent.html":{},"components/HeadNavComponent.html":{},"components/ViewBatteryPacksComponent.html":{}}}],["packs'},{'name",{"_index":47,"title":{},"body":{"components/AddBatteryPackComponent.html":{},"components/AddCellsComponent.html":{},"components/AddTestChamberComponent.html":{},"components/AppComponent.html":{},"components/BatteryPacksComponent.html":{},"components/BatteryTestComponent.html":{},"components/CellsComponent.html":{},"components/DashboardComponent.html":{},"components/DeviceDataComponent.html":{},"components/DevicesComponent.html":{},"components/DevicesDefaultComponent.html":{},"components/DocsComponent.html":{},"components/EditBatteryPackComponent.html":{},"components/EditCellsComponent.html":{},"components/EditTestChamberComponent.html":{},"components/FootNavComponent.html":{},"components/HeadNavComponent.html":{},"components/HomeComponent.html":{},"components/NoResultComponent.html":{},"components/ShowAllTestsResultComponent.html":{},"components/TestChambersComponent.html":{},"components/ViewBatteryPacksComponent.html":{},"components/ViewCellsComponent.html":{},"components/ViewTestChambersComponent.html":{}}}],["packs.component",{"_index":689,"title":{},"body":{"modules/BatteryPacksModule.html":{},"modules/BatteryPacksRoutingModule.html":{}}}],["packs.component.css",{"_index":678,"title":{},"body":{"components/BatteryPacksComponent.html":{},"components/ViewBatteryPacksComponent.html":{}}}],["packs.component.html",{"_index":679,"title":{},"body":{"components/BatteryPacksComponent.html":{},"components/ViewBatteryPacksComponent.html":{}}}],["packs.component.ts",{"_index":677,"title":{},"body":{"components/BatteryPacksComponent.html":{},"components/ViewBatteryPacksComponent.html":{},"coverage.html":{}}}],["packs.module').then",{"_index":636,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["packs.module.ts",{"_index":686,"title":{},"body":{"modules/BatteryPacksModule.html":{}}}],["packs/add",{"_index":11,"title":{},"body":{"components/AddBatteryPackComponent.html":{},"modules/BatteryPacksModule.html":{},"modules/BatteryPacksRoutingModule.html":{},"coverage.html":{}}}],["packs/battery",{"_index":635,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/BatteryPacksComponent.html":{},"modules/BatteryPacksModule.html":{},"modules/BatteryPacksRoutingModule.html":{},"coverage.html":{}}}],["packs/edit",{"_index":691,"title":{},"body":{"modules/BatteryPacksModule.html":{},"modules/BatteryPacksRoutingModule.html":{},"components/EditBatteryPackComponent.html":{},"coverage.html":{}}}],["packs/view",{"_index":690,"title":{},"body":{"modules/BatteryPacksModule.html":{},"modules/BatteryPacksRoutingModule.html":{},"components/ViewBatteryPacksComponent.html":{},"coverage.html":{}}}],["packvoltage",{"_index":1521,"title":{},"body":{"interfaces/DeviceDataLight.html":{}}}],["packvoltage:number",{"_index":1535,"title":{},"body":{"interfaces/DeviceDataLight.html":{}}}],["padding",{"_index":1039,"title":{},"body":{"components/CellsComponent.html":{},"components/DashboardComponent.html":{},"components/FootNavComponent.html":{},"components/HomeComponent.html":{},"components/TestChambersComponent.html":{},"components/ViewCellsComponent.html":{},"components/ViewTestChambersComponent.html":{}}}],["page",{"_index":974,"title":{},"body":{"components/CellsComponent.html":{},"components/ShowAllTestsResultComponent.html":{},"components/ViewCellsComponent.html":{},"components/ViewTestChambersComponent.html":{},"index.html":{}}}],["pages",{"_index":1001,"title":{},"body":{"components/CellsComponent.html":{}}}],["pagesize",{"_index":1922,"title":{},"body":{"components/ShowAllTestsResultComponent.html":{},"components/ViewCellsComponent.html":{},"components/ViewTestChambersComponent.html":{}}}],["papaparse",{"_index":2368,"title":{},"body":{"dependencies.html":{}}}],["parameters",{"_index":133,"title":{},"body":{"components/AddCellsComponent.html":{},"components/AddTestChamberComponent.html":{},"classes/Anim.html":{},"components/AppComponent.html":{},"guards/AuthGuard.html":{},"components/BatteryTestComponent.html":{},"classes/CellClass.html":{},"injectables/CellService.html":{},"components/CellsComponent.html":{},"injectables/ComponentStoreService.html":{},"components/DashboardComponent.html":{},"components/DeviceDataComponent.html":{},"injectables/DeviceDataService.html":{},"components/DevicesDefaultComponent.html":{},"classes/Dot.html":{},"components/EditCellsComponent.html":{},"components/EditTestChamberComponent.html":{},"components/HeadNavComponent.html":{},"components/HomeComponent.html":{},"components/ShowAllTestsResultComponent.html":{},"classes/TestChamber.html":{},"injectables/TestChamberService.html":{},"components/TestChambersComponent.html":{},"injectables/TestDataService.html":{},"injectables/TestService.html":{},"injectables/UserService.html":{},"components/ViewCellsComponent.html":{},"components/ViewTestChambersComponent.html":{}}}],["params",{"_index":936,"title":{},"body":{"injectables/CellService.html":{},"injectables/TestChamberService.html":{},"injectables/UserService.html":{},"interfaces/_User.html":{},"interfaces/_UserLight.html":{}}}],["params.get('cellid",{"_index":1681,"title":{},"body":{"components/EditCellsComponent.html":{}}}],["params.get('chamberid",{"_index":1338,"title":{},"body":{"interfaces/Charts.html":{},"components/EditTestChamberComponent.html":{}}}],["params.get('deviceid",{"_index":1512,"title":{},"body":{"components/DeviceDataComponent.html":{}}}],["params.get('testid",{"_index":1337,"title":{},"body":{"interfaces/Charts.html":{}}}],["params.set('cellid",{"_index":941,"title":{},"body":{"injectables/CellService.html":{}}}],["params.set('chamberid",{"_index":2047,"title":{},"body":{"injectables/TestChamberService.html":{}}}],["params.set('delay",{"_index":2061,"title":{},"body":{"injectables/TestChamberService.html":{}}}],["params.set('searchstr",{"_index":937,"title":{},"body":{"injectables/CellService.html":{}}}],["params.set('testid",{"_index":2059,"title":{},"body":{"injectables/TestChamberService.html":{}}}],["parent",{"_index":825,"title":{},"body":{"interfaces/BreadCrumbs.html":{},"components/DashboardComponent.html":{}}}],["parsed",{"_index":1992,"title":{},"body":{"classes/TestChamber.html":{},"interfaces/_TestChamber.html":{}}}],["particular",{"_index":808,"title":{},"body":{"interfaces/BreadCrumbs.html":{},"components/DashboardComponent.html":{}}}],["path",{"_index":625,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/BatteryPacksRoutingModule.html":{},"modules/BatteryTestRoutingModule.html":{},"modules/CellsRoutingModule.html":{},"interfaces/Charts.html":{},"modules/TestChambersRoutingModule.html":{}}}],["path.indexof('view",{"_index":1368,"title":{},"body":{"interfaces/Charts.html":{}}}],["path_1",{"_index":458,"title":{},"body":{"classes/Anim.html":{},"classes/Dot.html":{},"components/HomeComponent.html":{}}}],["path_2",{"_index":464,"title":{},"body":{"classes/Anim.html":{},"classes/Dot.html":{},"components/HomeComponent.html":{}}}],["path_3",{"_index":470,"title":{},"body":{"classes/Anim.html":{},"classes/Dot.html":{},"components/HomeComponent.html":{}}}],["path_4",{"_index":476,"title":{},"body":{"classes/Anim.html":{},"classes/Dot.html":{},"components/HomeComponent.html":{}}}],["pathmatch",{"_index":644,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["patterns",{"_index":996,"title":{},"body":{"components/CellsComponent.html":{}}}],["pause",{"_index":1381,"title":{},"body":{"interfaces/Charts.html":{}}}],["paused",{"_index":1103,"title":{},"body":{"interfaces/Channel.html":{},"interfaces/MeasuredParameters.html":{},"interfaces/QuickResponseMeasurement.html":{},"interfaces/RowInfo.html":{},"interfaces/SensorObj.html":{},"interfaces/Test.html":{},"interfaces/TestChannel.html":{},"interfaces/TestChannelDeepChannel.html":{},"interfaces/TestResultDocument.html":{},"interfaces/_TestResultDeep.html":{},"interfaces/_TestResultLight.html":{}}}],["pay",{"_index":1376,"title":{},"body":{"interfaces/Charts.html":{},"components/ViewTestChambersComponent.html":{}}}],["pay.isconnected",{"_index":1378,"title":{},"body":{"interfaces/Charts.html":{},"components/ViewTestChambersComponent.html":{}}}],["payload",{"_index":916,"title":{"interfaces/PayLoad.html":{}},"body":{"injectables/CellService.html":{},"interfaces/Channel.html":{},"interfaces/ChannelFields.html":{},"interfaces/FileField.html":{},"interfaces/InputField.html":{},"interfaces/MeasuredParameters.html":{},"interfaces/PayLoad.html":{},"interfaces/QuickResponseMeasurement.html":{},"interfaces/RowInfo.html":{},"interfaces/SelectField.html":{},"interfaces/SensorObj.html":{},"interfaces/Test.html":{},"interfaces/TestChannel.html":{},"interfaces/TestChannelDeepChannel.html":{},"interfaces/TestFormat.html":{},"interfaces/TestResultDocument.html":{},"interfaces/TextField.html":{},"interfaces/_TestResultDeep.html":{},"interfaces/_TestResultLight.html":{},"coverage.html":{}}}],["perforiming",{"_index":298,"title":{},"body":{"components/AddCellsComponent.html":{},"components/EditCellsComponent.html":{}}}],["perform",{"_index":932,"title":{},"body":{"injectables/CellService.html":{},"components/HomeComponent.html":{},"components/TestChambersComponent.html":{}}}],["performance",{"_index":1601,"title":{},"body":{"components/DevicesDefaultComponent.html":{},"components/TestChambersComponent.html":{}}}],["performing",{"_index":1759,"title":{},"body":{"components/FootNavComponent.html":{}}}],["physical",{"_index":260,"title":{},"body":{"components/AddCellsComponent.html":{},"components/AddTestChamberComponent.html":{},"components/EditCellsComponent.html":{},"components/EditTestChamberComponent.html":{}}}],["picture",{"_index":1809,"title":{},"body":{"components/FootNavComponent.html":{},"components/HeadNavComponent.html":{}}}],["picture:hover",{"_index":1866,"title":{},"body":{"components/HeadNavComponent.html":{}}}],["pipe(catcherror(this.errorhandler",{"_index":2074,"title":{},"body":{"injectables/TestChamberService.html":{},"injectables/UserService.html":{},"interfaces/_User.html":{},"interfaces/_UserLight.html":{}}}],["pipe(retry(2",{"_index":940,"title":{},"body":{"injectables/CellService.html":{}}}],["pipe(retry(3",{"_index":931,"title":{},"body":{"injectables/CellService.html":{},"injectables/TestChamberService.html":{},"injectables/UserService.html":{},"interfaces/_User.html":{},"interfaces/_UserLight.html":{}}}],["pipe(share",{"_index":927,"title":{},"body":{"injectables/CellService.html":{},"injectables/TestChamberService.html":{},"injectables/UserService.html":{},"interfaces/_User.html":{},"interfaces/_UserLight.html":{}}}],["place",{"_index":1709,"title":{},"body":{"components/EditCellsComponent.html":{}}}],["placeholdermsg",{"_index":2202,"title":{},"body":{"components/ViewCellsComponent.html":{},"components/ViewTestChambersComponent.html":{}}}],["platform",{"_index":1758,"title":{},"body":{"components/FootNavComponent.html":{},"index.html":{}}}],["play",{"_index":1379,"title":{},"body":{"interfaces/Charts.html":{}}}],["pogress",{"_index":1498,"title":{},"body":{"components/DashboardComponent.html":{}}}],["pointer",{"_index":754,"title":{},"body":{"components/BatteryTestComponent.html":{},"components/DashboardComponent.html":{},"components/DevicesDefaultComponent.html":{},"components/EditCellsComponent.html":{},"components/EditTestChamberComponent.html":{},"components/HeadNavComponent.html":{},"components/ShowAllTestsResultComponent.html":{},"components/ViewCellsComponent.html":{},"components/ViewTestChambersComponent.html":{}}}],["poor",{"_index":1528,"title":{},"body":{"interfaces/DeviceDataLight.html":{}}}],["popperjs/core",{"_index":2359,"title":{},"body":{"dependencies.html":{}}}],["populate",{"_index":119,"title":{},"body":{"components/AddCellsComponent.html":{},"components/EditCellsComponent.html":{}}}],["position",{"_index":541,"title":{},"body":{"components/AppComponent.html":{},"components/CellsComponent.html":{},"components/DevicesDefaultComponent.html":{},"components/FootNavComponent.html":{},"components/HeadNavComponent.html":{},"components/HomeComponent.html":{},"components/TestChambersComponent.html":{}}}],["position:relative",{"_index":1495,"title":{},"body":{"components/DashboardComponent.html":{}}}],["position:sticky",{"_index":1496,"title":{},"body":{"components/DashboardComponent.html":{}}}],["post",{"_index":2064,"title":{},"body":{"injectables/TestChamberService.html":{}}}],["post(`${environment.apiuri}/api/protected/assign/users",{"_index":2198,"title":{},"body":{"injectables/UserService.html":{},"interfaces/_User.html":{},"interfaces/_UserLight.html":{}}}],["post(`${environment.apiuri}/api/protected/cell/cell",{"_index":930,"title":{},"body":{"injectables/CellService.html":{}}}],["post(`${environment.apiuri}/api/protected/test",{"_index":2051,"title":{},"body":{"injectables/TestChamberService.html":{}}}],["post(`${environment.apiuri}/api/users",{"_index":2197,"title":{},"body":{"injectables/UserService.html":{},"interfaces/_User.html":{},"interfaces/_UserLight.html":{}}}],["pouch",{"_index":1605,"title":{},"body":{"components/DevicesDefaultComponent.html":{}}}],["pouch,cyclindrical,prismatic",{"_index":962,"title":{},"body":{"interfaces/CellTemplate.html":{}}}],["power",{"_index":1652,"title":{},"body":{"interfaces/DriveCycle.html":{},"components/HomeComponent.html":{}}}],["power?:number",{"_index":1655,"title":{},"body":{"interfaces/DriveCycle.html":{}}}],["powerful",{"_index":2115,"title":{},"body":{"components/TestChambersComponent.html":{}}}],["present",{"_index":1993,"title":{},"body":{"classes/TestChamber.html":{},"interfaces/_TestChamber.html":{}}}],["presetn",{"_index":869,"title":{},"body":{"interfaces/Cell.html":{},"classes/CellClass.html":{}}}],["prevmeasurements",{"_index":1298,"title":{},"body":{"interfaces/Charts.html":{}}}],["prevmeasurements.celltemp?.find",{"_index":1317,"title":{},"body":{"interfaces/Charts.html":{}}}],["prevmeasurements.celltemp?.foreach((tempobj",{"_index":1334,"title":{},"body":{"interfaces/Charts.html":{}}}],["prevmeasurements.celltemp?.push(tempobjnew",{"_index":1320,"title":{},"body":{"interfaces/Charts.html":{}}}],["prevmeasurements.chamberhum?.push(...newmeasurements.chamberhum",{"_index":1308,"title":{},"body":{"interfaces/Charts.html":{}}}],["prevmeasurements.chambertemp?.push(...newmeasurements.chambertemp",{"_index":1311,"title":{},"body":{"interfaces/Charts.html":{}}}],["prevmeasurements.current?.push(...newmeasurements.current",{"_index":1302,"title":{},"body":{"interfaces/Charts.html":{}}}],["prevmeasurements.time",{"_index":1322,"title":{},"body":{"interfaces/Charts.html":{}}}],["prevmeasurements.time.length",{"_index":1323,"title":{},"body":{"interfaces/Charts.html":{}}}],["prevmeasurements.time?.push(...newmeasurements.time",{"_index":1314,"title":{},"body":{"interfaces/Charts.html":{}}}],["prevmeasurements.voltage?.push(...newmeasurements.voltage",{"_index":1305,"title":{},"body":{"interfaces/Charts.html":{}}}],["primary",{"_index":1040,"title":{},"body":{"components/CellsComponent.html":{},"components/TestChambersComponent.html":{}}}],["prismatic",{"_index":1606,"title":{},"body":{"components/DevicesDefaultComponent.html":{}}}],["private",{"_index":171,"title":{},"body":{"components/AddCellsComponent.html":{},"components/AddTestChamberComponent.html":{},"components/AppComponent.html":{},"components/BatteryTestComponent.html":{},"interfaces/BreadCrumbs.html":{},"injectables/CellService.html":{},"components/CellsComponent.html":{},"interfaces/Charts.html":{},"injectables/ComponentStoreService.html":{},"components/DashboardComponent.html":{},"injectables/DeviceDataService.html":{},"components/EditCellsComponent.html":{},"components/EditTestChamberComponent.html":{},"components/HeadNavComponent.html":{},"components/ShowAllTestsResultComponent.html":{},"injectables/TestChamberService.html":{},"injectables/TestDataService.html":{},"injectables/UserService.html":{},"components/ViewTestChambersComponent.html":{},"interfaces/_User.html":{},"interfaces/_UserLight.html":{}}}],["process",{"_index":1004,"title":{},"body":{"components/CellsComponent.html":{},"components/TestChambersComponent.html":{}}}],["prod",{"_index":489,"title":{},"body":{"classes/Anim.html":{},"components/BatteryTestComponent.html":{},"components/CellsComponent.html":{},"components/DevicesDefaultComponent.html":{},"classes/Dot.html":{},"components/HomeComponent.html":{},"components/ShowAllTestsResultComponent.html":{}}}],["produce",{"_index":380,"title":{},"body":{"components/AddTestChamberComponent.html":{},"components/EditTestChamberComponent.html":{}}}],["product",{"_index":2128,"title":{},"body":{"components/TestChambersComponent.html":{}}}],["production",{"_index":2421,"title":{},"body":{"miscellaneous/variables.html":{}}}],["profile",{"_index":1847,"title":{},"body":{"components/HeadNavComponent.html":{}}}],["profile:active",{"_index":1872,"title":{},"body":{"components/HeadNavComponent.html":{}}}],["programming",{"_index":1615,"title":{},"body":{"components/DevicesDefaultComponent.html":{}}}],["progress",{"_index":592,"title":{},"body":{"modules/AppModule.html":{},"components/BatteryTestComponent.html":{},"components/TestChambersComponent.html":{},"dependencies.html":{}}}],["project",{"_index":2376,"title":{},"body":{"index.html":{}}}],["properties",{"_index":104,"title":{"properties.html":{}},"body":{"components/AddCellsComponent.html":{},"components/AddTestChamberComponent.html":{},"classes/Anim.html":{},"components/AppComponent.html":{},"components/BatteryTestComponent.html":{},"interfaces/BreadCrumbs.html":{},"interfaces/Cell.html":{},"classes/CellClass.html":{},"interfaces/CellTemplate.html":{},"components/CellsComponent.html":{},"interfaces/Channel.html":{},"interfaces/ChannelFields.html":{},"interfaces/Charts.html":{},"injectables/ComponentStoreService.html":{},"components/DashboardComponent.html":{},"components/DeviceDataComponent.html":{},"interfaces/DeviceDataLight.html":{},"components/DevicesDefaultComponent.html":{},"classes/Dot.html":{},"interfaces/DriveCycle.html":{},"components/EditCellsComponent.html":{},"components/EditTestChamberComponent.html":{},"interfaces/FileField.html":{},"components/FootNavComponent.html":{},"components/HeadNavComponent.html":{},"components/HomeComponent.html":{},"interfaces/InputField.html":{},"interfaces/MeasuredParameters.html":{},"interfaces/PayLoad.html":{},"interfaces/QuickResponseMeasurement.html":{},"interfaces/RowInfo.html":{},"interfaces/SelectField.html":{},"interfaces/SensorObj.html":{},"components/ShowAllTestsResultComponent.html":{},"interfaces/Test.html":{},"classes/TestChamber.html":{},"components/TestChambersComponent.html":{},"interfaces/TestChannel.html":{},"interfaces/TestChannelDeepChannel.html":{},"interfaces/TestFormat.html":{},"interfaces/TestResultDocument.html":{},"interfaces/TextField.html":{},"interfaces/ToastMsg.html":{},"components/ViewCellsComponent.html":{},"components/ViewTestChambersComponent.html":{},"interfaces/_TestChamber.html":{},"interfaces/_TestResultDeep.html":{},"interfaces/_TestResultLight.html":{},"interfaces/_User.html":{},"interfaces/_UserLight.html":{},"properties.html":{}}}],["provide",{"_index":613,"title":{},"body":{"modules/AppModule.html":{},"components/DevicesDefaultComponent.html":{},"components/TestChambersComponent.html":{}}}],["providedin",{"_index":668,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/CellService.html":{},"injectables/ComponentStoreService.html":{},"injectables/DeviceDataService.html":{},"injectables/TestChamberService.html":{},"injectables/TestDataService.html":{},"injectables/TestService.html":{},"injectables/UserService.html":{},"interfaces/_User.html":{},"interfaces/_UserLight.html":{}}}],["providers",{"_index":612,"title":{},"body":{"modules/AppModule.html":{}}}],["provides",{"_index":975,"title":{},"body":{"components/CellsComponent.html":{}}}],["public",{"_index":398,"title":{},"body":{"classes/Anim.html":{},"interfaces/Cell.html":{},"classes/CellClass.html":{},"injectables/ComponentStoreService.html":{},"classes/Dot.html":{},"components/HomeComponent.html":{},"classes/TestChamber.html":{},"interfaces/_TestChamber.html":{}}}],["pulse",{"_index":1893,"title":{},"body":{"components/HomeComponent.html":{}}}],["push",{"_index":1423,"title":{},"body":{"injectables/ComponentStoreService.html":{}}}],["pushing",{"_index":1420,"title":{},"body":{"injectables/ComponentStoreService.html":{}}}],["put",{"_index":425,"title":{},"body":{"classes/Anim.html":{},"classes/Dot.html":{},"components/HomeComponent.html":{}}}],["put(`${environment.apiuri}/api/protected/cell/cell",{"_index":942,"title":{},"body":{"injectables/CellService.html":{}}}],["put(`${environment.apiuri}/api/protected/test",{"_index":2053,"title":{},"body":{"injectables/TestChamberService.html":{}}}],["qparrams",{"_index":2193,"title":{},"body":{"injectables/UserService.html":{},"interfaces/_User.html":{},"interfaces/_UserLight.html":{}}}],["qparrams.append('sub",{"_index":2194,"title":{},"body":{"injectables/UserService.html":{},"interfaces/_User.html":{},"interfaces/_UserLight.html":{}}}],["quantity",{"_index":270,"title":{},"body":{"components/AddCellsComponent.html":{},"components/ViewCellsComponent.html":{}}}],["querylist",{"_index":1187,"title":{},"body":{"interfaces/Charts.html":{}}}],["quickresponsemeasurement",{"_index":1143,"title":{"interfaces/QuickResponseMeasurement.html":{}},"body":{"interfaces/Channel.html":{},"interfaces/Charts.html":{},"interfaces/MeasuredParameters.html":{},"interfaces/QuickResponseMeasurement.html":{},"interfaces/RowInfo.html":{},"interfaces/SensorObj.html":{},"interfaces/TestChannel.html":{},"interfaces/TestChannelDeepChannel.html":{},"interfaces/TestResultDocument.html":{},"interfaces/_TestResultDeep.html":{},"interfaces/_TestResultLight.html":{},"coverage.html":{}}}],["quickresponses",{"_index":1198,"title":{},"body":{"interfaces/Charts.html":{}}}],["radius",{"_index":1463,"title":{},"body":{"components/DashboardComponent.html":{},"components/DevicesDefaultComponent.html":{},"components/FootNavComponent.html":{},"components/HeadNavComponent.html":{},"components/ViewCellsComponent.html":{},"components/ViewTestChambersComponent.html":{}}}],["range",{"_index":2133,"title":{},"body":{"components/TestChambersComponent.html":{}}}],["rating(v",{"_index":295,"title":{},"body":{"components/AddCellsComponent.html":{},"components/EditCellsComponent.html":{}}}],["read",{"_index":356,"title":{},"body":{"components/AddTestChamberComponent.html":{},"interfaces/Channel.html":{},"components/EditCellsComponent.html":{},"components/EditTestChamberComponent.html":{},"interfaces/MeasuredParameters.html":{},"interfaces/QuickResponseMeasurement.html":{},"interfaces/RowInfo.html":{},"interfaces/SensorObj.html":{},"classes/TestChamber.html":{},"interfaces/TestChannel.html":{},"interfaces/TestChannelDeepChannel.html":{},"interfaces/TestResultDocument.html":{},"injectables/UserService.html":{},"interfaces/_TestChamber.html":{},"interfaces/_TestResultDeep.html":{},"interfaces/_TestResultLight.html":{},"interfaces/_User.html":{},"interfaces/_UserLight.html":{}}}],["reason",{"_index":1370,"title":{},"body":{"interfaces/Charts.html":{},"components/EditCellsComponent.html":{},"components/EditTestChamberComponent.html":{}}}],["record",{"_index":373,"title":{},"body":{"components/AddTestChamberComponent.html":{},"components/EditTestChamberComponent.html":{}}}],["records",{"_index":273,"title":{},"body":{"components/AddCellsComponent.html":{},"components/CellsComponent.html":{}}}],["red",{"_index":231,"title":{},"body":{"components/AddCellsComponent.html":{},"components/AddTestChamberComponent.html":{},"components/DashboardComponent.html":{},"components/DevicesDefaultComponent.html":{},"components/EditCellsComponent.html":{},"components/EditTestChamberComponent.html":{},"components/HomeComponent.html":{},"components/ViewCellsComponent.html":{},"components/ViewTestChambersComponent.html":{}}}],["redirectto",{"_index":643,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["redirecturi",{"_index":2426,"title":{},"body":{"miscellaneous/variables.html":{}}}],["reference",{"_index":2407,"title":{},"body":{"index.html":{}}}],["reflect",{"_index":1392,"title":{},"body":{"interfaces/Charts.html":{}}}],["regular",{"_index":1783,"title":{},"body":{"components/FootNavComponent.html":{}}}],["rejected",{"_index":950,"title":{},"body":{"injectables/CellService.html":{},"injectables/DeviceDataService.html":{},"injectables/TestChamberService.html":{},"injectables/TestDataService.html":{},"injectables/UserService.html":{},"interfaces/_User.html":{},"interfaces/_UserLight.html":{}}}],["related",{"_index":1357,"title":{},"body":{"interfaces/Charts.html":{}}}],["relative",{"_index":1061,"title":{},"body":{"components/CellsComponent.html":{},"components/FootNavComponent.html":{},"components/TestChambersComponent.html":{}}}],["relativeto",{"_index":223,"title":{},"body":{"components/AddCellsComponent.html":{},"components/AddTestChamberComponent.html":{},"interfaces/Charts.html":{},"components/EditCellsComponent.html":{},"components/EditTestChamberComponent.html":{}}}],["reload",{"_index":2386,"title":{},"body":{"index.html":{}}}],["remindex",{"_index":245,"title":{},"body":{"components/AddCellsComponent.html":{},"components/AddTestChamberComponent.html":{},"components/EditCellsComponent.html":{},"components/EditTestChamberComponent.html":{}}}],["remote",{"_index":2098,"title":{},"body":{"components/TestChambersComponent.html":{}}}],["remove",{"_index":241,"title":{},"body":{"components/AddCellsComponent.html":{},"components/AddTestChamberComponent.html":{},"components/EditCellsComponent.html":{},"components/EditTestChamberComponent.html":{}}}],["repeat",{"_index":1020,"title":{},"body":{"components/CellsComponent.html":{},"components/DevicesDefaultComponent.html":{},"components/FootNavComponent.html":{},"components/HeadNavComponent.html":{},"components/HomeComponent.html":{},"components/TestChambersComponent.html":{}}}],["request",{"_index":951,"title":{},"body":{"injectables/CellService.html":{},"injectables/DeviceDataService.html":{},"injectables/TestChamberService.html":{},"injectables/TestDataService.html":{},"injectables/UserService.html":{},"interfaces/_User.html":{},"interfaces/_UserLight.html":{}}}],["requestanimationframe",{"_index":438,"title":{},"body":{"classes/Anim.html":{},"classes/Dot.html":{},"components/HomeComponent.html":{}}}],["required",{"_index":315,"title":{},"body":{"components/AddCellsComponent.html":{},"components/AddTestChamberComponent.html":{},"components/EditCellsComponent.html":{},"components/EditTestChamberComponent.html":{}}}],["res",{"_index":1232,"title":{},"body":{"interfaces/Charts.html":{},"components/EditCellsComponent.html":{},"components/EditTestChamberComponent.html":{}}}],["res.acknowledged",{"_index":1388,"title":{},"body":{"interfaces/Charts.html":{}}}],["res.channelno",{"_index":1233,"title":{},"body":{"interfaces/Charts.html":{}}}],["reset",{"_index":561,"title":{},"body":{"modules/AppModule.html":{},"modules/BatteryPacksModule.html":{},"modules/BatteryTestModule.html":{},"modules/CellsModule.html":{},"modules/TestChambersModule.html":{},"overview.html":{}}}],["resize",{"_index":313,"title":{},"body":{"components/AddCellsComponent.html":{},"components/AddTestChamberComponent.html":{},"components/EditCellsComponent.html":{},"components/EditTestChamberComponent.html":{}}}],["response",{"_index":2072,"title":{},"body":{"injectables/TestChamberService.html":{}}}],["response.headers.get",{"_index":1403,"title":{},"body":{"interfaces/Charts.html":{}}}],["responsetype",{"_index":2070,"title":{},"body":{"injectables/TestChamberService.html":{}}}],["rest",{"_index":1166,"title":{},"body":{"interfaces/ChannelFields.html":{},"interfaces/FileField.html":{},"interfaces/InputField.html":{},"interfaces/PayLoad.html":{},"interfaces/SelectField.html":{},"interfaces/TestFormat.html":{},"interfaces/TextField.html":{},"miscellaneous/variables.html":{}}}],["restart",{"_index":446,"title":{},"body":{"classes/Anim.html":{},"classes/Dot.html":{},"components/HomeComponent.html":{}}}],["result",{"_index":992,"title":{},"body":{"components/CellsComponent.html":{},"interfaces/Charts.html":{},"components/EditCellsComponent.html":{},"components/EditTestChamberComponent.html":{},"components/NoResultComponent.html":{},"components/ShowAllTestsResultComponent.html":{},"injectables/TestChamberService.html":{}}}],["result'},{'name",{"_index":78,"title":{},"body":{"components/AddBatteryPackComponent.html":{},"components/AddCellsComponent.html":{},"components/AddTestChamberComponent.html":{},"components/AppComponent.html":{},"components/BatteryPacksComponent.html":{},"components/BatteryTestComponent.html":{},"components/CellsComponent.html":{},"components/DashboardComponent.html":{},"components/DeviceDataComponent.html":{},"components/DevicesComponent.html":{},"components/DevicesDefaultComponent.html":{},"components/DocsComponent.html":{},"components/EditBatteryPackComponent.html":{},"components/EditCellsComponent.html":{},"components/EditTestChamberComponent.html":{},"components/FootNavComponent.html":{},"components/HeadNavComponent.html":{},"components/HomeComponent.html":{},"components/NoResultComponent.html":{},"components/ShowAllTestsResultComponent.html":{},"components/TestChambersComponent.html":{},"components/ViewBatteryPacksComponent.html":{},"components/ViewCellsComponent.html":{},"components/ViewTestChambersComponent.html":{}}}],["result.component",{"_index":775,"title":{},"body":{"modules/BatteryTestModule.html":{},"modules/BatteryTestRoutingModule.html":{}}}],["result.component.css",{"_index":1194,"title":{},"body":{"interfaces/Charts.html":{},"components/NoResultComponent.html":{},"components/ShowAllTestsResultComponent.html":{}}}],["result.component.html",{"_index":1193,"title":{},"body":{"interfaces/Charts.html":{},"components/NoResultComponent.html":{},"components/ShowAllTestsResultComponent.html":{}}}],["result.component.ts",{"_index":1177,"title":{},"body":{"interfaces/Charts.html":{},"components/NoResultComponent.html":{},"components/ShowAllTestsResultComponent.html":{},"coverage.html":{}}}],["result.component.ts:12",{"_index":1912,"title":{},"body":{"components/NoResultComponent.html":{}}}],["result.component.ts:13",{"_index":1937,"title":{},"body":{"components/ShowAllTestsResultComponent.html":{}}}],["result.component.ts:14",{"_index":1932,"title":{},"body":{"components/ShowAllTestsResultComponent.html":{}}}],["result.component.ts:15",{"_index":1931,"title":{},"body":{"components/ShowAllTestsResultComponent.html":{}}}],["result.component.ts:16",{"_index":1935,"title":{},"body":{"components/ShowAllTestsResultComponent.html":{}}}],["result.component.ts:17",{"_index":1934,"title":{},"body":{"components/ShowAllTestsResultComponent.html":{}}}],["result.component.ts:18",{"_index":1936,"title":{},"body":{"components/ShowAllTestsResultComponent.html":{}}}],["result.component.ts:19",{"_index":1933,"title":{},"body":{"components/ShowAllTestsResultComponent.html":{}}}],["result.component.ts:20",{"_index":1930,"title":{},"body":{"components/ShowAllTestsResultComponent.html":{}}}],["result.component.ts:21",{"_index":1925,"title":{},"body":{"components/ShowAllTestsResultComponent.html":{}}}],["result.component.ts:28",{"_index":1929,"title":{},"body":{"components/ShowAllTestsResultComponent.html":{}}}],["result.component.ts:50",{"_index":1927,"title":{},"body":{"components/ShowAllTestsResultComponent.html":{}}}],["result.component.ts:67",{"_index":1928,"title":{},"body":{"components/ShowAllTestsResultComponent.html":{}}}],["result.component.ts:74",{"_index":1926,"title":{},"body":{"components/ShowAllTestsResultComponent.html":{}}}],["result.component.ts:8",{"_index":1911,"title":{},"body":{"components/NoResultComponent.html":{}}}],["result.then",{"_index":1363,"title":{},"body":{"interfaces/Charts.html":{},"components/EditCellsComponent.html":{},"components/EditTestChamberComponent.html":{}}}],["result/no",{"_index":777,"title":{},"body":{"modules/BatteryTestModule.html":{},"components/NoResultComponent.html":{},"coverage.html":{}}}],["result/show",{"_index":774,"title":{},"body":{"modules/BatteryTestModule.html":{},"modules/BatteryTestRoutingModule.html":{},"interfaces/Charts.html":{},"components/ShowAllTestsResultComponent.html":{},"coverage.html":{}}}],["results",{"_index":92,"title":{},"body":{"components/AddBatteryPackComponent.html":{},"components/AddCellsComponent.html":{},"components/AddTestChamberComponent.html":{},"classes/Anim.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"components/BatteryPacksComponent.html":{},"modules/BatteryPacksModule.html":{},"modules/BatteryPacksRoutingModule.html":{},"components/BatteryTestComponent.html":{},"modules/BatteryTestModule.html":{},"modules/BatteryTestRoutingModule.html":{},"interfaces/BreadCrumbs.html":{},"interfaces/Cell.html":{},"classes/CellClass.html":{},"injectables/CellService.html":{},"interfaces/CellTemplate.html":{},"components/CellsComponent.html":{},"modules/CellsModule.html":{},"modules/CellsRoutingModule.html":{},"interfaces/Channel.html":{},"interfaces/ChannelFields.html":{},"interfaces/Charts.html":{},"injectables/ComponentStoreService.html":{},"components/DashboardComponent.html":{},"components/DeviceDataComponent.html":{},"interfaces/DeviceDataLight.html":{},"injectables/DeviceDataService.html":{},"components/DevicesComponent.html":{},"components/DevicesDefaultComponent.html":{},"components/DocsComponent.html":{},"classes/Dot.html":{},"interfaces/DriveCycle.html":{},"components/EditBatteryPackComponent.html":{},"components/EditCellsComponent.html":{},"components/EditTestChamberComponent.html":{},"interfaces/FileField.html":{},"components/FootNavComponent.html":{},"components/HeadNavComponent.html":{},"components/HomeComponent.html":{},"interfaces/InputField.html":{},"interfaces/MeasuredParameters.html":{},"components/NoResultComponent.html":{},"interfaces/PayLoad.html":{},"interfaces/QuickResponseMeasurement.html":{},"interfaces/RowInfo.html":{},"interfaces/SelectField.html":{},"interfaces/SensorObj.html":{},"modules/SharedModule.html":{},"components/ShowAllTestsResultComponent.html":{},"interfaces/Test.html":{},"classes/TestChamber.html":{},"injectables/TestChamberService.html":{},"components/TestChambersComponent.html":{},"modules/TestChambersModule.html":{},"modules/TestChambersRoutingModule.html":{},"interfaces/TestChannel.html":{},"interfaces/TestChannelDeepChannel.html":{},"injectables/TestDataService.html":{},"interfaces/TestFormat.html":{},"interfaces/TestResultDocument.html":{},"injectables/TestService.html":{},"interfaces/TextField.html":{},"interfaces/ToastMsg.html":{},"injectables/UserService.html":{},"components/ViewBatteryPacksComponent.html":{},"components/ViewCellsComponent.html":{},"components/ViewTestChambersComponent.html":{},"interfaces/_TestChamber.html":{},"interfaces/_TestResultDeep.html":{},"interfaces/_TestResultLight.html":{},"interfaces/_User.html":{},"interfaces/_UserLight.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["retrieve",{"_index":1360,"title":{},"body":{"interfaces/Charts.html":{}}}],["retry",{"_index":920,"title":{},"body":{"injectables/CellService.html":{},"injectables/TestChamberService.html":{},"injectables/UserService.html":{},"interfaces/_User.html":{},"interfaces/_UserLight.html":{}}}],["retry(3",{"_index":928,"title":{},"body":{"injectables/CellService.html":{},"injectables/TestChamberService.html":{},"injectables/UserService.html":{},"interfaces/_User.html":{},"interfaces/_UserLight.html":{}}}],["retry,catcherror",{"_index":1549,"title":{},"body":{"injectables/DeviceDataService.html":{}}}],["return",{"_index":669,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/CellService.html":{},"interfaces/Charts.html":{},"injectables/DeviceDataService.html":{},"components/EditCellsComponent.html":{},"components/EditTestChamberComponent.html":{},"components/HeadNavComponent.html":{},"components/ShowAllTestsResultComponent.html":{},"injectables/TestChamberService.html":{},"injectables/TestDataService.html":{},"injectables/TestService.html":{},"injectables/UserService.html":{},"components/ViewCellsComponent.html":{},"components/ViewTestChambersComponent.html":{},"interfaces/_User.html":{},"interfaces/_UserLight.html":{}}}],["returns",{"_index":142,"title":{},"body":{"components/AddCellsComponent.html":{},"components/AddTestChamberComponent.html":{},"classes/Anim.html":{},"components/AppComponent.html":{},"guards/AuthGuard.html":{},"components/BatteryTestComponent.html":{},"injectables/CellService.html":{},"components/CellsComponent.html":{},"injectables/ComponentStoreService.html":{},"components/DashboardComponent.html":{},"components/DeviceDataComponent.html":{},"injectables/DeviceDataService.html":{},"components/DevicesDefaultComponent.html":{},"components/DocsComponent.html":{},"classes/Dot.html":{},"components/EditCellsComponent.html":{},"components/EditTestChamberComponent.html":{},"components/FootNavComponent.html":{},"components/HeadNavComponent.html":{},"components/HomeComponent.html":{},"components/NoResultComponent.html":{},"components/ShowAllTestsResultComponent.html":{},"injectables/TestChamberService.html":{},"components/TestChambersComponent.html":{},"injectables/TestDataService.html":{},"injectables/TestService.html":{},"injectables/UserService.html":{},"components/ViewCellsComponent.html":{},"components/ViewTestChambersComponent.html":{}}}],["rgb(0",{"_index":1041,"title":{},"body":{"components/CellsComponent.html":{},"components/TestChambersComponent.html":{}}}],["rgb(36",{"_index":1856,"title":{},"body":{"components/HeadNavComponent.html":{}}}],["rgb(38",{"_index":1805,"title":{},"body":{"components/FootNavComponent.html":{}}}],["rgb(46",{"_index":1861,"title":{},"body":{"components/HeadNavComponent.html":{}}}],["rgb(48",{"_index":2318,"title":{},"body":{"components/ViewTestChambersComponent.html":{}}}],["rgb(6",{"_index":1789,"title":{},"body":{"components/FootNavComponent.html":{}}}],["rgb(63",{"_index":1793,"title":{},"body":{"components/FootNavComponent.html":{}}}],["rgb(7",{"_index":1796,"title":{},"body":{"components/FootNavComponent.html":{}}}],["rgba(0",{"_index":1073,"title":{},"body":{"components/CellsComponent.html":{},"components/DashboardComponent.html":{},"components/HeadNavComponent.html":{},"components/TestChambersComponent.html":{}}}],["rgba(10",{"_index":1477,"title":{},"body":{"components/DashboardComponent.html":{}}}],["rgba(11",{"_index":1467,"title":{},"body":{"components/DashboardComponent.html":{}}}],["rgba(119",{"_index":1776,"title":{},"body":{"components/FootNavComponent.html":{}}}],["rgba(128",{"_index":1633,"title":{},"body":{"components/DevicesDefaultComponent.html":{},"components/ViewCellsComponent.html":{},"components/ViewTestChambersComponent.html":{}}}],["rgba(173",{"_index":1470,"title":{},"body":{"components/DashboardComponent.html":{}}}],["rgba(181",{"_index":1490,"title":{},"body":{"components/DashboardComponent.html":{}}}],["rgba(255",{"_index":1070,"title":{},"body":{"components/CellsComponent.html":{},"components/TestChambersComponent.html":{}}}],["rgba(33",{"_index":1027,"title":{},"body":{"components/CellsComponent.html":{},"components/TestChambersComponent.html":{}}}],["rgba(36",{"_index":1859,"title":{},"body":{"components/HeadNavComponent.html":{}}}],["rgba(38",{"_index":1626,"title":{},"body":{"components/DevicesDefaultComponent.html":{}}}],["rgba(85",{"_index":756,"title":{},"body":{"components/BatteryTestComponent.html":{}}}],["right",{"_index":546,"title":{},"body":{"components/AppComponent.html":{},"components/CellsComponent.html":{},"components/DashboardComponent.html":{},"components/TestChambersComponent.html":{},"components/ViewCellsComponent.html":{},"components/ViewTestChambersComponent.html":{}}}],["role",{"_index":1748,"title":{},"body":{"components/FootNavComponent.html":{}}}],["root",{"_index":491,"title":{},"body":{"components/AppComponent.html":{},"guards/AuthGuard.html":{},"injectables/CellService.html":{},"injectables/ComponentStoreService.html":{},"injectables/DeviceDataService.html":{},"injectables/TestChamberService.html":{},"injectables/TestDataService.html":{},"injectables/TestService.html":{},"injectables/UserService.html":{},"interfaces/_User.html":{},"interfaces/_UserLight.html":{}}}],["root'},{'name",{"_index":45,"title":{},"body":{"components/AddBatteryPackComponent.html":{},"components/AddCellsComponent.html":{},"components/AddTestChamberComponent.html":{},"components/AppComponent.html":{},"components/BatteryPacksComponent.html":{},"components/BatteryTestComponent.html":{},"components/CellsComponent.html":{},"components/DashboardComponent.html":{},"components/DeviceDataComponent.html":{},"components/DevicesComponent.html":{},"components/DevicesDefaultComponent.html":{},"components/DocsComponent.html":{},"components/EditBatteryPackComponent.html":{},"components/EditCellsComponent.html":{},"components/EditTestChamberComponent.html":{},"components/FootNavComponent.html":{},"components/HeadNavComponent.html":{},"components/HomeComponent.html":{},"components/NoResultComponent.html":{},"components/ShowAllTestsResultComponent.html":{},"components/TestChambersComponent.html":{},"components/ViewBatteryPacksComponent.html":{},"components/ViewCellsComponent.html":{},"components/ViewTestChambersComponent.html":{}}}],["rotate(0deg",{"_index":1854,"title":{},"body":{"components/HeadNavComponent.html":{}}}],["rotate(360deg",{"_index":1855,"title":{},"body":{"components/HeadNavComponent.html":{}}}],["rotation",{"_index":1850,"title":{},"body":{"components/HeadNavComponent.html":{}}}],["route",{"_index":129,"title":{},"body":{"components/AddCellsComponent.html":{},"components/AddTestChamberComponent.html":{},"guards/AuthGuard.html":{},"interfaces/Charts.html":{},"components/DeviceDataComponent.html":{},"components/EditCellsComponent.html":{},"components/EditTestChamberComponent.html":{}}}],["router",{"_index":128,"title":{},"body":{"components/AddCellsComponent.html":{},"components/AddTestChamberComponent.html":{},"components/BatteryTestComponent.html":{},"interfaces/BreadCrumbs.html":{},"components/CellsComponent.html":{},"interfaces/Charts.html":{},"components/DashboardComponent.html":{},"components/EditCellsComponent.html":{},"components/EditTestChamberComponent.html":{}}}],["router:router",{"_index":814,"title":{},"body":{"interfaces/BreadCrumbs.html":{},"components/DashboardComponent.html":{}}}],["routermodule",{"_index":621,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/BatteryPacksRoutingModule.html":{},"modules/BatteryTestModule.html":{},"modules/BatteryTestRoutingModule.html":{},"modules/CellsRoutingModule.html":{},"modules/TestChambersRoutingModule.html":{}}}],["routermodule.forchild(routes",{"_index":694,"title":{},"body":{"modules/BatteryPacksRoutingModule.html":{},"modules/BatteryTestRoutingModule.html":{},"modules/CellsRoutingModule.html":{},"modules/TestChambersRoutingModule.html":{}}}],["routermodule.forroot(routes",{"_index":649,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["routerstatesnapshot",{"_index":661,"title":{},"body":{"guards/AuthGuard.html":{}}}],["routes",{"_index":622,"title":{"routes.html":{}},"body":{"modules/AppRoutingModule.html":{},"modules/BatteryPacksRoutingModule.html":{},"modules/BatteryTestRoutingModule.html":{},"modules/CellsRoutingModule.html":{},"modules/TestChambersRoutingModule.html":{},"overview.html":{},"routes.html":{}}}],["routing.module",{"_index":575,"title":{},"body":{"modules/AppModule.html":{},"modules/BatteryPacksModule.html":{},"modules/BatteryTestModule.html":{},"modules/CellsModule.html":{},"modules/TestChambersModule.html":{}}}],["routing.module.ts",{"_index":617,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/BatteryPacksRoutingModule.html":{},"modules/BatteryTestRoutingModule.html":{},"modules/CellsRoutingModule.html":{},"modules/TestChambersRoutingModule.html":{}}}],["row",{"_index":309,"title":{},"body":{"components/AddCellsComponent.html":{},"components/AddTestChamberComponent.html":{},"components/EditCellsComponent.html":{},"components/EditTestChamberComponent.html":{},"components/FootNavComponent.html":{},"components/HomeComponent.html":{},"components/ViewCellsComponent.html":{},"components/ViewTestChambersComponent.html":{}}}],["rowenddate",{"_index":1141,"title":{},"body":{"interfaces/Channel.html":{},"interfaces/MeasuredParameters.html":{},"interfaces/QuickResponseMeasurement.html":{},"interfaces/RowInfo.html":{},"interfaces/SensorObj.html":{},"interfaces/TestChannel.html":{},"interfaces/TestChannelDeepChannel.html":{},"interfaces/TestResultDocument.html":{},"interfaces/_TestResultDeep.html":{},"interfaces/_TestResultLight.html":{}}}],["rowinfo",{"_index":1099,"title":{"interfaces/RowInfo.html":{}},"body":{"interfaces/Channel.html":{},"interfaces/MeasuredParameters.html":{},"interfaces/QuickResponseMeasurement.html":{},"interfaces/RowInfo.html":{},"interfaces/SensorObj.html":{},"interfaces/TestChannel.html":{},"interfaces/TestChannelDeepChannel.html":{},"interfaces/TestResultDocument.html":{},"interfaces/_TestResultDeep.html":{},"interfaces/_TestResultLight.html":{},"coverage.html":{}}}],["rowmultiplier",{"_index":1119,"title":{},"body":{"interfaces/Channel.html":{},"interfaces/MeasuredParameters.html":{},"interfaces/QuickResponseMeasurement.html":{},"interfaces/RowInfo.html":{},"interfaces/SensorObj.html":{},"interfaces/TestChannel.html":{},"interfaces/TestChannelDeepChannel.html":{},"interfaces/TestResultDocument.html":{},"interfaces/_TestResultDeep.html":{},"interfaces/_TestResultLight.html":{}}}],["rowmultiplierindex",{"_index":1118,"title":{},"body":{"interfaces/Channel.html":{},"interfaces/MeasuredParameters.html":{},"interfaces/QuickResponseMeasurement.html":{},"interfaces/RowInfo.html":{},"interfaces/SensorObj.html":{},"interfaces/TestChannel.html":{},"interfaces/TestChannelDeepChannel.html":{},"interfaces/TestResultDocument.html":{},"interfaces/_TestResultDeep.html":{},"interfaces/_TestResultLight.html":{}}}],["rowno",{"_index":1138,"title":{},"body":{"interfaces/Channel.html":{},"interfaces/MeasuredParameters.html":{},"interfaces/QuickResponseMeasurement.html":{},"interfaces/RowInfo.html":{},"interfaces/SensorObj.html":{},"interfaces/TestChannel.html":{},"interfaces/TestChannelDeepChannel.html":{},"interfaces/TestResultDocument.html":{},"interfaces/_TestResultDeep.html":{},"interfaces/_TestResultLight.html":{}}}],["rows",{"_index":1098,"title":{},"body":{"interfaces/Channel.html":{},"interfaces/MeasuredParameters.html":{},"interfaces/QuickResponseMeasurement.html":{},"interfaces/RowInfo.html":{},"interfaces/SensorObj.html":{},"interfaces/TestChannel.html":{},"interfaces/TestChannelDeepChannel.html":{},"interfaces/TestResultDocument.html":{},"interfaces/_TestResultDeep.html":{},"interfaces/_TestResultLight.html":{}}}],["rowstartdate",{"_index":1140,"title":{},"body":{"interfaces/Channel.html":{},"interfaces/MeasuredParameters.html":{},"interfaces/QuickResponseMeasurement.html":{},"interfaces/RowInfo.html":{},"interfaces/SensorObj.html":{},"interfaces/TestChannel.html":{},"interfaces/TestChannelDeepChannel.html":{},"interfaces/TestResultDocument.html":{},"interfaces/_TestResultDeep.html":{},"interfaces/_TestResultLight.html":{}}}],["run",{"_index":403,"title":{},"body":{"classes/Anim.html":{},"interfaces/ChannelFields.html":{},"classes/Dot.html":{},"interfaces/FileField.html":{},"components/HomeComponent.html":{},"interfaces/InputField.html":{},"interfaces/PayLoad.html":{},"interfaces/SelectField.html":{},"interfaces/TestFormat.html":{},"interfaces/TextField.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["running",{"_index":736,"title":{},"body":{"components/BatteryTestComponent.html":{},"interfaces/Channel.html":{},"interfaces/Charts.html":{},"interfaces/MeasuredParameters.html":{},"interfaces/QuickResponseMeasurement.html":{},"interfaces/RowInfo.html":{},"interfaces/SensorObj.html":{},"interfaces/Test.html":{},"interfaces/TestChannel.html":{},"interfaces/TestChannelDeepChannel.html":{},"interfaces/TestResultDocument.html":{},"interfaces/_TestResultDeep.html":{},"interfaces/_TestResultLight.html":{},"index.html":{}}}],["rxjs",{"_index":169,"title":{},"body":{"components/AddCellsComponent.html":{},"components/AddTestChamberComponent.html":{},"guards/AuthGuard.html":{},"components/BatteryTestComponent.html":{},"interfaces/BreadCrumbs.html":{},"injectables/CellService.html":{},"components/CellsComponent.html":{},"interfaces/Charts.html":{},"injectables/ComponentStoreService.html":{},"components/DashboardComponent.html":{},"components/DeviceDataComponent.html":{},"injectables/DeviceDataService.html":{},"components/EditCellsComponent.html":{},"components/EditTestChamberComponent.html":{},"components/HeadNavComponent.html":{},"components/ShowAllTestsResultComponent.html":{},"injectables/TestChamberService.html":{},"components/TestChambersComponent.html":{},"injectables/TestDataService.html":{},"injectables/UserService.html":{},"components/ViewCellsComponent.html":{},"components/ViewTestChambersComponent.html":{},"interfaces/_User.html":{},"interfaces/_UserLight.html":{},"dependencies.html":{}}}],["rxjs/operators",{"_index":667,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/CellService.html":{},"injectables/DeviceDataService.html":{},"injectables/TestChamberService.html":{},"injectables/TestDataService.html":{},"injectables/UserService.html":{},"interfaces/_User.html":{},"interfaces/_UserLight.html":{}}}],["safari",{"_index":319,"title":{},"body":{"components/AddCellsComponent.html":{},"components/AddTestChamberComponent.html":{},"components/EditCellsComponent.html":{},"components/EditTestChamberComponent.html":{}}}],["samanta",{"_index":1750,"title":{},"body":{"components/FootNavComponent.html":{}}}],["sampledata(data",{"_index":1336,"title":{},"body":{"interfaces/Charts.html":{}}}],["sampling",{"_index":1325,"title":{},"body":{"interfaces/Charts.html":{}}}],["samplingrate",{"_index":1327,"title":{},"body":{"interfaces/Charts.html":{}}}],["sans",{"_index":1618,"title":{},"body":{"components/DevicesDefaultComponent.html":{}}}],["save",{"_index":120,"title":{},"body":{"components/AddCellsComponent.html":{},"components/AddTestChamberComponent.html":{},"components/EditCellsComponent.html":{},"components/EditTestChamberComponent.html":{}}}],["saveas",{"_index":1183,"title":{},"body":{"interfaces/Charts.html":{}}}],["saveas(url",{"_index":1408,"title":{},"body":{"interfaces/Charts.html":{}}}],["saver",{"_index":1184,"title":{},"body":{"interfaces/Charts.html":{},"dependencies.html":{}}}],["scaffolding",{"_index":2389,"title":{},"body":{"index.html":{}}}],["scale(0",{"_index":1799,"title":{},"body":{"components/FootNavComponent.html":{}}}],["scale(1",{"_index":1803,"title":{},"body":{"components/FootNavComponent.html":{}}}],["scale(1.01",{"_index":1639,"title":{},"body":{"components/DevicesDefaultComponent.html":{}}}],["scalelabel",{"_index":1257,"title":{},"body":{"interfaces/Charts.html":{}}}],["scales",{"_index":1255,"title":{},"body":{"interfaces/Charts.html":{}}}],["schedule",{"_index":444,"title":{},"body":{"classes/Anim.html":{},"classes/Dot.html":{},"components/HomeComponent.html":{}}}],["scheduled",{"_index":1101,"title":{},"body":{"interfaces/Channel.html":{},"interfaces/MeasuredParameters.html":{},"interfaces/QuickResponseMeasurement.html":{},"interfaces/RowInfo.html":{},"interfaces/SensorObj.html":{},"interfaces/Test.html":{},"interfaces/TestChannel.html":{},"interfaces/TestChannelDeepChannel.html":{},"interfaces/TestResultDocument.html":{},"interfaces/_TestResultDeep.html":{},"interfaces/_TestResultLight.html":{}}}],["schema",{"_index":871,"title":{},"body":{"interfaces/Cell.html":{},"classes/CellClass.html":{}}}],["scroll",{"_index":1019,"title":{},"body":{"components/CellsComponent.html":{},"components/DevicesDefaultComponent.html":{},"components/TestChambersComponent.html":{}}}],["seamlessly",{"_index":999,"title":{},"body":{"components/CellsComponent.html":{},"components/DevicesDefaultComponent.html":{}}}],["search",{"_index":243,"title":{},"body":{"components/AddCellsComponent.html":{},"components/AddTestChamberComponent.html":{},"components/EditCellsComponent.html":{},"components/EditTestChamberComponent.html":{}}}],["searchid",{"_index":1923,"title":{},"body":{"components/ShowAllTestsResultComponent.html":{}}}],["searchstr",{"_index":141,"title":{},"body":{"components/AddCellsComponent.html":{},"components/AddTestChamberComponent.html":{},"injectables/CellService.html":{},"components/EditCellsComponent.html":{},"components/EditTestChamberComponent.html":{},"injectables/UserService.html":{},"components/ViewCellsComponent.html":{},"components/ViewTestChambersComponent.html":{},"interfaces/_User.html":{},"interfaces/_UserLight.html":{}}}],["searchstr.length",{"_index":236,"title":{},"body":{"components/AddCellsComponent.html":{},"components/AddTestChamberComponent.html":{},"components/EditCellsComponent.html":{},"components/EditTestChamberComponent.html":{}}}],["searchstr.trim",{"_index":235,"title":{},"body":{"components/AddCellsComponent.html":{},"components/AddTestChamberComponent.html":{},"components/EditCellsComponent.html":{},"components/EditTestChamberComponent.html":{}}}],["secondresponse",{"_index":1832,"title":{},"body":{"components/HeadNavComponent.html":{}}}],["seconds",{"_index":1159,"title":{},"body":{"interfaces/ChannelFields.html":{},"interfaces/FileField.html":{},"interfaces/InputField.html":{},"interfaces/PayLoad.html":{},"interfaces/SelectField.html":{},"interfaces/TestFormat.html":{},"interfaces/TextField.html":{},"miscellaneous/variables.html":{}}}],["securely",{"_index":2107,"title":{},"body":{"components/TestChambersComponent.html":{}}}],["see",{"_index":732,"title":{},"body":{"components/BatteryTestComponent.html":{},"components/CellsComponent.html":{},"components/TestChambersComponent.html":{}}}],["select",{"_index":256,"title":{},"body":{"components/AddCellsComponent.html":{},"modules/BatteryTestModule.html":{},"modules/CellsModule.html":{},"interfaces/ChannelFields.html":{},"components/EditCellsComponent.html":{},"interfaces/FileField.html":{},"interfaces/InputField.html":{},"interfaces/PayLoad.html":{},"interfaces/SelectField.html":{},"modules/TestChambersModule.html":{},"interfaces/TestFormat.html":{},"interfaces/TextField.html":{},"dependencies.html":{},"miscellaneous/variables.html":{}}}],["select/ng",{"_index":780,"title":{},"body":{"modules/BatteryTestModule.html":{},"modules/CellsModule.html":{},"modules/TestChambersModule.html":{},"dependencies.html":{}}}],["selectcell",{"_index":2204,"title":{},"body":{"components/ViewCellsComponent.html":{}}}],["selectcell(chamberid",{"_index":2206,"title":{},"body":{"components/ViewCellsComponent.html":{}}}],["selectedcell",{"_index":2203,"title":{},"body":{"components/ViewCellsComponent.html":{}}}],["selectedcell._id",{"_index":2235,"title":{},"body":{"components/ViewCellsComponent.html":{}}}],["selectedcell.batchno",{"_index":2238,"title":{},"body":{"components/ViewCellsComponent.html":{}}}],["selectedcell.cellchemistry",{"_index":2241,"title":{},"body":{"components/ViewCellsComponent.html":{}}}],["selectedcell.cellname",{"_index":2234,"title":{},"body":{"components/ViewCellsComponent.html":{}}}],["selectedcell.cellquantity",{"_index":2236,"title":{},"body":{"components/ViewCellsComponent.html":{}}}],["selectedcell.formfactor",{"_index":2240,"title":{},"body":{"components/ViewCellsComponent.html":{}}}],["selectedcell.manufacturer",{"_index":2237,"title":{},"body":{"components/ViewCellsComponent.html":{}}}],["selectedcell.maxvolt",{"_index":2245,"title":{},"body":{"components/ViewCellsComponent.html":{}}}],["selectedcell.minvolt",{"_index":2246,"title":{},"body":{"components/ViewCellsComponent.html":{}}}],["selectedcell.nomcap",{"_index":2243,"title":{},"body":{"components/ViewCellsComponent.html":{}}}],["selectedcell.nomcurr",{"_index":2244,"title":{},"body":{"components/ViewCellsComponent.html":{}}}],["selectedcell.nomvolt",{"_index":2242,"title":{},"body":{"components/ViewCellsComponent.html":{}}}],["selectedcell.type",{"_index":2239,"title":{},"body":{"components/ViewCellsComponent.html":{}}}],["selectedcelltemplate",{"_index":109,"title":{},"body":{"components/AddCellsComponent.html":{},"components/EditCellsComponent.html":{}}}],["selecteddate",{"_index":494,"title":{},"body":{"components/AppComponent.html":{}}}],["selectedtestchamber",{"_index":2257,"title":{},"body":{"components/ViewTestChambersComponent.html":{}}}],["selectedtestchamber._id",{"_index":2304,"title":{},"body":{"components/ViewTestChambersComponent.html":{}}}],["selectedtestchamber.about",{"_index":2307,"title":{},"body":{"components/ViewTestChambersComponent.html":{}}}],["selectedtestchamber.accesstype",{"_index":2313,"title":{},"body":{"components/ViewTestChambersComponent.html":{}}}],["selectedtestchamber.controller",{"_index":2305,"title":{},"body":{"components/ViewTestChambersComponent.html":{}}}],["selectedtestchamber.createdon",{"_index":2311,"title":{},"body":{"components/ViewTestChambersComponent.html":{}}}],["selectedtestchamber.location",{"_index":2310,"title":{},"body":{"components/ViewTestChambersComponent.html":{}}}],["selectedtestchamber.maxnoofchannels",{"_index":2312,"title":{},"body":{"components/ViewTestChambersComponent.html":{}}}],["selectedtestchamber.maxtemp",{"_index":2308,"title":{},"body":{"components/ViewTestChambersComponent.html":{}}}],["selectedtestchamber.mintemp",{"_index":2309,"title":{},"body":{"components/ViewTestChambersComponent.html":{}}}],["selectedtestchamber.name",{"_index":2303,"title":{},"body":{"components/ViewTestChambersComponent.html":{}}}],["selectedtestchamber.version",{"_index":2306,"title":{},"body":{"components/ViewTestChambersComponent.html":{}}}],["selecteduser",{"_index":110,"title":{},"body":{"components/AddCellsComponent.html":{},"components/AddTestChamberComponent.html":{},"components/EditCellsComponent.html":{}}}],["selectedusersread",{"_index":1657,"title":{},"body":{"components/EditCellsComponent.html":{},"components/EditTestChamberComponent.html":{}}}],["selecteduserswrite",{"_index":1658,"title":{},"body":{"components/EditCellsComponent.html":{},"components/EditTestChamberComponent.html":{}}}],["selectfield",{"_index":1153,"title":{"interfaces/SelectField.html":{}},"body":{"interfaces/ChannelFields.html":{},"interfaces/FileField.html":{},"interfaces/InputField.html":{},"interfaces/PayLoad.html":{},"interfaces/SelectField.html":{},"interfaces/TestFormat.html":{},"interfaces/TextField.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["selector",{"_index":16,"title":{},"body":{"components/AddBatteryPackComponent.html":{},"components/AddCellsComponent.html":{},"components/AddTestChamberComponent.html":{},"classes/Anim.html":{},"components/AppComponent.html":{},"components/BatteryPacksComponent.html":{},"components/BatteryTestComponent.html":{},"interfaces/BreadCrumbs.html":{},"components/CellsComponent.html":{},"interfaces/Charts.html":{},"components/DashboardComponent.html":{},"components/DeviceDataComponent.html":{},"components/DevicesComponent.html":{},"components/DevicesDefaultComponent.html":{},"components/DocsComponent.html":{},"classes/Dot.html":{},"components/EditBatteryPackComponent.html":{},"components/EditCellsComponent.html":{},"components/EditTestChamberComponent.html":{},"components/FootNavComponent.html":{},"components/HeadNavComponent.html":{},"components/HomeComponent.html":{},"components/NoResultComponent.html":{},"components/ShowAllTestsResultComponent.html":{},"components/TestChambersComponent.html":{},"components/ViewBatteryPacksComponent.html":{},"components/ViewCellsComponent.html":{},"components/ViewTestChambersComponent.html":{}}}],["selecttestchamber",{"_index":2259,"title":{},"body":{"components/ViewTestChambersComponent.html":{}}}],["selecttestchamber(chamberid",{"_index":2266,"title":{},"body":{"components/ViewTestChambersComponent.html":{}}}],["self",{"_index":1753,"title":{},"body":{"components/FootNavComponent.html":{}}}],["send",{"_index":2000,"title":{},"body":{"classes/TestChamber.html":{},"interfaces/_TestChamber.html":{}}}],["sendtoastmsg",{"_index":1413,"title":{},"body":{"injectables/ComponentStoreService.html":{}}}],["sendtoastmsg(msg",{"_index":1415,"title":{},"body":{"injectables/ComponentStoreService.html":{}}}],["sensor",{"_index":1283,"title":{},"body":{"interfaces/Charts.html":{}}}],["sensorid",{"_index":1136,"title":{},"body":{"interfaces/Channel.html":{},"interfaces/Charts.html":{},"interfaces/MeasuredParameters.html":{},"interfaces/QuickResponseMeasurement.html":{},"interfaces/RowInfo.html":{},"interfaces/SensorObj.html":{},"interfaces/TestChannel.html":{},"interfaces/TestChannelDeepChannel.html":{},"interfaces/TestResultDocument.html":{},"interfaces/_TestResultDeep.html":{},"interfaces/_TestResultLight.html":{}}}],["sensorobj",{"_index":1134,"title":{"interfaces/SensorObj.html":{}},"body":{"interfaces/Channel.html":{},"interfaces/Charts.html":{},"interfaces/MeasuredParameters.html":{},"interfaces/QuickResponseMeasurement.html":{},"interfaces/RowInfo.html":{},"interfaces/SensorObj.html":{},"interfaces/TestChannel.html":{},"interfaces/TestChannelDeepChannel.html":{},"interfaces/TestResultDocument.html":{},"interfaces/_TestResultDeep.html":{},"interfaces/_TestResultLight.html":{},"coverage.html":{}}}],["sent",{"_index":1389,"title":{},"body":{"interfaces/Charts.html":{}}}],["sequence",{"_index":272,"title":{},"body":{"components/AddCellsComponent.html":{}}}],["serif",{"_index":1619,"title":{},"body":{"components/DevicesDefaultComponent.html":{},"components/HomeComponent.html":{}}}],["serve",{"_index":2381,"title":{},"body":{"index.html":{}}}],["server",{"_index":2380,"title":{},"body":{"index.html":{}}}],["services/cell.service",{"_index":167,"title":{},"body":{"components/AddCellsComponent.html":{},"components/CellsComponent.html":{},"components/EditCellsComponent.html":{},"components/ViewCellsComponent.html":{}}}],["services/component",{"_index":164,"title":{},"body":{"components/AddCellsComponent.html":{},"components/AddTestChamberComponent.html":{},"components/AppComponent.html":{},"interfaces/BreadCrumbs.html":{},"interfaces/Charts.html":{},"components/DashboardComponent.html":{},"components/EditCellsComponent.html":{},"components/EditTestChamberComponent.html":{},"components/ViewTestChambersComponent.html":{}}}],["services/device",{"_index":790,"title":{},"body":{"interfaces/BreadCrumbs.html":{},"components/DashboardComponent.html":{}}}],["services/test",{"_index":2084,"title":{},"body":{"components/TestChambersComponent.html":{}}}],["services/test.service",{"_index":521,"title":{},"body":{"components/AppComponent.html":{}}}],["services/user.service",{"_index":166,"title":{},"body":{"components/AddCellsComponent.html":{},"components/AddTestChamberComponent.html":{},"interfaces/Cell.html":{},"classes/CellClass.html":{},"components/EditCellsComponent.html":{},"components/EditTestChamberComponent.html":{},"components/HeadNavComponent.html":{},"classes/TestChamber.html":{},"interfaces/_TestChamber.html":{}}}],["set",{"_index":391,"title":{},"body":{"components/AddTestChamberComponent.html":{},"components/EditTestChamberComponent.html":{}}}],["setinterval",{"_index":722,"title":{},"body":{"components/BatteryTestComponent.html":{},"interfaces/Charts.html":{},"components/DevicesDefaultComponent.html":{},"components/ShowAllTestsResultComponent.html":{},"components/ViewTestChambersComponent.html":{}}}],["settimeout",{"_index":447,"title":{},"body":{"classes/Anim.html":{},"components/AppComponent.html":{},"classes/Dot.html":{},"components/HomeComponent.html":{}}}],["setup",{"_index":1614,"title":{},"body":{"components/DevicesDefaultComponent.html":{}}}],["sf",{"_index":1784,"title":{},"body":{"components/FootNavComponent.html":{}}}],["sfmono",{"_index":1782,"title":{},"body":{"components/FootNavComponent.html":{}}}],["shadow",{"_index":1465,"title":{},"body":{"components/DashboardComponent.html":{},"components/DevicesDefaultComponent.html":{},"components/HeadNavComponent.html":{}}}],["shape",{"_index":279,"title":{},"body":{"components/AddCellsComponent.html":{},"components/EditCellsComponent.html":{}}}],["share",{"_index":922,"title":{},"body":{"injectables/CellService.html":{},"injectables/TestChamberService.html":{},"injectables/UserService.html":{},"interfaces/_User.html":{},"interfaces/_UserLight.html":{}}}],["shared/shared.module",{"_index":571,"title":{},"body":{"modules/AppModule.html":{},"modules/BatteryTestModule.html":{},"modules/CellsModule.html":{},"modules/TestChambersModule.html":{}}}],["sharedmodule",{"_index":559,"title":{"modules/SharedModule.html":{}},"body":{"modules/AppModule.html":{},"modules/BatteryTestModule.html":{},"modules/CellsModule.html":{},"modules/SharedModule.html":{},"modules/TestChambersModule.html":{},"modules.html":{},"overview.html":{}}}],["show",{"_index":80,"title":{},"body":{"components/AddBatteryPackComponent.html":{},"components/AddCellsComponent.html":{},"components/AddTestChamberComponent.html":{},"components/AppComponent.html":{},"components/BatteryPacksComponent.html":{},"components/BatteryTestComponent.html":{},"components/CellsComponent.html":{},"interfaces/Charts.html":{},"components/DashboardComponent.html":{},"components/DeviceDataComponent.html":{},"components/DevicesComponent.html":{},"components/DevicesDefaultComponent.html":{},"components/DocsComponent.html":{},"components/EditBatteryPackComponent.html":{},"components/EditCellsComponent.html":{},"components/EditTestChamberComponent.html":{},"components/FootNavComponent.html":{},"components/HeadNavComponent.html":{},"components/HomeComponent.html":{},"components/NoResultComponent.html":{},"components/ShowAllTestsResultComponent.html":{},"components/TestChambersComponent.html":{},"components/ViewBatteryPacksComponent.html":{},"components/ViewCellsComponent.html":{},"components/ViewTestChambersComponent.html":{}}}],["showalltestsresultcomponent",{"_index":79,"title":{"components/ShowAllTestsResultComponent.html":{}},"body":{"components/AddBatteryPackComponent.html":{},"components/AddCellsComponent.html":{},"components/AddTestChamberComponent.html":{},"components/AppComponent.html":{},"components/BatteryPacksComponent.html":{},"components/BatteryTestComponent.html":{},"modules/BatteryTestModule.html":{},"modules/BatteryTestRoutingModule.html":{},"components/CellsComponent.html":{},"components/DashboardComponent.html":{},"components/DeviceDataComponent.html":{},"components/DevicesComponent.html":{},"components/DevicesDefaultComponent.html":{},"components/DocsComponent.html":{},"components/EditBatteryPackComponent.html":{},"components/EditCellsComponent.html":{},"components/EditTestChamberComponent.html":{},"components/FootNavComponent.html":{},"components/HeadNavComponent.html":{},"components/HomeComponent.html":{},"components/NoResultComponent.html":{},"components/ShowAllTestsResultComponent.html":{},"components/TestChambersComponent.html":{},"components/ViewBatteryPacksComponent.html":{},"components/ViewCellsComponent.html":{},"components/ViewTestChambersComponent.html":{},"coverage.html":{},"overview.html":{}}}],["showchart",{"_index":1196,"title":{},"body":{"interfaces/Charts.html":{}}}],["showchartview(channelno",{"_index":1228,"title":{},"body":{"interfaces/Charts.html":{}}}],["shown",{"_index":807,"title":{},"body":{"interfaces/BreadCrumbs.html":{},"components/DashboardComponent.html":{}}}],["showspinnerbutton",{"_index":111,"title":{},"body":{"components/AddCellsComponent.html":{},"components/AddTestChamberComponent.html":{},"components/EditCellsComponent.html":{},"components/EditTestChamberComponent.html":{}}}],["showtestresultcomponent",{"_index":82,"title":{},"body":{"components/AddBatteryPackComponent.html":{},"components/AddCellsComponent.html":{},"components/AddTestChamberComponent.html":{},"components/AppComponent.html":{},"components/BatteryPacksComponent.html":{},"components/BatteryTestComponent.html":{},"modules/BatteryTestModule.html":{},"modules/BatteryTestRoutingModule.html":{},"components/CellsComponent.html":{},"interfaces/Charts.html":{},"components/DashboardComponent.html":{},"components/DeviceDataComponent.html":{},"components/DevicesComponent.html":{},"components/DevicesDefaultComponent.html":{},"components/DocsComponent.html":{},"components/EditBatteryPackComponent.html":{},"components/EditCellsComponent.html":{},"components/EditTestChamberComponent.html":{},"components/FootNavComponent.html":{},"components/HeadNavComponent.html":{},"components/HomeComponent.html":{},"components/NoResultComponent.html":{},"components/ShowAllTestsResultComponent.html":{},"components/TestChambersComponent.html":{},"components/ViewBatteryPacksComponent.html":{},"components/ViewCellsComponent.html":{},"components/ViewTestChambersComponent.html":{},"coverage.html":{},"overview.html":{}}}],["showtoast",{"_index":495,"title":{},"body":{"components/AppComponent.html":{}}}],["showtoastmsg",{"_index":501,"title":{},"body":{"components/AppComponent.html":{}}}],["showtoastmsg(msg",{"_index":511,"title":{},"body":{"components/AppComponent.html":{}}}],["simple",{"_index":976,"title":{},"body":{"components/CellsComponent.html":{}}}],["simplified",{"_index":1589,"title":{},"body":{"components/DevicesDefaultComponent.html":{}}}],["site",{"_index":2104,"title":{},"body":{"components/TestChambersComponent.html":{}}}],["size",{"_index":283,"title":{},"body":{"components/AddCellsComponent.html":{},"components/CellsComponent.html":{},"components/DashboardComponent.html":{},"components/DevicesDefaultComponent.html":{},"components/EditCellsComponent.html":{},"components/FootNavComponent.html":{},"components/HeadNavComponent.html":{},"components/HomeComponent.html":{},"components/TestChambersComponent.html":{}}}],["skiplocationchange",{"_index":225,"title":{},"body":{"components/AddCellsComponent.html":{},"components/AddTestChamberComponent.html":{},"interfaces/Charts.html":{},"components/EditCellsComponent.html":{},"components/EditTestChamberComponent.html":{}}}],["small",{"_index":1474,"title":{},"body":{"components/DashboardComponent.html":{},"components/FootNavComponent.html":{}}}],["smaller",{"_index":1475,"title":{},"body":{"components/DashboardComponent.html":{}}}],["soc",{"_index":1522,"title":{},"body":{"interfaces/DeviceDataLight.html":{}}}],["soc:number",{"_index":1533,"title":{},"body":{"interfaces/DeviceDataLight.html":{}}}],["social",{"_index":1765,"title":{},"body":{"components/FootNavComponent.html":{}}}],["software",{"_index":2119,"title":{},"body":{"components/TestChambersComponent.html":{}}}],["soh",{"_index":1523,"title":{},"body":{"interfaces/DeviceDataLight.html":{}}}],["soh:number",{"_index":1534,"title":{},"body":{"interfaces/DeviceDataLight.html":{}}}],["solid",{"_index":1461,"title":{},"body":{"components/DashboardComponent.html":{},"components/DevicesDefaultComponent.html":{},"components/FootNavComponent.html":{},"components/ViewCellsComponent.html":{},"components/ViewTestChambersComponent.html":{}}}],["solution",{"_index":2091,"title":{},"body":{"components/TestChambersComponent.html":{}}}],["something",{"_index":946,"title":{},"body":{"injectables/CellService.html":{},"components/EditCellsComponent.html":{},"components/EditTestChamberComponent.html":{},"injectables/TestChamberService.html":{},"injectables/UserService.html":{},"components/ViewCellsComponent.html":{},"components/ViewTestChambersComponent.html":{},"interfaces/_User.html":{},"interfaces/_UserLight.html":{}}}],["soon",{"_index":30,"title":{},"body":{"components/AddBatteryPackComponent.html":{},"components/BatteryPacksComponent.html":{},"components/EditBatteryPackComponent.html":{},"components/ViewBatteryPacksComponent.html":{}}}],["source",{"_index":4,"title":{},"body":{"components/AddBatteryPackComponent.html":{},"components/AddCellsComponent.html":{},"components/AddTestChamberComponent.html":{},"classes/Anim.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"components/BatteryPacksComponent.html":{},"modules/BatteryPacksModule.html":{},"modules/BatteryPacksRoutingModule.html":{},"components/BatteryTestComponent.html":{},"modules/BatteryTestModule.html":{},"modules/BatteryTestRoutingModule.html":{},"interfaces/BreadCrumbs.html":{},"interfaces/Cell.html":{},"classes/CellClass.html":{},"injectables/CellService.html":{},"interfaces/CellTemplate.html":{},"components/CellsComponent.html":{},"modules/CellsModule.html":{},"modules/CellsRoutingModule.html":{},"interfaces/Channel.html":{},"interfaces/ChannelFields.html":{},"interfaces/Charts.html":{},"injectables/ComponentStoreService.html":{},"components/DashboardComponent.html":{},"components/DeviceDataComponent.html":{},"interfaces/DeviceDataLight.html":{},"injectables/DeviceDataService.html":{},"components/DevicesComponent.html":{},"components/DevicesDefaultComponent.html":{},"components/DocsComponent.html":{},"classes/Dot.html":{},"interfaces/DriveCycle.html":{},"components/EditBatteryPackComponent.html":{},"components/EditCellsComponent.html":{},"components/EditTestChamberComponent.html":{},"interfaces/FileField.html":{},"components/FootNavComponent.html":{},"components/HeadNavComponent.html":{},"components/HomeComponent.html":{},"interfaces/InputField.html":{},"interfaces/MeasuredParameters.html":{},"components/NoResultComponent.html":{},"interfaces/PayLoad.html":{},"interfaces/QuickResponseMeasurement.html":{},"interfaces/RowInfo.html":{},"interfaces/SelectField.html":{},"interfaces/SensorObj.html":{},"modules/SharedModule.html":{},"components/ShowAllTestsResultComponent.html":{},"interfaces/Test.html":{},"classes/TestChamber.html":{},"injectables/TestChamberService.html":{},"components/TestChambersComponent.html":{},"modules/TestChambersModule.html":{},"modules/TestChambersRoutingModule.html":{},"interfaces/TestChannel.html":{},"interfaces/TestChannelDeepChannel.html":{},"injectables/TestDataService.html":{},"interfaces/TestFormat.html":{},"interfaces/TestResultDocument.html":{},"injectables/TestService.html":{},"interfaces/TextField.html":{},"interfaces/ToastMsg.html":{},"injectables/UserService.html":{},"components/ViewBatteryPacksComponent.html":{},"components/ViewCellsComponent.html":{},"components/ViewTestChambersComponent.html":{},"interfaces/_TestChamber.html":{},"interfaces/_TestResultDeep.html":{},"interfaces/_TestResultLight.html":{},"interfaces/_User.html":{},"interfaces/_UserLight.html":{},"index.html":{}}}],["spacing",{"_index":1059,"title":{},"body":{"components/CellsComponent.html":{},"components/TestChambersComponent.html":{}}}],["span",{"_index":1023,"title":{},"body":{"components/CellsComponent.html":{},"components/TestChambersComponent.html":{}}}],["specific",{"_index":1007,"title":{},"body":{"components/CellsComponent.html":{},"classes/TestChamber.html":{},"components/TestChambersComponent.html":{},"interfaces/_TestChamber.html":{}}}],["specified",{"_index":288,"title":{},"body":{"components/AddCellsComponent.html":{},"components/EditCellsComponent.html":{}}}],["speed",{"_index":1881,"title":{},"body":{"components/HomeComponent.html":{}}}],["spin",{"_index":325,"title":{},"body":{"components/AddCellsComponent.html":{},"components/AddTestChamberComponent.html":{},"components/EditCellsComponent.html":{},"components/EditTestChamberComponent.html":{}}}],["spot",{"_index":426,"title":{},"body":{"classes/Anim.html":{},"classes/Dot.html":{},"components/HomeComponent.html":{}}}],["sprite",{"_index":416,"title":{},"body":{"classes/Anim.html":{},"classes/Dot.html":{},"components/HomeComponent.html":{}}}],["src/.../environment.prod.ts",{"_index":2418,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../environment.ts",{"_index":2419,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../formfields.ts",{"_index":2420,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/app/app",{"_index":616,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["src/app/app.component.ts",{"_index":490,"title":{},"body":{"components/AppComponent.html":{},"coverage.html":{}}}],["src/app/app.component.ts:12",{"_index":516,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:14",{"_index":514,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:15",{"_index":520,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:16",{"_index":519,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:17",{"_index":518,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:18",{"_index":505,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:25",{"_index":510,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:31",{"_index":512,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:40",{"_index":508,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.module.ts",{"_index":562,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app/battery",{"_index":685,"title":{},"body":{"modules/BatteryPacksModule.html":{},"modules/BatteryPacksRoutingModule.html":{},"modules/BatteryTestModule.html":{},"modules/BatteryTestRoutingModule.html":{}}}],["src/app/cells/cells",{"_index":1092,"title":{},"body":{"modules/CellsRoutingModule.html":{}}}],["src/app/cells/cells.module.ts",{"_index":1084,"title":{},"body":{"modules/CellsModule.html":{}}}],["src/app/components/body/battery",{"_index":695,"title":{},"body":{"components/BatteryTestComponent.html":{},"interfaces/Charts.html":{},"components/NoResultComponent.html":{},"components/ShowAllTestsResultComponent.html":{},"coverage.html":{}}}],["src/app/components/body/dashboard/dashboard.component.ts",{"_index":785,"title":{},"body":{"interfaces/BreadCrumbs.html":{},"components/DashboardComponent.html":{},"coverage.html":{}}}],["src/app/components/body/dashboard/dashboard.component.ts:20",{"_index":1440,"title":{},"body":{"components/DashboardComponent.html":{}}}],["src/app/components/body/dashboard/dashboard.component.ts:21",{"_index":1442,"title":{},"body":{"components/DashboardComponent.html":{}}}],["src/app/components/body/dashboard/dashboard.component.ts:22",{"_index":1443,"title":{},"body":{"components/DashboardComponent.html":{}}}],["src/app/components/body/dashboard/dashboard.component.ts:23",{"_index":1441,"title":{},"body":{"components/DashboardComponent.html":{}}}],["src/app/components/body/dashboard/dashboard.component.ts:24",{"_index":1444,"title":{},"body":{"components/DashboardComponent.html":{}}}],["src/app/components/body/dashboard/dashboard.component.ts:26",{"_index":1434,"title":{},"body":{"components/DashboardComponent.html":{}}}],["src/app/components/body/dashboard/dashboard.component.ts:37",{"_index":1439,"title":{},"body":{"components/DashboardComponent.html":{}}}],["src/app/components/body/dashboard/dashboard.component.ts:41",{"_index":1437,"title":{},"body":{"components/DashboardComponent.html":{}}}],["src/app/components/body/dashboard/dashboard.component.ts:45",{"_index":1436,"title":{},"body":{"components/DashboardComponent.html":{}}}],["src/app/components/body/dashboard/dashboard.component.ts:81",{"_index":1438,"title":{},"body":{"components/DashboardComponent.html":{}}}],["src/app/components/body/dashboard/device",{"_index":1500,"title":{},"body":{"components/DeviceDataComponent.html":{},"coverage.html":{}}}],["src/app/components/body/devices/battery",{"_index":10,"title":{},"body":{"components/AddBatteryPackComponent.html":{},"components/BatteryPacksComponent.html":{},"components/EditBatteryPackComponent.html":{},"components/ViewBatteryPacksComponent.html":{},"coverage.html":{}}}],["src/app/components/body/devices/cells/add",{"_index":94,"title":{},"body":{"components/AddCellsComponent.html":{},"coverage.html":{}}}],["src/app/components/body/devices/cells/cells.component.ts",{"_index":963,"title":{},"body":{"components/CellsComponent.html":{},"coverage.html":{}}}],["src/app/components/body/devices/cells/cells.component.ts:13",{"_index":969,"title":{},"body":{"components/CellsComponent.html":{}}}],["src/app/components/body/devices/cells/cells.component.ts:14",{"_index":966,"title":{},"body":{"components/CellsComponent.html":{}}}],["src/app/components/body/devices/cells/cells.component.ts:25",{"_index":968,"title":{},"body":{"components/CellsComponent.html":{}}}],["src/app/components/body/devices/cells/cells.component.ts:35",{"_index":967,"title":{},"body":{"components/CellsComponent.html":{}}}],["src/app/components/body/devices/cells/edit",{"_index":1656,"title":{},"body":{"components/EditCellsComponent.html":{},"coverage.html":{}}}],["src/app/components/body/devices/cells/view",{"_index":2199,"title":{},"body":{"components/ViewCellsComponent.html":{},"coverage.html":{}}}],["src/app/components/body/devices/devices",{"_index":1559,"title":{},"body":{"components/DevicesDefaultComponent.html":{},"coverage.html":{}}}],["src/app/components/body/devices/devices.component.ts",{"_index":1556,"title":{},"body":{"components/DevicesComponent.html":{},"coverage.html":{}}}],["src/app/components/body/devices/test",{"_index":330,"title":{},"body":{"components/AddTestChamberComponent.html":{},"components/EditTestChamberComponent.html":{},"components/TestChambersComponent.html":{},"components/ViewTestChambersComponent.html":{},"coverage.html":{}}}],["src/app/components/body/docs/docs.component.ts",{"_index":1641,"title":{},"body":{"components/DocsComponent.html":{},"coverage.html":{}}}],["src/app/components/body/docs/docs.component.ts:11",{"_index":1645,"title":{},"body":{"components/DocsComponent.html":{}}}],["src/app/components/body/docs/docs.component.ts:8",{"_index":1644,"title":{},"body":{"components/DocsComponent.html":{}}}],["src/app/components/body/home/home.component.ts",{"_index":397,"title":{},"body":{"classes/Anim.html":{},"classes/Dot.html":{},"components/HomeComponent.html":{},"coverage.html":{}}}],["src/app/components/body/home/home.component.ts:12",{"_index":1650,"title":{},"body":{"classes/Dot.html":{}}}],["src/app/components/body/home/home.component.ts:18",{"_index":408,"title":{},"body":{"classes/Anim.html":{}}}],["src/app/components/body/home/home.component.ts:19",{"_index":406,"title":{},"body":{"classes/Anim.html":{}}}],["src/app/components/body/home/home.component.ts:21",{"_index":407,"title":{},"body":{"classes/Anim.html":{}}}],["src/app/components/body/home/home.component.ts:24",{"_index":412,"title":{},"body":{"classes/Anim.html":{}}}],["src/app/components/body/home/home.component.ts:30",{"_index":410,"title":{},"body":{"classes/Anim.html":{}}}],["src/app/components/body/home/home.component.ts:4",{"_index":1648,"title":{},"body":{"classes/Dot.html":{}}}],["src/app/components/body/home/home.component.ts:43",{"_index":409,"title":{},"body":{"classes/Anim.html":{}}}],["src/app/components/body/home/home.component.ts:54",{"_index":1877,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/components/body/home/home.component.ts:57",{"_index":1878,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/components/body/home/home.component.ts:6",{"_index":1649,"title":{},"body":{"classes/Dot.html":{}}}],["src/app/components/footer/foot",{"_index":1736,"title":{},"body":{"components/FootNavComponent.html":{},"coverage.html":{}}}],["src/app/components/header/head",{"_index":1815,"title":{},"body":{"components/HeadNavComponent.html":{},"coverage.html":{}}}],["src/app/guards/auth.guard.ts",{"_index":653,"title":{},"body":{"guards/AuthGuard.html":{},"coverage.html":{}}}],["src/app/guards/auth.guard.ts:11",{"_index":656,"title":{},"body":{"guards/AuthGuard.html":{}}}],["src/app/guards/auth.guard.ts:14",{"_index":662,"title":{},"body":{"guards/AuthGuard.html":{}}}],["src/app/models/cell",{"_index":170,"title":{},"body":{"components/AddCellsComponent.html":{},"components/EditCellsComponent.html":{}}}],["src/app/models/cell.ts",{"_index":856,"title":{},"body":{"interfaces/Cell.html":{},"classes/CellClass.html":{},"coverage.html":{}}}],["src/app/models/cell.ts:22",{"_index":874,"title":{},"body":{"classes/CellClass.html":{}}}],["src/app/models/cell.ts:24",{"_index":876,"title":{},"body":{"classes/CellClass.html":{}}}],["src/app/models/cell.ts:25",{"_index":879,"title":{},"body":{"classes/CellClass.html":{}}}],["src/app/models/cell.ts:26",{"_index":887,"title":{},"body":{"classes/CellClass.html":{}}}],["src/app/models/cell.ts:27",{"_index":885,"title":{},"body":{"classes/CellClass.html":{}}}],["src/app/models/cell.ts:28",{"_index":882,"title":{},"body":{"classes/CellClass.html":{}}}],["src/app/models/cell.ts:29",{"_index":880,"title":{},"body":{"classes/CellClass.html":{}}}],["src/app/models/cell.ts:30",{"_index":877,"title":{},"body":{"classes/CellClass.html":{}}}],["src/app/models/cell.ts:31",{"_index":888,"title":{},"body":{"classes/CellClass.html":{}}}],["src/app/models/cell.ts:32",{"_index":881,"title":{},"body":{"classes/CellClass.html":{}}}],["src/app/models/cell.ts:33",{"_index":878,"title":{},"body":{"classes/CellClass.html":{}}}],["src/app/models/cell.ts:34",{"_index":886,"title":{},"body":{"classes/CellClass.html":{}}}],["src/app/models/cell.ts:35",{"_index":883,"title":{},"body":{"classes/CellClass.html":{}}}],["src/app/models/cell.ts:36",{"_index":884,"title":{},"body":{"classes/CellClass.html":{}}}],["src/app/models/celltemplate.ts",{"_index":954,"title":{},"body":{"interfaces/CellTemplate.html":{},"coverage.html":{}}}],["src/app/models/devicedata.ts",{"_index":1515,"title":{},"body":{"interfaces/DeviceDataLight.html":{},"coverage.html":{}}}],["src/app/models/drivecycle",{"_index":1152,"title":{},"body":{"interfaces/ChannelFields.html":{},"interfaces/FileField.html":{},"interfaces/InputField.html":{},"interfaces/PayLoad.html":{},"interfaces/SelectField.html":{},"interfaces/TestFormat.html":{},"interfaces/TextField.html":{}}}],["src/app/models/drivecycle.ts",{"_index":1651,"title":{},"body":{"interfaces/DriveCycle.html":{},"coverage.html":{}}}],["src/app/models/formfields.ts",{"_index":1145,"title":{},"body":{"interfaces/ChannelFields.html":{},"interfaces/FileField.html":{},"interfaces/InputField.html":{},"interfaces/PayLoad.html":{},"interfaces/SelectField.html":{},"interfaces/TestFormat.html":{},"interfaces/TextField.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/models/test",{"_index":2045,"title":{},"body":{"injectables/TestChamberService.html":{}}}],["src/app/models/test.ts",{"_index":1962,"title":{},"body":{"interfaces/Test.html":{},"coverage.html":{}}}],["src/app/models/testchamber",{"_index":2279,"title":{},"body":{"components/ViewTestChambersComponent.html":{}}}],["src/app/models/testchamber.ts",{"_index":1973,"title":{},"body":{"classes/TestChamber.html":{},"interfaces/_TestChamber.html":{},"coverage.html":{}}}],["src/app/models/testchamber.ts:24",{"_index":1977,"title":{},"body":{"classes/TestChamber.html":{}}}],["src/app/models/testchamber.ts:26",{"_index":1978,"title":{},"body":{"classes/TestChamber.html":{}}}],["src/app/models/testchamber.ts:27",{"_index":1986,"title":{},"body":{"classes/TestChamber.html":{}}}],["src/app/models/testchamber.ts:28",{"_index":1981,"title":{},"body":{"classes/TestChamber.html":{}}}],["src/app/models/testchamber.ts:29",{"_index":1987,"title":{},"body":{"classes/TestChamber.html":{}}}],["src/app/models/testchamber.ts:30",{"_index":1979,"title":{},"body":{"classes/TestChamber.html":{}}}],["src/app/models/testchamber.ts:31",{"_index":1984,"title":{},"body":{"classes/TestChamber.html":{}}}],["src/app/models/testchamber.ts:32",{"_index":1985,"title":{},"body":{"classes/TestChamber.html":{}}}],["src/app/models/testchamber.ts:33",{"_index":1982,"title":{},"body":{"classes/TestChamber.html":{}}}],["src/app/models/testchamber.ts:34",{"_index":1980,"title":{},"body":{"classes/TestChamber.html":{}}}],["src/app/models/testchamber.ts:35",{"_index":1983,"title":{},"body":{"classes/TestChamber.html":{}}}],["src/app/models/testresult.ts",{"_index":1094,"title":{},"body":{"interfaces/Channel.html":{},"interfaces/MeasuredParameters.html":{},"interfaces/QuickResponseMeasurement.html":{},"interfaces/RowInfo.html":{},"interfaces/SensorObj.html":{},"interfaces/TestChannel.html":{},"interfaces/TestChannelDeepChannel.html":{},"interfaces/TestResultDocument.html":{},"interfaces/_TestResultDeep.html":{},"interfaces/_TestResultLight.html":{},"coverage.html":{}}}],["src/app/models/toastmsg.ts",{"_index":2176,"title":{},"body":{"interfaces/ToastMsg.html":{},"coverage.html":{}}}],["src/app/services/cell.service.ts",{"_index":890,"title":{},"body":{"injectables/CellService.html":{},"coverage.html":{}}}],["src/app/services/cell.service.ts:17",{"_index":899,"title":{},"body":{"injectables/CellService.html":{}}}],["src/app/services/cell.service.ts:20",{"_index":911,"title":{},"body":{"injectables/CellService.html":{}}}],["src/app/services/cell.service.ts:26",{"_index":902,"title":{},"body":{"injectables/CellService.html":{}}}],["src/app/services/cell.service.ts:32",{"_index":907,"title":{},"body":{"injectables/CellService.html":{}}}],["src/app/services/cell.service.ts:47",{"_index":909,"title":{},"body":{"injectables/CellService.html":{}}}],["src/app/services/cell.service.ts:60",{"_index":915,"title":{},"body":{"injectables/CellService.html":{}}}],["src/app/services/cell.service.ts:66",{"_index":913,"title":{},"body":{"injectables/CellService.html":{}}}],["src/app/services/cell.service.ts:76",{"_index":905,"title":{},"body":{"injectables/CellService.html":{}}}],["src/app/services/component",{"_index":1410,"title":{},"body":{"injectables/ComponentStoreService.html":{},"coverage.html":{}}}],["src/app/services/device",{"_index":1542,"title":{},"body":{"injectables/DeviceDataService.html":{},"coverage.html":{}}}],["src/app/services/test",{"_index":351,"title":{},"body":{"components/AddTestChamberComponent.html":{},"components/BatteryTestComponent.html":{},"interfaces/Charts.html":{},"components/EditTestChamberComponent.html":{},"components/ShowAllTestsResultComponent.html":{},"injectables/TestChamberService.html":{},"injectables/TestDataService.html":{},"components/ViewTestChambersComponent.html":{},"coverage.html":{}}}],["src/app/services/test.service.ts",{"_index":2171,"title":{},"body":{"injectables/TestService.html":{},"coverage.html":{}}}],["src/app/services/test.service.ts:11",{"_index":2174,"title":{},"body":{"injectables/TestService.html":{}}}],["src/app/services/test.service.ts:7",{"_index":2173,"title":{},"body":{"injectables/TestService.html":{}}}],["src/app/services/user.service.ts",{"_index":2182,"title":{},"body":{"injectables/UserService.html":{},"interfaces/_User.html":{},"interfaces/_UserLight.html":{},"coverage.html":{}}}],["src/app/services/user.service.ts:27",{"_index":2185,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/services/user.service.ts:30",{"_index":2191,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/services/user.service.ts:37",{"_index":2187,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/services/user.service.ts:43",{"_index":2189,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/services/user.service.ts:51",{"_index":2188,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/shared/shared.module.ts",{"_index":1915,"title":{},"body":{"modules/SharedModule.html":{}}}],["src/app/test",{"_index":2155,"title":{},"body":{"modules/TestChambersModule.html":{},"modules/TestChambersRoutingModule.html":{}}}],["src/environments/environment",{"_index":664,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/CellService.html":{},"injectables/TestChamberService.html":{},"injectables/UserService.html":{},"interfaces/_User.html":{},"interfaces/_UserLight.html":{}}}],["src/environments/environment.prod.ts",{"_index":2346,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/environments/environment.ts",{"_index":2347,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["start",{"_index":404,"title":{},"body":{"classes/Anim.html":{},"interfaces/Charts.html":{},"components/DevicesDefaultComponent.html":{},"components/TestChambersComponent.html":{}}}],["start(duration",{"_index":411,"title":{},"body":{"classes/Anim.html":{},"classes/Dot.html":{},"components/HomeComponent.html":{}}}],["started",{"_index":2375,"title":{"index.html":{}},"body":{}}],["starts",{"_index":1969,"title":{},"body":{"interfaces/Test.html":{}}}],["state",{"_index":660,"title":{},"body":{"guards/AuthGuard.html":{},"components/DevicesDefaultComponent.html":{},"components/HomeComponent.html":{}}}],["state.url",{"_index":676,"title":{},"body":{"guards/AuthGuard.html":{}}}],["statements",{"_index":2323,"title":{},"body":{"coverage.html":{}}}],["static",{"_index":482,"title":{},"body":{"classes/Anim.html":{},"classes/Dot.html":{},"components/HomeComponent.html":{}}}],["status",{"_index":509,"title":{},"body":{"components/AppComponent.html":{},"components/BatteryTestComponent.html":{},"interfaces/BreadCrumbs.html":{},"injectables/CellService.html":{},"interfaces/Channel.html":{},"interfaces/Charts.html":{},"components/DashboardComponent.html":{},"injectables/DeviceDataService.html":{},"interfaces/MeasuredParameters.html":{},"interfaces/QuickResponseMeasurement.html":{},"interfaces/RowInfo.html":{},"interfaces/SensorObj.html":{},"components/ShowAllTestsResultComponent.html":{},"interfaces/Test.html":{},"injectables/TestChamberService.html":{},"interfaces/TestChannel.html":{},"interfaces/TestChannelDeepChannel.html":{},"injectables/TestDataService.html":{},"interfaces/TestResultDocument.html":{},"injectables/UserService.html":{},"interfaces/_TestResultDeep.html":{},"interfaces/_TestResultLight.html":{},"interfaces/_User.html":{},"interfaces/_UserLight.html":{}}}],["status?:'active'|'disabled",{"_index":798,"title":{},"body":{"interfaces/BreadCrumbs.html":{},"components/DashboardComponent.html":{}}}],["statusch",{"_index":1112,"title":{},"body":{"interfaces/Channel.html":{},"interfaces/MeasuredParameters.html":{},"interfaces/QuickResponseMeasurement.html":{},"interfaces/RowInfo.html":{},"interfaces/SensorObj.html":{},"interfaces/TestChannel.html":{},"interfaces/TestChannelDeepChannel.html":{},"interfaces/TestResultDocument.html":{},"interfaces/_TestResultDeep.html":{},"interfaces/_TestResultLight.html":{}}}],["statusrow",{"_index":1117,"title":{},"body":{"interfaces/Channel.html":{},"interfaces/MeasuredParameters.html":{},"interfaces/QuickResponseMeasurement.html":{},"interfaces/RowInfo.html":{},"interfaces/SensorObj.html":{},"interfaces/TestChannel.html":{},"interfaces/TestChannelDeepChannel.html":{},"interfaces/TestResultDocument.html":{},"interfaces/_TestResultDeep.html":{},"interfaces/_TestResultLight.html":{}}}],["sticky",{"_index":1876,"title":{},"body":{"components/HeadNavComponent.html":{}}}],["stop",{"_index":1383,"title":{},"body":{"interfaces/Charts.html":{},"components/TestChambersComponent.html":{}}}],["stopped",{"_index":1102,"title":{},"body":{"interfaces/Channel.html":{},"interfaces/Charts.html":{},"interfaces/MeasuredParameters.html":{},"interfaces/QuickResponseMeasurement.html":{},"interfaces/RowInfo.html":{},"interfaces/SensorObj.html":{},"interfaces/Test.html":{},"interfaces/TestChannel.html":{},"interfaces/TestChannelDeepChannel.html":{},"interfaces/TestResultDocument.html":{},"interfaces/_TestResultDeep.html":{},"interfaces/_TestResultLight.html":{}}}],["storage",{"_index":2105,"title":{},"body":{"components/TestChambersComponent.html":{}}}],["store",{"_index":506,"title":{},"body":{"components/AppComponent.html":{},"injectables/ComponentStoreService.html":{},"components/DashboardComponent.html":{},"components/TestChambersComponent.html":{}}}],["store.service",{"_index":165,"title":{},"body":{"components/AddCellsComponent.html":{},"components/AddTestChamberComponent.html":{},"components/AppComponent.html":{},"interfaces/BreadCrumbs.html":{},"interfaces/Charts.html":{},"components/DashboardComponent.html":{},"components/EditCellsComponent.html":{},"components/EditTestChamberComponent.html":{},"components/ViewTestChambersComponent.html":{}}}],["store.service.ts",{"_index":1411,"title":{},"body":{"injectables/ComponentStoreService.html":{},"coverage.html":{}}}],["store.service.ts:10",{"_index":1414,"title":{},"body":{"injectables/ComponentStoreService.html":{}}}],["store.service.ts:12",{"_index":1416,"title":{},"body":{"injectables/ComponentStoreService.html":{}}}],["store.service.ts:9",{"_index":1419,"title":{},"body":{"injectables/ComponentStoreService.html":{}}}],["store:componentstoreservice",{"_index":815,"title":{},"body":{"interfaces/BreadCrumbs.html":{},"components/DashboardComponent.html":{}}}],["stored",{"_index":2108,"title":{},"body":{"components/TestChambersComponent.html":{},"index.html":{}}}],["streamline",{"_index":1003,"title":{},"body":{"components/CellsComponent.html":{}}}],["string",{"_index":137,"title":{},"body":{"components/AddCellsComponent.html":{},"components/AddTestChamberComponent.html":{},"components/AppComponent.html":{},"interfaces/BreadCrumbs.html":{},"interfaces/Cell.html":{},"classes/CellClass.html":{},"injectables/CellService.html":{},"interfaces/CellTemplate.html":{},"interfaces/Channel.html":{},"interfaces/ChannelFields.html":{},"interfaces/Charts.html":{},"components/DeviceDataComponent.html":{},"interfaces/DeviceDataLight.html":{},"components/EditCellsComponent.html":{},"components/EditTestChamberComponent.html":{},"interfaces/FileField.html":{},"interfaces/InputField.html":{},"interfaces/MeasuredParameters.html":{},"interfaces/PayLoad.html":{},"interfaces/QuickResponseMeasurement.html":{},"interfaces/RowInfo.html":{},"interfaces/SelectField.html":{},"interfaces/SensorObj.html":{},"components/ShowAllTestsResultComponent.html":{},"interfaces/Test.html":{},"classes/TestChamber.html":{},"injectables/TestChamberService.html":{},"interfaces/TestChannel.html":{},"interfaces/TestChannelDeepChannel.html":{},"interfaces/TestFormat.html":{},"interfaces/TestResultDocument.html":{},"interfaces/TextField.html":{},"interfaces/ToastMsg.html":{},"injectables/UserService.html":{},"components/ViewCellsComponent.html":{},"components/ViewTestChambersComponent.html":{},"interfaces/_TestChamber.html":{},"interfaces/_TestResultDeep.html":{},"interfaces/_TestResultLight.html":{},"interfaces/_User.html":{},"interfaces/_UserLight.html":{},"miscellaneous/variables.html":{}}}],["stripped",{"_index":2049,"title":{},"body":{"injectables/TestChamberService.html":{}}}],["strong",{"_index":1048,"title":{},"body":{"components/CellsComponent.html":{},"components/TestChambersComponent.html":{}}}],["struggling",{"_index":2113,"title":{},"body":{"components/TestChambersComponent.html":{}}}],["style",{"_index":1038,"title":{},"body":{"components/CellsComponent.html":{},"components/DevicesDefaultComponent.html":{},"components/HomeComponent.html":{},"components/TestChambersComponent.html":{}}}],["styles",{"_index":6,"title":{},"body":{"components/AddBatteryPackComponent.html":{},"components/AddCellsComponent.html":{},"components/AddTestChamberComponent.html":{},"components/AppComponent.html":{},"components/BatteryPacksComponent.html":{},"components/BatteryTestComponent.html":{},"components/CellsComponent.html":{},"components/DashboardComponent.html":{},"components/DeviceDataComponent.html":{},"components/DevicesComponent.html":{},"components/DevicesDefaultComponent.html":{},"components/DocsComponent.html":{},"components/EditBatteryPackComponent.html":{},"components/EditCellsComponent.html":{},"components/EditTestChamberComponent.html":{},"components/FootNavComponent.html":{},"components/HeadNavComponent.html":{},"components/HomeComponent.html":{},"components/NoResultComponent.html":{},"components/ShowAllTestsResultComponent.html":{},"components/TestChambersComponent.html":{},"components/ViewBatteryPacksComponent.html":{},"components/ViewCellsComponent.html":{},"components/ViewTestChambersComponent.html":{}}}],["styleurls",{"_index":20,"title":{},"body":{"components/AddBatteryPackComponent.html":{},"components/AddCellsComponent.html":{},"components/AddTestChamberComponent.html":{},"classes/Anim.html":{},"components/AppComponent.html":{},"components/BatteryPacksComponent.html":{},"components/BatteryTestComponent.html":{},"interfaces/BreadCrumbs.html":{},"components/CellsComponent.html":{},"interfaces/Charts.html":{},"components/DashboardComponent.html":{},"components/DeviceDataComponent.html":{},"components/DevicesComponent.html":{},"components/DevicesDefaultComponent.html":{},"components/DocsComponent.html":{},"classes/Dot.html":{},"components/EditBatteryPackComponent.html":{},"components/EditCellsComponent.html":{},"components/EditTestChamberComponent.html":{},"components/FootNavComponent.html":{},"components/HeadNavComponent.html":{},"components/HomeComponent.html":{},"components/NoResultComponent.html":{},"components/ShowAllTestsResultComponent.html":{},"components/TestChambersComponent.html":{},"components/ViewBatteryPacksComponent.html":{},"components/ViewCellsComponent.html":{},"components/ViewTestChambersComponent.html":{}}}],["sub",{"_index":173,"title":{},"body":{"components/AddCellsComponent.html":{},"components/AddTestChamberComponent.html":{},"components/BatteryTestComponent.html":{},"components/CellsComponent.html":{},"interfaces/Charts.html":{},"components/DeviceDataComponent.html":{},"components/DevicesDefaultComponent.html":{},"components/EditCellsComponent.html":{},"components/EditTestChamberComponent.html":{},"components/HeadNavComponent.html":{},"components/ShowAllTestsResultComponent.html":{},"components/TestChambersComponent.html":{},"components/ViewCellsComponent.html":{},"components/ViewTestChambersComponent.html":{}}}],["sub.unsubscribe",{"_index":250,"title":{},"body":{"components/AddCellsComponent.html":{},"components/AddTestChamberComponent.html":{},"components/BatteryTestComponent.html":{},"components/CellsComponent.html":{},"interfaces/Charts.html":{},"components/DeviceDataComponent.html":{},"components/EditCellsComponent.html":{},"components/EditTestChamberComponent.html":{},"components/TestChambersComponent.html":{},"components/ViewCellsComponent.html":{},"components/ViewTestChambersComponent.html":{}}}],["subject",{"_index":1418,"title":{},"body":{"injectables/ComponentStoreService.html":{}}}],["subs",{"_index":112,"title":{},"body":{"components/AddCellsComponent.html":{},"components/AddTestChamberComponent.html":{},"components/BatteryTestComponent.html":{},"interfaces/BreadCrumbs.html":{},"components/CellsComponent.html":{},"interfaces/Charts.html":{},"components/DashboardComponent.html":{},"components/DeviceDataComponent.html":{},"components/EditCellsComponent.html":{},"components/EditTestChamberComponent.html":{},"components/ShowAllTestsResultComponent.html":{},"components/TestChambersComponent.html":{},"components/ViewCellsComponent.html":{},"components/ViewTestChambersComponent.html":{}}}],["subs.unsubscribe",{"_index":855,"title":{},"body":{"interfaces/BreadCrumbs.html":{},"components/DashboardComponent.html":{},"components/ShowAllTestsResultComponent.html":{}}}],["subscribe",{"_index":360,"title":{},"body":{"components/AddTestChamberComponent.html":{},"interfaces/Charts.html":{},"components/EditCellsComponent.html":{},"components/EditTestChamberComponent.html":{},"components/ViewTestChambersComponent.html":{}}}],["subscribe((api",{"_index":2293,"title":{},"body":{"components/ViewTestChambersComponent.html":{}}}],["subscribe((d",{"_index":176,"title":{},"body":{"components/AddCellsComponent.html":{},"components/EditCellsComponent.html":{}}}],["subscribe((data",{"_index":1239,"title":{},"body":{"interfaces/Charts.html":{}}}],["subscribe((res",{"_index":1366,"title":{},"body":{"interfaces/Charts.html":{}}}],["subscribe((response",{"_index":1396,"title":{},"body":{"interfaces/Charts.html":{}}}],["subscribe((testinfo",{"_index":1346,"title":{},"body":{"interfaces/Charts.html":{}}}],["subscribe((tests",{"_index":1939,"title":{},"body":{"components/ShowAllTestsResultComponent.html":{}}}],["subscribe((users",{"_index":240,"title":{},"body":{"components/AddCellsComponent.html":{},"components/AddTestChamberComponent.html":{},"components/EditCellsComponent.html":{},"components/EditTestChamberComponent.html":{}}}],["subscription",{"_index":160,"title":{},"body":{"components/AddCellsComponent.html":{},"components/AddTestChamberComponent.html":{},"components/BatteryTestComponent.html":{},"interfaces/BreadCrumbs.html":{},"components/CellsComponent.html":{},"interfaces/Charts.html":{},"components/DashboardComponent.html":{},"components/DeviceDataComponent.html":{},"components/EditCellsComponent.html":{},"components/EditTestChamberComponent.html":{},"components/HeadNavComponent.html":{},"components/ShowAllTestsResultComponent.html":{},"components/TestChambersComponent.html":{},"components/ViewCellsComponent.html":{},"components/ViewTestChambersComponent.html":{}}}],["subscriptions",{"_index":1432,"title":{},"body":{"components/DashboardComponent.html":{}}}],["subscriptions:subscription",{"_index":811,"title":{},"body":{"interfaces/BreadCrumbs.html":{},"components/DashboardComponent.html":{}}}],["subtitle",{"_index":1901,"title":{},"body":{"components/HomeComponent.html":{}}}],["succeed",{"_index":982,"title":{},"body":{"components/CellsComponent.html":{}}}],["successfully",{"_index":219,"title":{},"body":{"components/AddCellsComponent.html":{},"components/AddTestChamberComponent.html":{},"components/EditCellsComponent.html":{},"components/EditTestChamberComponent.html":{}}}],["such",{"_index":1002,"title":{},"body":{"components/CellsComponent.html":{},"components/DevicesDefaultComponent.html":{}}}],["supplied",{"_index":417,"title":{},"body":{"classes/Anim.html":{},"classes/Dot.html":{},"components/HomeComponent.html":{}}}],["support",{"_index":386,"title":{},"body":{"components/AddTestChamberComponent.html":{},"components/EditTestChamberComponent.html":{},"modules.html":{}}}],["sure",{"_index":1355,"title":{},"body":{"interfaces/Charts.html":{},"components/EditCellsComponent.html":{},"components/EditTestChamberComponent.html":{}}}],["svg",{"_index":418,"title":{},"body":{"classes/Anim.html":{},"classes/Dot.html":{},"components/HomeComponent.html":{},"modules.html":{}}}],["switchmap",{"_index":1181,"title":{},"body":{"interfaces/Charts.html":{},"components/EditCellsComponent.html":{},"components/EditTestChamberComponent.html":{},"components/HeadNavComponent.html":{}}}],["switchmap((firstresponse",{"_index":1826,"title":{},"body":{"components/HeadNavComponent.html":{}}}],["switchmap((params",{"_index":1679,"title":{},"body":{"components/EditCellsComponent.html":{},"components/EditTestChamberComponent.html":{}}}],["switchmap((secondresponse",{"_index":1831,"title":{},"body":{"components/HeadNavComponent.html":{}}}],["swoosh",{"_index":1849,"title":{},"body":{"components/HeadNavComponent.html":{}}}],["system",{"_index":1608,"title":{},"body":{"components/DevicesDefaultComponent.html":{},"components/FootNavComponent.html":{},"components/HomeComponent.html":{}}}],["table",{"_index":2247,"title":{},"body":{"components/ViewCellsComponent.html":{},"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":2348,"title":{},"body":{"coverage.html":{}}}],["tailor",{"_index":1006,"title":{},"body":{"components/CellsComponent.html":{}}}],["tap",{"_index":666,"title":{},"body":{"guards/AuthGuard.html":{}}}],["tap(loggedin",{"_index":671,"title":{},"body":{"guards/AuthGuard.html":{}}}],["target",{"_index":675,"title":{},"body":{"guards/AuthGuard.html":{}}}],["targetsamplesize",{"_index":1212,"title":{},"body":{"interfaces/Charts.html":{}}}],["tbody",{"_index":2248,"title":{},"body":{"components/ViewCellsComponent.html":{}}}],["technical",{"_index":2145,"title":{},"body":{"components/TestChambersComponent.html":{}}}],["technique",{"_index":1326,"title":{},"body":{"interfaces/Charts.html":{}}}],["tem.templatename",{"_index":255,"title":{},"body":{"components/AddCellsComponent.html":{},"components/EditCellsComponent.html":{}}}],["temperature",{"_index":375,"title":{},"body":{"components/AddTestChamberComponent.html":{},"interfaces/Charts.html":{},"components/DashboardComponent.html":{},"components/EditTestChamberComponent.html":{},"components/HomeComponent.html":{},"components/ViewTestChambersComponent.html":{}}}],["temperatures(°c",{"_index":1276,"title":{},"body":{"interfaces/Charts.html":{}}}],["template",{"_index":5,"title":{},"body":{"components/AddBatteryPackComponent.html":{},"components/AddCellsComponent.html":{},"components/AddTestChamberComponent.html":{},"components/AppComponent.html":{},"components/BatteryPacksComponent.html":{},"components/BatteryTestComponent.html":{},"components/CellsComponent.html":{},"components/DashboardComponent.html":{},"components/DeviceDataComponent.html":{},"components/DevicesComponent.html":{},"components/DevicesDefaultComponent.html":{},"components/DocsComponent.html":{},"components/EditBatteryPackComponent.html":{},"components/EditCellsComponent.html":{},"components/EditTestChamberComponent.html":{},"components/FootNavComponent.html":{},"components/HeadNavComponent.html":{},"components/HomeComponent.html":{},"components/NoResultComponent.html":{},"components/ShowAllTestsResultComponent.html":{},"components/TestChambersComponent.html":{},"components/ViewBatteryPacksComponent.html":{},"components/ViewCellsComponent.html":{},"components/ViewTestChambersComponent.html":{}}}],["template_width",{"_index":1155,"title":{},"body":{"interfaces/ChannelFields.html":{},"interfaces/FileField.html":{},"interfaces/InputField.html":{},"interfaces/PayLoad.html":{},"interfaces/SelectField.html":{},"interfaces/TestFormat.html":{},"interfaces/TextField.html":{},"miscellaneous/variables.html":{}}}],["templatename",{"_index":960,"title":{},"body":{"interfaces/CellTemplate.html":{}}}],["templates",{"_index":926,"title":{},"body":{"injectables/CellService.html":{}}}],["templateurl",{"_index":22,"title":{},"body":{"components/AddBatteryPackComponent.html":{},"components/AddCellsComponent.html":{},"components/AddTestChamberComponent.html":{},"classes/Anim.html":{},"components/AppComponent.html":{},"components/BatteryPacksComponent.html":{},"components/BatteryTestComponent.html":{},"interfaces/BreadCrumbs.html":{},"components/CellsComponent.html":{},"interfaces/Charts.html":{},"components/DashboardComponent.html":{},"components/DeviceDataComponent.html":{},"components/DevicesComponent.html":{},"components/DevicesDefaultComponent.html":{},"components/DocsComponent.html":{},"classes/Dot.html":{},"components/EditBatteryPackComponent.html":{},"components/EditCellsComponent.html":{},"components/EditTestChamberComponent.html":{},"components/FootNavComponent.html":{},"components/HeadNavComponent.html":{},"components/HomeComponent.html":{},"components/NoResultComponent.html":{},"components/ShowAllTestsResultComponent.html":{},"components/TestChambersComponent.html":{},"components/ViewBatteryPacksComponent.html":{},"components/ViewCellsComponent.html":{},"components/ViewTestChambersComponent.html":{}}}],["tempobj",{"_index":1278,"title":{},"body":{"interfaces/Charts.html":{}}}],["tempobj.sensorid",{"_index":1279,"title":{},"body":{"interfaces/Charts.html":{}}}],["tempobjnew.sensorid",{"_index":1318,"title":{},"body":{"interfaces/Charts.html":{}}}],["tempobjold",{"_index":1316,"title":{},"body":{"interfaces/Charts.html":{}}}],["tempobjold.values.push(...tempobjnew.values",{"_index":1319,"title":{},"body":{"interfaces/Charts.html":{}}}],["test",{"_index":42,"title":{"interfaces/Test.html":{}},"body":{"components/AddBatteryPackComponent.html":{},"components/AddCellsComponent.html":{},"components/AddTestChamberComponent.html":{},"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/BatteryPacksComponent.html":{},"components/BatteryTestComponent.html":{},"modules/BatteryTestModule.html":{},"modules/BatteryTestRoutingModule.html":{},"components/CellsComponent.html":{},"interfaces/Charts.html":{},"components/DashboardComponent.html":{},"components/DeviceDataComponent.html":{},"components/DevicesComponent.html":{},"components/DevicesDefaultComponent.html":{},"components/DocsComponent.html":{},"components/EditBatteryPackComponent.html":{},"components/EditCellsComponent.html":{},"components/EditTestChamberComponent.html":{},"components/FootNavComponent.html":{},"components/HeadNavComponent.html":{},"components/HomeComponent.html":{},"components/NoResultComponent.html":{},"components/ShowAllTestsResultComponent.html":{},"interfaces/Test.html":{},"injectables/TestChamberService.html":{},"components/TestChambersComponent.html":{},"modules/TestChambersModule.html":{},"modules/TestChambersRoutingModule.html":{},"components/ViewBatteryPacksComponent.html":{},"components/ViewCellsComponent.html":{},"components/ViewTestChambersComponent.html":{},"coverage.html":{},"index.html":{}}}],["test'},{'name",{"_index":49,"title":{},"body":{"components/AddBatteryPackComponent.html":{},"components/AddCellsComponent.html":{},"components/AddTestChamberComponent.html":{},"components/AppComponent.html":{},"components/BatteryPacksComponent.html":{},"components/BatteryTestComponent.html":{},"components/CellsComponent.html":{},"components/DashboardComponent.html":{},"components/DeviceDataComponent.html":{},"components/DevicesComponent.html":{},"components/DevicesDefaultComponent.html":{},"components/DocsComponent.html":{},"components/EditBatteryPackComponent.html":{},"components/EditCellsComponent.html":{},"components/EditTestChamberComponent.html":{},"components/FootNavComponent.html":{},"components/HeadNavComponent.html":{},"components/HomeComponent.html":{},"components/NoResultComponent.html":{},"components/ShowAllTestsResultComponent.html":{},"components/TestChambersComponent.html":{},"components/ViewBatteryPacksComponent.html":{},"components/ViewCellsComponent.html":{},"components/ViewTestChambersComponent.html":{}}}],["test._id",{"_index":740,"title":{},"body":{"components/BatteryTestComponent.html":{},"components/ShowAllTestsResultComponent.html":{}}}],["test.chambername",{"_index":739,"title":{},"body":{"components/BatteryTestComponent.html":{},"components/ShowAllTestsResultComponent.html":{}}}],["test.component",{"_index":620,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/BatteryTestModule.html":{},"modules/BatteryTestRoutingModule.html":{}}}],["test.component.css",{"_index":697,"title":{},"body":{"components/BatteryTestComponent.html":{}}}],["test.component.html",{"_index":698,"title":{},"body":{"components/BatteryTestComponent.html":{}}}],["test.component.ts",{"_index":696,"title":{},"body":{"components/BatteryTestComponent.html":{},"coverage.html":{}}}],["test.component.ts:14",{"_index":718,"title":{},"body":{"components/BatteryTestComponent.html":{}}}],["test.component.ts:15",{"_index":716,"title":{},"body":{"components/BatteryTestComponent.html":{}}}],["test.component.ts:16",{"_index":717,"title":{},"body":{"components/BatteryTestComponent.html":{}}}],["test.component.ts:17",{"_index":713,"title":{},"body":{"components/BatteryTestComponent.html":{}}}],["test.component.ts:18",{"_index":714,"title":{},"body":{"components/BatteryTestComponent.html":{}}}],["test.component.ts:19",{"_index":706,"title":{},"body":{"components/BatteryTestComponent.html":{}}}],["test.component.ts:26",{"_index":710,"title":{},"body":{"components/BatteryTestComponent.html":{}}}],["test.component.ts:35",{"_index":708,"title":{},"body":{"components/BatteryTestComponent.html":{}}}],["test.component.ts:47",{"_index":709,"title":{},"body":{"components/BatteryTestComponent.html":{}}}],["test.component.ts:54",{"_index":707,"title":{},"body":{"components/BatteryTestComponent.html":{}}}],["test.createdon",{"_index":1957,"title":{},"body":{"components/ShowAllTestsResultComponent.html":{}}}],["test.module').then",{"_index":647,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["test.module.ts",{"_index":769,"title":{},"body":{"modules/BatteryTestModule.html":{}}}],["test.status",{"_index":741,"title":{},"body":{"components/BatteryTestComponent.html":{},"components/ShowAllTestsResultComponent.html":{}}}],["test.testname",{"_index":738,"title":{},"body":{"components/BatteryTestComponent.html":{},"components/ShowAllTestsResultComponent.html":{}}}],["test/battery",{"_index":619,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/BatteryTestComponent.html":{},"modules/BatteryTestModule.html":{},"modules/BatteryTestRoutingModule.html":{},"coverage.html":{}}}],["test/create",{"_index":778,"title":{},"body":{"modules/BatteryTestModule.html":{},"modules/BatteryTestRoutingModule.html":{},"coverage.html":{}}}],["test/no",{"_index":776,"title":{},"body":{"modules/BatteryTestModule.html":{},"components/NoResultComponent.html":{},"coverage.html":{}}}],["test/show",{"_index":773,"title":{},"body":{"modules/BatteryTestModule.html":{},"modules/BatteryTestRoutingModule.html":{},"interfaces/Charts.html":{},"components/ShowAllTestsResultComponent.html":{},"coverage.html":{}}}],["test:hover",{"_index":755,"title":{},"body":{"components/BatteryTestComponent.html":{}}}],["testchamber",{"_index":344,"title":{"classes/TestChamber.html":{}},"body":{"components/AddTestChamberComponent.html":{},"components/CellsComponent.html":{},"components/EditTestChamberComponent.html":{},"classes/TestChamber.html":{},"interfaces/_TestChamber.html":{},"coverage.html":{}}}],["testchamber.accesstype",{"_index":2300,"title":{},"body":{"components/ViewTestChambersComponent.html":{}}}],["testchamber.createdon",{"_index":2301,"title":{},"body":{"components/ViewTestChambersComponent.html":{}}}],["testchamber.maxnoofchannels",{"_index":2299,"title":{},"body":{"components/ViewTestChambersComponent.html":{}}}],["testchamber.name",{"_index":2298,"title":{},"body":{"components/ViewTestChambersComponent.html":{}}}],["testchamberscomponent",{"_index":83,"title":{"components/TestChambersComponent.html":{}},"body":{"components/AddBatteryPackComponent.html":{},"components/AddCellsComponent.html":{},"components/AddTestChamberComponent.html":{},"components/AppComponent.html":{},"components/BatteryPacksComponent.html":{},"components/BatteryTestComponent.html":{},"components/CellsComponent.html":{},"components/DashboardComponent.html":{},"components/DeviceDataComponent.html":{},"components/DevicesComponent.html":{},"components/DevicesDefaultComponent.html":{},"components/DocsComponent.html":{},"components/EditBatteryPackComponent.html":{},"components/EditCellsComponent.html":{},"components/EditTestChamberComponent.html":{},"components/FootNavComponent.html":{},"components/HeadNavComponent.html":{},"components/HomeComponent.html":{},"components/NoResultComponent.html":{},"components/ShowAllTestsResultComponent.html":{},"components/TestChambersComponent.html":{},"modules/TestChambersModule.html":{},"modules/TestChambersRoutingModule.html":{},"components/ViewBatteryPacksComponent.html":{},"components/ViewCellsComponent.html":{},"components/ViewTestChambersComponent.html":{},"coverage.html":{},"overview.html":{}}}],["testchamberservice",{"_index":339,"title":{"injectables/TestChamberService.html":{}},"body":{"components/AddTestChamberComponent.html":{},"components/BatteryTestComponent.html":{},"interfaces/Charts.html":{},"components/EditTestChamberComponent.html":{},"components/ShowAllTestsResultComponent.html":{},"injectables/TestChamberService.html":{},"components/TestChambersComponent.html":{},"components/ViewTestChambersComponent.html":{},"coverage.html":{}}}],["testchambersmodule",{"_index":2150,"title":{"modules/TestChambersModule.html":{}},"body":{"modules/TestChambersModule.html":{},"modules.html":{},"overview.html":{}}}],["testchambersroutingmodule",{"_index":2154,"title":{"modules/TestChambersRoutingModule.html":{}},"body":{"modules/TestChambersModule.html":{},"modules/TestChambersRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["testchannel",{"_index":1110,"title":{"interfaces/TestChannel.html":{}},"body":{"interfaces/Channel.html":{},"interfaces/MeasuredParameters.html":{},"interfaces/QuickResponseMeasurement.html":{},"interfaces/RowInfo.html":{},"interfaces/SensorObj.html":{},"interfaces/TestChannel.html":{},"interfaces/TestChannelDeepChannel.html":{},"interfaces/TestResultDocument.html":{},"interfaces/_TestResultDeep.html":{},"interfaces/_TestResultLight.html":{},"coverage.html":{}}}],["testchanneldeepchannel",{"_index":1120,"title":{"interfaces/TestChannelDeepChannel.html":{}},"body":{"interfaces/Channel.html":{},"interfaces/MeasuredParameters.html":{},"interfaces/QuickResponseMeasurement.html":{},"interfaces/RowInfo.html":{},"interfaces/SensorObj.html":{},"interfaces/TestChannel.html":{},"interfaces/TestChannelDeepChannel.html":{},"interfaces/TestResultDocument.html":{},"interfaces/_TestResultDeep.html":{},"interfaces/_TestResultLight.html":{},"coverage.html":{}}}],["testconfig",{"_index":1966,"title":{},"body":{"interfaces/Test.html":{},"injectables/TestChamberService.html":{}}}],["testconfigchannelid",{"_index":872,"title":{},"body":{"interfaces/Cell.html":{},"classes/CellClass.html":{}}}],["testdataservice",{"_index":2162,"title":{"injectables/TestDataService.html":{}},"body":{"injectables/TestDataService.html":{},"coverage.html":{}}}],["testdesc",{"_index":1126,"title":{},"body":{"interfaces/Channel.html":{},"interfaces/MeasuredParameters.html":{},"interfaces/QuickResponseMeasurement.html":{},"interfaces/RowInfo.html":{},"interfaces/SensorObj.html":{},"interfaces/Test.html":{},"interfaces/TestChannel.html":{},"interfaces/TestChannelDeepChannel.html":{},"interfaces/TestResultDocument.html":{},"interfaces/_TestResultDeep.html":{},"interfaces/_TestResultLight.html":{}}}],["testdescription",{"_index":1109,"title":{},"body":{"interfaces/Channel.html":{},"interfaces/MeasuredParameters.html":{},"interfaces/QuickResponseMeasurement.html":{},"interfaces/RowInfo.html":{},"interfaces/SensorObj.html":{},"interfaces/TestChannel.html":{},"interfaces/TestChannelDeepChannel.html":{},"interfaces/TestResultDocument.html":{},"interfaces/_TestResultDeep.html":{},"interfaces/_TestResultLight.html":{}}}],["testenddate",{"_index":1128,"title":{},"body":{"interfaces/Channel.html":{},"interfaces/MeasuredParameters.html":{},"interfaces/QuickResponseMeasurement.html":{},"interfaces/RowInfo.html":{},"interfaces/SensorObj.html":{},"interfaces/Test.html":{},"interfaces/TestChannel.html":{},"interfaces/TestChannelDeepChannel.html":{},"interfaces/TestResultDocument.html":{},"interfaces/_TestResultDeep.html":{},"interfaces/_TestResultLight.html":{}}}],["testformat",{"_index":1104,"title":{"interfaces/TestFormat.html":{}},"body":{"interfaces/Channel.html":{},"interfaces/ChannelFields.html":{},"interfaces/FileField.html":{},"interfaces/InputField.html":{},"interfaces/MeasuredParameters.html":{},"interfaces/PayLoad.html":{},"interfaces/QuickResponseMeasurement.html":{},"interfaces/RowInfo.html":{},"interfaces/SelectField.html":{},"interfaces/SensorObj.html":{},"interfaces/TestChannel.html":{},"interfaces/TestChannelDeepChannel.html":{},"interfaces/TestFormat.html":{},"interfaces/TestResultDocument.html":{},"interfaces/TextField.html":{},"interfaces/_TestResultDeep.html":{},"interfaces/_TestResultLight.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["testformats",{"_index":1122,"title":{},"body":{"interfaces/Channel.html":{},"interfaces/ChannelFields.html":{},"interfaces/FileField.html":{},"interfaces/InputField.html":{},"interfaces/MeasuredParameters.html":{},"interfaces/PayLoad.html":{},"interfaces/QuickResponseMeasurement.html":{},"interfaces/RowInfo.html":{},"interfaces/SelectField.html":{},"interfaces/SensorObj.html":{},"interfaces/TestChannel.html":{},"interfaces/TestChannelDeepChannel.html":{},"interfaces/TestFormat.html":{},"interfaces/TestResultDocument.html":{},"interfaces/TextField.html":{},"interfaces/_TestResultDeep.html":{},"interfaces/_TestResultLight.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["testid",{"_index":1200,"title":{},"body":{"interfaces/Charts.html":{},"classes/TestChamber.html":{},"injectables/TestChamberService.html":{},"interfaces/_TestChamber.html":{}}}],["testinfo",{"_index":1195,"title":{},"body":{"interfaces/Charts.html":{}}}],["testinfointervalid",{"_index":1203,"title":{},"body":{"interfaces/Charts.html":{}}}],["testinfosub",{"_index":1204,"title":{},"body":{"interfaces/Charts.html":{}}}],["testing",{"_index":986,"title":{},"body":{"components/CellsComponent.html":{},"components/DevicesDefaultComponent.html":{},"components/HomeComponent.html":{},"components/TestChambersComponent.html":{},"index.html":{}}}],["testname",{"_index":1108,"title":{},"body":{"interfaces/Channel.html":{},"interfaces/MeasuredParameters.html":{},"interfaces/QuickResponseMeasurement.html":{},"interfaces/RowInfo.html":{},"interfaces/SensorObj.html":{},"interfaces/Test.html":{},"interfaces/TestChannel.html":{},"interfaces/TestChannelDeepChannel.html":{},"interfaces/TestResultDocument.html":{},"interfaces/_TestResultDeep.html":{},"interfaces/_TestResultLight.html":{}}}],["testperformed",{"_index":1996,"title":{},"body":{"classes/TestChamber.html":{},"interfaces/_TestChamber.html":{}}}],["testresult",{"_index":1967,"title":{},"body":{"interfaces/Test.html":{}}}],["testresult.csv",{"_index":1407,"title":{},"body":{"interfaces/Charts.html":{}}}],["testresultdeep",{"_index":2166,"title":{},"body":{"injectables/TestDataService.html":{}}}],["testresultdocument",{"_index":1142,"title":{"interfaces/TestResultDocument.html":{}},"body":{"interfaces/Channel.html":{},"interfaces/MeasuredParameters.html":{},"interfaces/QuickResponseMeasurement.html":{},"interfaces/RowInfo.html":{},"interfaces/SensorObj.html":{},"interfaces/TestChannel.html":{},"interfaces/TestChannelDeepChannel.html":{},"interfaces/TestResultDocument.html":{},"interfaces/_TestResultDeep.html":{},"interfaces/_TestResultLight.html":{},"coverage.html":{}}}],["testresultlight",{"_index":2167,"title":{},"body":{"injectables/TestDataService.html":{}}}],["tests",{"_index":81,"title":{},"body":{"components/AddBatteryPackComponent.html":{},"components/AddCellsComponent.html":{},"components/AddTestChamberComponent.html":{},"components/AppComponent.html":{},"components/BatteryPacksComponent.html":{},"components/BatteryTestComponent.html":{},"modules/BatteryTestModule.html":{},"modules/BatteryTestRoutingModule.html":{},"components/CellsComponent.html":{},"components/DashboardComponent.html":{},"components/DeviceDataComponent.html":{},"components/DevicesComponent.html":{},"components/DevicesDefaultComponent.html":{},"components/DocsComponent.html":{},"components/EditBatteryPackComponent.html":{},"components/EditCellsComponent.html":{},"components/EditTestChamberComponent.html":{},"components/FootNavComponent.html":{},"components/HeadNavComponent.html":{},"components/HomeComponent.html":{},"components/NoResultComponent.html":{},"components/ShowAllTestsResultComponent.html":{},"injectables/TestChamberService.html":{},"components/TestChambersComponent.html":{},"components/ViewBatteryPacksComponent.html":{},"components/ViewCellsComponent.html":{},"components/ViewTestChambersComponent.html":{},"coverage.html":{},"index.html":{}}}],["testscheduledate",{"_index":1129,"title":{},"body":{"interfaces/Channel.html":{},"interfaces/MeasuredParameters.html":{},"interfaces/QuickResponseMeasurement.html":{},"interfaces/RowInfo.html":{},"interfaces/SensorObj.html":{},"interfaces/Test.html":{},"interfaces/TestChannel.html":{},"interfaces/TestChannelDeepChannel.html":{},"interfaces/TestResultDocument.html":{},"interfaces/_TestResultDeep.html":{},"interfaces/_TestResultLight.html":{}}}],["testservice",{"_index":504,"title":{"injectables/TestService.html":{}},"body":{"components/AppComponent.html":{},"injectables/TestService.html":{},"coverage.html":{}}}],["testsperformed",{"_index":867,"title":{},"body":{"interfaces/Cell.html":{},"classes/CellClass.html":{}}}],["teststartdate",{"_index":1127,"title":{},"body":{"interfaces/Channel.html":{},"interfaces/MeasuredParameters.html":{},"interfaces/QuickResponseMeasurement.html":{},"interfaces/RowInfo.html":{},"interfaces/SensorObj.html":{},"interfaces/Test.html":{},"interfaces/TestChannel.html":{},"interfaces/TestChannelDeepChannel.html":{},"interfaces/TestResultDocument.html":{},"interfaces/_TestResultDeep.html":{},"interfaces/_TestResultLight.html":{}}}],["testwithauth",{"_index":2172,"title":{},"body":{"injectables/TestService.html":{}}}],["text",{"_index":1022,"title":{},"body":{"components/CellsComponent.html":{},"interfaces/ChannelFields.html":{},"components/DashboardComponent.html":{},"components/DevicesDefaultComponent.html":{},"interfaces/FileField.html":{},"components/FootNavComponent.html":{},"components/HomeComponent.html":{},"interfaces/InputField.html":{},"interfaces/PayLoad.html":{},"interfaces/SelectField.html":{},"components/TestChambersComponent.html":{},"interfaces/TestFormat.html":{},"interfaces/TextField.html":{},"miscellaneous/variables.html":{}}}],["text/csv",{"_index":2069,"title":{},"body":{"injectables/TestChamberService.html":{}}}],["text/csv;charset=utf",{"_index":1399,"title":{},"body":{"interfaces/Charts.html":{}}}],["textarea",{"_index":312,"title":{},"body":{"components/AddCellsComponent.html":{},"components/AddTestChamberComponent.html":{},"components/EditCellsComponent.html":{},"components/EditTestChamberComponent.html":{}}}],["textfield",{"_index":1156,"title":{"interfaces/TextField.html":{}},"body":{"interfaces/ChannelFields.html":{},"interfaces/FileField.html":{},"interfaces/InputField.html":{},"interfaces/PayLoad.html":{},"interfaces/SelectField.html":{},"interfaces/TestFormat.html":{},"interfaces/TextField.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["thirdresponse",{"_index":1837,"title":{},"body":{"components/HeadNavComponent.html":{}}}],["this._cellservice",{"_index":174,"title":{},"body":{"components/AddCellsComponent.html":{},"components/EditCellsComponent.html":{}}}],["this._cellservice.addcell(this.cell).subscribe",{"_index":212,"title":{},"body":{"components/AddCellsComponent.html":{}}}],["this._cellservice.getcells().subscribe",{"_index":971,"title":{},"body":{"components/CellsComponent.html":{},"components/ViewCellsComponent.html":{}}}],["this._cellservice.getcells(this.cellid",{"_index":1682,"title":{},"body":{"components/EditCellsComponent.html":{}}}],["this._cellservice.updatecell(this.cell).subscribe",{"_index":1695,"title":{},"body":{"components/EditCellsComponent.html":{}}}],["this._componentstoreservice.sendtoastmsg",{"_index":216,"title":{},"body":{"components/AddCellsComponent.html":{},"components/AddTestChamberComponent.html":{},"interfaces/Charts.html":{},"components/EditCellsComponent.html":{},"components/EditTestChamberComponent.html":{}}}],["this._testchamber.getchambers().subscribe",{"_index":2085,"title":{},"body":{"components/TestChambersComponent.html":{}}}],["this._testchamberservice",{"_index":358,"title":{},"body":{"components/AddTestChamberComponent.html":{},"interfaces/Charts.html":{},"components/EditTestChamberComponent.html":{},"components/ShowAllTestsResultComponent.html":{},"components/ViewTestChambersComponent.html":{}}}],["this._testchamberservice.getchambers().subscribe",{"_index":2281,"title":{},"body":{"components/ViewTestChambersComponent.html":{}}}],["this._testchamberservice.getchambers(this.chamberid",{"_index":1726,"title":{},"body":{"components/EditTestChamberComponent.html":{}}}],["this._testchamberservice.getlivetests().subscribe",{"_index":725,"title":{},"body":{"components/BatteryTestComponent.html":{}}}],["this._testchamberservice.gettestdata",{"_index":1339,"title":{},"body":{"interfaces/Charts.html":{}}}],["this._user.createuser(this.authuser",{"_index":1835,"title":{},"body":{"components/HeadNavComponent.html":{}}}],["this._user.verifyuser(this.authuser",{"_index":1829,"title":{},"body":{"components/HeadNavComponent.html":{}}}],["this._userservice",{"_index":239,"title":{},"body":{"components/AddCellsComponent.html":{},"components/AddTestChamberComponent.html":{},"components/EditCellsComponent.html":{},"components/EditTestChamberComponent.html":{}}}],["this.allcharts",{"_index":1229,"title":{},"body":{"interfaces/Charts.html":{}}}],["this.allcharts.push(chart",{"_index":1262,"title":{},"body":{"interfaces/Charts.html":{}}}],["this.alltestintervalid",{"_index":1942,"title":{},"body":{"components/ShowAllTestsResultComponent.html":{}}}],["this.alltests",{"_index":1948,"title":{},"body":{"components/ShowAllTestsResultComponent.html":{}}}],["this.alltestssource",{"_index":1940,"title":{},"body":{"components/ShowAllTestsResultComponent.html":{}}}],["this.alltestssource.filter((item",{"_index":1949,"title":{},"body":{"components/ShowAllTestsResultComponent.html":{}}}],["this.alltestssource.length",{"_index":1946,"title":{},"body":{"components/ShowAllTestsResultComponent.html":{}}}],["this.alltestsub",{"_index":1944,"title":{},"body":{"components/ShowAllTestsResultComponent.html":{}}}],["this.alltestsub?.unsubscribe",{"_index":1943,"title":{},"body":{"components/ShowAllTestsResultComponent.html":{}}}],["this.appendnewdata",{"_index":1291,"title":{},"body":{"interfaces/Charts.html":{}}}],["this.appendnewdata(blankdata",{"_index":1284,"title":{},"body":{"interfaces/Charts.html":{}}}],["this.auth.isauthenticated$.pipe",{"_index":670,"title":{},"body":{"guards/AuthGuard.html":{}}}],["this.auth.loginwithredirect({redirect_uri:\"https://www.iitg.ac.in/e_mobility/i",{"_index":1843,"title":{},"body":{"components/HeadNavComponent.html":{}}}],["this.auth.loginwithredirect({redirect_uri:environment.appuri",{"_index":673,"title":{},"body":{"guards/AuthGuard.html":{}}}],["this.auth.logout({returnto:\"https://www.iitg.ac.in/e_mobility/i",{"_index":1845,"title":{},"body":{"components/HeadNavComponent.html":{}}}],["this.auth.user$.pipe",{"_index":1825,"title":{},"body":{"components/HeadNavComponent.html":{}}}],["this.authuser",{"_index":1827,"title":{},"body":{"components/HeadNavComponent.html":{}}}],["this.availablecells",{"_index":2219,"title":{},"body":{"components/ViewCellsComponent.html":{}}}],["this.availablecells.find",{"_index":2225,"title":{},"body":{"components/ViewCellsComponent.html":{}}}],["this.availablecellssource",{"_index":2213,"title":{},"body":{"components/ViewCellsComponent.html":{}}}],["this.availablecellssource.filter((item",{"_index":2220,"title":{},"body":{"components/ViewCellsComponent.html":{}}}],["this.availablecellssource.length",{"_index":2215,"title":{},"body":{"components/ViewCellsComponent.html":{}}}],["this.availabletestchambers",{"_index":2286,"title":{},"body":{"components/ViewTestChambersComponent.html":{}}}],["this.availabletestchambers.find",{"_index":2289,"title":{},"body":{"components/ViewTestChambersComponent.html":{}}}],["this.availabletestchamberssource",{"_index":2282,"title":{},"body":{"components/ViewTestChambersComponent.html":{}}}],["this.availabletestchamberssource.filter",{"_index":2287,"title":{},"body":{"components/ViewTestChambersComponent.html":{}}}],["this.availabletestchamberssource.length",{"_index":2283,"title":{},"body":{"components/ViewTestChambersComponent.html":{}}}],["this.breadcrumbs",{"_index":829,"title":{},"body":{"interfaces/BreadCrumbs.html":{},"components/DashboardComponent.html":{}}}],["this.breadcrumbs.push({name:'dashboard',url:'./',status:'disabled",{"_index":839,"title":{},"body":{"interfaces/BreadCrumbs.html":{},"components/DashboardComponent.html":{}}}],["this.breadcrumbs.push({name:'dashboard',url:'./../dashboard',status:'active",{"_index":836,"title":{},"body":{"interfaces/BreadCrumbs.html":{},"components/DashboardComponent.html":{}}}],["this.breadcrumbs.push({name:'device",{"_index":837,"title":{},"body":{"interfaces/BreadCrumbs.html":{},"components/DashboardComponent.html":{}}}],["this.cell",{"_index":1684,"title":{},"body":{"components/EditCellsComponent.html":{}}}],["this.cell.assignedusers",{"_index":1694,"title":{},"body":{"components/EditCellsComponent.html":{}}}],["this.cell.assignedusers?.foreach((user",{"_index":1688,"title":{},"body":{"components/EditCellsComponent.html":{}}}],["this.cell.cellchemistry",{"_index":189,"title":{},"body":{"components/AddCellsComponent.html":{},"components/EditCellsComponent.html":{}}}],["this.cell.cellquantity",{"_index":179,"title":{},"body":{"components/AddCellsComponent.html":{}}}],["this.cell.formfactor",{"_index":187,"title":{},"body":{"components/AddCellsComponent.html":{},"components/EditCellsComponent.html":{}}}],["this.cell.manufacturer",{"_index":183,"title":{},"body":{"components/AddCellsComponent.html":{},"components/EditCellsComponent.html":{}}}],["this.cell.maxvolt",{"_index":197,"title":{},"body":{"components/AddCellsComponent.html":{},"components/EditCellsComponent.html":{}}}],["this.cell.minvolt",{"_index":199,"title":{},"body":{"components/AddCellsComponent.html":{},"components/EditCellsComponent.html":{}}}],["this.cell.nomcap",{"_index":193,"title":{},"body":{"components/AddCellsComponent.html":{},"components/EditCellsComponent.html":{}}}],["this.cell.nomcurr",{"_index":195,"title":{},"body":{"components/AddCellsComponent.html":{},"components/EditCellsComponent.html":{}}}],["this.cell.nomvolt",{"_index":191,"title":{},"body":{"components/AddCellsComponent.html":{},"components/EditCellsComponent.html":{}}}],["this.cell.type",{"_index":185,"title":{},"body":{"components/AddCellsComponent.html":{},"components/EditCellsComponent.html":{}}}],["this.cell.users",{"_index":211,"title":{},"body":{"components/AddCellsComponent.html":{}}}],["this.cellid",{"_index":1680,"title":{},"body":{"components/EditCellsComponent.html":{}}}],["this.celltemplates",{"_index":177,"title":{},"body":{"components/AddCellsComponent.html":{},"components/EditCellsComponent.html":{}}}],["this.chamber",{"_index":1728,"title":{},"body":{"components/EditTestChamberComponent.html":{}}}],["this.chamber.assignedusers",{"_index":357,"title":{},"body":{"components/AddTestChamberComponent.html":{},"components/EditTestChamberComponent.html":{}}}],["this.chamber.assignedusers?.foreach((user",{"_index":1730,"title":{},"body":{"components/EditTestChamberComponent.html":{}}}],["this.chamberid",{"_index":1237,"title":{},"body":{"interfaces/Charts.html":{},"components/EditTestChamberComponent.html":{}}}],["this.changestatus('paused",{"_index":1382,"title":{},"body":{"interfaces/Charts.html":{}}}],["this.changestatus('running",{"_index":1380,"title":{},"body":{"interfaces/Charts.html":{}}}],["this.changestatus('stopped",{"_index":1385,"title":{},"body":{"interfaces/Charts.html":{}}}],["this.changetoaststatus(false",{"_index":532,"title":{},"body":{"components/AppComponent.html":{}}}],["this.changetoaststatus(true",{"_index":530,"title":{},"body":{"components/AppComponent.html":{}}}],["this.charts?.foreach((chart",{"_index":1293,"title":{},"body":{"interfaces/Charts.html":{}}}],["this.chartsub",{"_index":1288,"title":{},"body":{"interfaces/Charts.html":{}}}],["this.chartsub?.unsubscribe",{"_index":1222,"title":{},"body":{"interfaces/Charts.html":{}}}],["this.clipboard.copy(this.selectedtestchamber.apikey",{"_index":2295,"title":{},"body":{"components/ViewTestChambersComponent.html":{}}}],["this.componentstoreservice.sendtoastmsg",{"_index":2296,"title":{},"body":{"components/ViewTestChambersComponent.html":{}}}],["this.connsub",{"_index":1374,"title":{},"body":{"interfaces/Charts.html":{},"components/ViewTestChambersComponent.html":{}}}],["this.connsub?.unsubscribe",{"_index":1373,"title":{},"body":{"interfaces/Charts.html":{},"components/ViewTestChambersComponent.html":{}}}],["this.createchart(channelquickresponse",{"_index":1234,"title":{},"body":{"interfaces/Charts.html":{}}}],["this.createchart(data",{"_index":1240,"title":{},"body":{"interfaces/Charts.html":{}}}],["this.currentword",{"_index":1581,"title":{},"body":{"components/DevicesDefaultComponent.html":{}}}],["this.delay",{"_index":723,"title":{},"body":{"components/BatteryTestComponent.html":{}}}],["this.detecturlchanges",{"_index":816,"title":{},"body":{"interfaces/BreadCrumbs.html":{},"components/DashboardComponent.html":{}}}],["this.devicedata.getdevicedatalight().subscribe",{"_index":840,"title":{},"body":{"interfaces/BreadCrumbs.html":{},"components/DashboardComponent.html":{}}}],["this.deviceid",{"_index":1511,"title":{},"body":{"components/DeviceDataComponent.html":{}}}],["this.devices",{"_index":842,"title":{},"body":{"interfaces/BreadCrumbs.html":{},"components/DashboardComponent.html":{}}}],["this.dot",{"_index":434,"title":{},"body":{"classes/Anim.html":{},"classes/Dot.html":{},"components/HomeComponent.html":{}}}],["this.dot.move(u",{"_index":443,"title":{},"body":{"classes/Anim.html":{},"classes/Dot.html":{},"components/HomeComponent.html":{}}}],["this.duration",{"_index":435,"title":{},"body":{"classes/Anim.html":{},"classes/Dot.html":{},"components/HomeComponent.html":{}}}],["this.filter",{"_index":1941,"title":{},"body":{"components/ShowAllTestsResultComponent.html":{},"components/ViewCellsComponent.html":{},"components/ViewTestChambersComponent.html":{}}}],["this.gettests",{"_index":720,"title":{},"body":{"components/BatteryTestComponent.html":{}}}],["this.http",{"_index":924,"title":{},"body":{"injectables/CellService.html":{},"injectables/TestChamberService.html":{},"injectables/UserService.html":{},"interfaces/_User.html":{},"interfaces/_UserLight.html":{}}}],["this.http.get(\"http://localhost:8080/api/protected",{"_index":2175,"title":{},"body":{"injectables/TestService.html":{}}}],["this.http.get('/e_mobility/i",{"_index":1551,"title":{},"body":{"injectables/DeviceDataService.html":{},"injectables/TestDataService.html":{}}}],["this.intervalid",{"_index":721,"title":{},"body":{"components/BatteryTestComponent.html":{}}}],["this.isanycellavailable",{"_index":972,"title":{},"body":{"components/CellsComponent.html":{}}}],["this.isanytestchamberavailable",{"_index":2088,"title":{},"body":{"components/TestChambersComponent.html":{}}}],["this.isapivisible",{"_index":2291,"title":{},"body":{"components/ViewTestChambersComponent.html":{}}}],["this.isconnected",{"_index":1377,"title":{},"body":{"interfaces/Charts.html":{},"components/ViewTestChambersComponent.html":{}}}],["this.isconnectedintervalid",{"_index":1350,"title":{},"body":{"interfaces/Charts.html":{},"components/ViewTestChambersComponent.html":{}}}],["this.isonoverview",{"_index":818,"title":{},"body":{"interfaces/BreadCrumbs.html":{},"components/DashboardComponent.html":{}}}],["this.issavedisabled",{"_index":201,"title":{},"body":{"components/AddCellsComponent.html":{}}}],["this.istestinfoviewenabled",{"_index":731,"title":{},"body":{"components/BatteryTestComponent.html":{},"components/ShowAllTestsResultComponent.html":{}}}],["this.keepupdatingchart(channelquickresponse",{"_index":1235,"title":{},"body":{"interfaces/Charts.html":{}}}],["this.keepupdatingchart(data",{"_index":1244,"title":{},"body":{"interfaces/Charts.html":{}}}],["this.livetests",{"_index":726,"title":{},"body":{"components/BatteryTestComponent.html":{}}}],["this.location.replacestate",{"_index":488,"title":{},"body":{"classes/Anim.html":{},"components/BatteryTestComponent.html":{},"components/CellsComponent.html":{},"components/DevicesDefaultComponent.html":{},"classes/Dot.html":{},"components/HomeComponent.html":{},"components/ShowAllTestsResultComponent.html":{}}}],["this.maxnoofchannels",{"_index":2002,"title":{},"body":{"classes/TestChamber.html":{},"interfaces/_TestChamber.html":{}}}],["this.maxnoofdatapoints",{"_index":1324,"title":{},"body":{"interfaces/Charts.html":{}}}],["this.measurementupdateintervalid",{"_index":1287,"title":{},"body":{"interfaces/Charts.html":{}}}],["this.modalbody",{"_index":1354,"title":{},"body":{"interfaces/Charts.html":{},"components/EditCellsComponent.html":{},"components/EditTestChamberComponent.html":{}}}],["this.modalservice.open(this.modal",{"_index":1361,"title":{},"body":{"interfaces/Charts.html":{},"components/EditCellsComponent.html":{},"components/EditTestChamberComponent.html":{}}}],["this.modaltitle",{"_index":1352,"title":{},"body":{"interfaces/Charts.html":{},"components/EditCellsComponent.html":{},"components/EditTestChamberComponent.html":{}}}],["this.noofdevices",{"_index":844,"title":{},"body":{"interfaces/BreadCrumbs.html":{},"components/DashboardComponent.html":{}}}],["this.noofdevicesconnected",{"_index":846,"title":{},"body":{"interfaces/BreadCrumbs.html":{},"components/DashboardComponent.html":{}}}],["this.onfinish",{"_index":442,"title":{},"body":{"classes/Anim.html":{},"classes/Dot.html":{},"components/HomeComponent.html":{}}}],["this.placeholdermsg",{"_index":2212,"title":{},"body":{"components/ViewCellsComponent.html":{},"components/ViewTestChambersComponent.html":{}}}],["this.quickresponses.find",{"_index":1231,"title":{},"body":{"interfaces/Charts.html":{}}}],["this.quickresponses.push(data",{"_index":1241,"title":{},"body":{"interfaces/Charts.html":{}}}],["this.route",{"_index":224,"title":{},"body":{"components/AddCellsComponent.html":{},"components/AddTestChamberComponent.html":{},"interfaces/Charts.html":{},"components/EditCellsComponent.html":{},"components/EditTestChamberComponent.html":{}}}],["this.route.parammap.pipe",{"_index":1678,"title":{},"body":{"components/EditCellsComponent.html":{},"components/EditTestChamberComponent.html":{}}}],["this.route.parammap.subscribe((params",{"_index":1510,"title":{},"body":{"components/DeviceDataComponent.html":{}}}],["this.router.events.subscribe(data",{"_index":820,"title":{},"body":{"interfaces/BreadCrumbs.html":{},"components/DashboardComponent.html":{}}}],["this.router.navigate(['../../view",{"_index":1697,"title":{},"body":{"components/EditCellsComponent.html":{},"components/EditTestChamberComponent.html":{}}}],["this.router.navigate(['../view",{"_index":222,"title":{},"body":{"components/AddCellsComponent.html":{},"components/AddTestChamberComponent.html":{}}}],["this.router.navigate([url",{"_index":1369,"title":{},"body":{"interfaces/Charts.html":{}}}],["this.router.url",{"_index":1367,"title":{},"body":{"interfaces/Charts.html":{}}}],["this.router.url.split",{"_index":831,"title":{},"body":{"interfaces/BreadCrumbs.html":{},"components/DashboardComponent.html":{}}}],["this.run",{"_index":439,"title":{},"body":{"classes/Anim.html":{},"classes/Dot.html":{},"components/HomeComponent.html":{}}}],["this.sampledata(prevmeasurements.chamberhum",{"_index":1332,"title":{},"body":{"interfaces/Charts.html":{}}}],["this.sampledata(prevmeasurements.chambertemp",{"_index":1333,"title":{},"body":{"interfaces/Charts.html":{}}}],["this.sampledata(prevmeasurements.current",{"_index":1330,"title":{},"body":{"interfaces/Charts.html":{}}}],["this.sampledata(prevmeasurements.time",{"_index":1329,"title":{},"body":{"interfaces/Charts.html":{}}}],["this.sampledata(prevmeasurements.voltage",{"_index":1331,"title":{},"body":{"interfaces/Charts.html":{}}}],["this.sampledata(tempobj.values",{"_index":1335,"title":{},"body":{"interfaces/Charts.html":{}}}],["this.searchid.length",{"_index":1947,"title":{},"body":{"components/ShowAllTestsResultComponent.html":{}}}],["this.searchstr.length",{"_index":2218,"title":{},"body":{"components/ViewCellsComponent.html":{},"components/ViewTestChambersComponent.html":{}}}],["this.selectedcell",{"_index":2224,"title":{},"body":{"components/ViewCellsComponent.html":{}}}],["this.selectedcelltemplate?.cellchemistry",{"_index":190,"title":{},"body":{"components/AddCellsComponent.html":{},"components/EditCellsComponent.html":{}}}],["this.selectedcelltemplate?.formfactor",{"_index":188,"title":{},"body":{"components/AddCellsComponent.html":{},"components/EditCellsComponent.html":{}}}],["this.selectedcelltemplate?.manufacturer",{"_index":184,"title":{},"body":{"components/AddCellsComponent.html":{},"components/EditCellsComponent.html":{}}}],["this.selectedcelltemplate?.maxvoltage",{"_index":198,"title":{},"body":{"components/AddCellsComponent.html":{},"components/EditCellsComponent.html":{}}}],["this.selectedcelltemplate?.minvoltage",{"_index":200,"title":{},"body":{"components/AddCellsComponent.html":{},"components/EditCellsComponent.html":{}}}],["this.selectedcelltemplate?.nomcapacity",{"_index":194,"title":{},"body":{"components/AddCellsComponent.html":{},"components/EditCellsComponent.html":{}}}],["this.selectedcelltemplate?.nomcurrent",{"_index":196,"title":{},"body":{"components/AddCellsComponent.html":{},"components/EditCellsComponent.html":{}}}],["this.selectedcelltemplate?.nomvoltage",{"_index":192,"title":{},"body":{"components/AddCellsComponent.html":{},"components/EditCellsComponent.html":{}}}],["this.selectedcelltemplate?.type",{"_index":186,"title":{},"body":{"components/AddCellsComponent.html":{},"components/EditCellsComponent.html":{}}}],["this.selectedtestchamber",{"_index":2288,"title":{},"body":{"components/ViewTestChambersComponent.html":{}}}],["this.selectedtestchamber.apikey",{"_index":2290,"title":{},"body":{"components/ViewTestChambersComponent.html":{}}}],["this.selectedtestchamber?._id",{"_index":2284,"title":{},"body":{"components/ViewTestChambersComponent.html":{}}}],["this.selecteduser",{"_index":205,"title":{},"body":{"components/AddCellsComponent.html":{},"components/AddTestChamberComponent.html":{},"components/EditCellsComponent.html":{}}}],["this.selecteduser.foreach((user",{"_index":244,"title":{},"body":{"components/AddCellsComponent.html":{},"components/AddTestChamberComponent.html":{},"components/EditCellsComponent.html":{}}}],["this.selecteduser?.foreach((user",{"_index":355,"title":{},"body":{"components/AddTestChamberComponent.html":{}}}],["this.selectedusersread",{"_index":1686,"title":{},"body":{"components/EditCellsComponent.html":{},"components/EditTestChamberComponent.html":{}}}],["this.selectedusersread.foreach((user",{"_index":1692,"title":{},"body":{"components/EditCellsComponent.html":{},"components/EditTestChamberComponent.html":{}}}],["this.selectedusersread.push",{"_index":1690,"title":{},"body":{"components/EditCellsComponent.html":{},"components/EditTestChamberComponent.html":{}}}],["this.selectedusersread?.foreach((user",{"_index":1731,"title":{},"body":{"components/EditTestChamberComponent.html":{}}}],["this.selecteduserswrite",{"_index":1687,"title":{},"body":{"components/EditCellsComponent.html":{},"components/EditTestChamberComponent.html":{}}}],["this.selecteduserswrite.foreach((user",{"_index":1693,"title":{},"body":{"components/EditCellsComponent.html":{},"components/EditTestChamberComponent.html":{}}}],["this.selecteduserswrite.push",{"_index":1691,"title":{},"body":{"components/EditCellsComponent.html":{},"components/EditTestChamberComponent.html":{}}}],["this.selecteduserswrite?.foreach((user",{"_index":1732,"title":{},"body":{"components/EditTestChamberComponent.html":{}}}],["this.showchart",{"_index":1220,"title":{},"body":{"interfaces/Charts.html":{}}}],["this.showspinnerbutton",{"_index":203,"title":{},"body":{"components/AddCellsComponent.html":{},"components/AddTestChamberComponent.html":{},"components/EditCellsComponent.html":{},"components/EditTestChamberComponent.html":{}}}],["this.showtoast",{"_index":536,"title":{},"body":{"components/AppComponent.html":{}}}],["this.showtoastmsg(msg",{"_index":524,"title":{},"body":{"components/AppComponent.html":{}}}],["this.sprite",{"_index":421,"title":{},"body":{"classes/Anim.html":{},"classes/Dot.html":{},"components/HomeComponent.html":{}}}],["this.sprite.setattribute('transform",{"_index":431,"title":{},"body":{"classes/Anim.html":{},"classes/Dot.html":{},"components/HomeComponent.html":{}}}],["this.start(this.duration",{"_index":448,"title":{},"body":{"classes/Anim.html":{},"classes/Dot.html":{},"components/HomeComponent.html":{}}}],["this.store.sendtoastmsg({msg:'something",{"_index":849,"title":{},"body":{"interfaces/BreadCrumbs.html":{},"components/DashboardComponent.html":{}}}],["this.store.toastmsg$.subscribe((msg",{"_index":523,"title":{},"body":{"components/AppComponent.html":{}}}],["this.sub",{"_index":724,"title":{},"body":{"components/BatteryTestComponent.html":{},"components/HeadNavComponent.html":{}}}],["this.sub?.unsubscribe",{"_index":727,"title":{},"body":{"components/BatteryTestComponent.html":{},"components/HeadNavComponent.html":{}}}],["this.subs.foreach((sub",{"_index":362,"title":{},"body":{"components/AddTestChamberComponent.html":{},"components/BatteryTestComponent.html":{},"components/CellsComponent.html":{},"interfaces/Charts.html":{},"components/DeviceDataComponent.html":{},"components/EditTestChamberComponent.html":{},"components/TestChambersComponent.html":{},"components/ViewCellsComponent.html":{},"components/ViewTestChambersComponent.html":{}}}],["this.subs.push(sub",{"_index":361,"title":{},"body":{"components/AddTestChamberComponent.html":{},"components/CellsComponent.html":{},"interfaces/Charts.html":{},"components/DeviceDataComponent.html":{},"components/EditCellsComponent.html":{},"components/EditTestChamberComponent.html":{},"components/ShowAllTestsResultComponent.html":{},"components/TestChambersComponent.html":{},"components/ViewCellsComponent.html":{},"components/ViewTestChambersComponent.html":{}}}],["this.subs?.foreach((sub",{"_index":249,"title":{},"body":{"components/AddCellsComponent.html":{},"components/EditCellsComponent.html":{}}}],["this.subs?.foreach((subs",{"_index":1954,"title":{},"body":{"components/ShowAllTestsResultComponent.html":{}}}],["this.subs?.push(sub",{"_index":181,"title":{},"body":{"components/AddCellsComponent.html":{}}}],["this.subscriptions?.foreach(subs",{"_index":854,"title":{},"body":{"interfaces/BreadCrumbs.html":{},"components/DashboardComponent.html":{}}}],["this.subscriptions?.push(subs",{"_index":852,"title":{},"body":{"interfaces/BreadCrumbs.html":{},"components/DashboardComponent.html":{}}}],["this.targetsamplesize",{"_index":1328,"title":{},"body":{"interfaces/Charts.html":{}}}],["this.testid",{"_index":1238,"title":{},"body":{"interfaces/Charts.html":{}}}],["this.testinfo",{"_index":1342,"title":{},"body":{"interfaces/Charts.html":{}}}],["this.testinfo?.status",{"_index":1347,"title":{},"body":{"interfaces/Charts.html":{}}}],["this.testinfointervalid",{"_index":1344,"title":{},"body":{"interfaces/Charts.html":{}}}],["this.testinfosub",{"_index":1340,"title":{},"body":{"interfaces/Charts.html":{}}}],["this.testinfosub?.unsubscribe",{"_index":1343,"title":{},"body":{"interfaces/Charts.html":{}}}],["this.toastcolor",{"_index":528,"title":{},"body":{"components/AppComponent.html":{}}}],["this.toastmsg",{"_index":526,"title":{},"body":{"components/AppComponent.html":{}}}],["this.toastmsgsource.asobservable",{"_index":1417,"title":{},"body":{"injectables/ComponentStoreService.html":{}}}],["this.toastmsgsource.next(_msg",{"_index":1428,"title":{},"body":{"injectables/ComponentStoreService.html":{}}}],["this.toggleshowchart",{"_index":1227,"title":{},"body":{"interfaces/Charts.html":{}}}],["this.track",{"_index":423,"title":{},"body":{"classes/Anim.html":{},"classes/Dot.html":{},"components/HomeComponent.html":{}}}],["this.track.getpointatlength(u",{"_index":429,"title":{},"body":{"classes/Anim.html":{},"classes/Dot.html":{},"components/HomeComponent.html":{}}}],["this.track.gettotallength",{"_index":430,"title":{},"body":{"classes/Anim.html":{},"classes/Dot.html":{},"components/HomeComponent.html":{}}}],["this.tzero",{"_index":436,"title":{},"body":{"classes/Anim.html":{},"classes/Dot.html":{},"components/HomeComponent.html":{}}}],["this.updateconnection",{"_index":1349,"title":{},"body":{"interfaces/Charts.html":{},"components/ViewTestChambersComponent.html":{}}}],["this.updateduptoindex",{"_index":1290,"title":{},"body":{"interfaces/Charts.html":{}}}],["this.users",{"_index":234,"title":{},"body":{"components/AddCellsComponent.html":{},"components/AddTestChamberComponent.html":{},"components/EditCellsComponent.html":{},"components/EditTestChamberComponent.html":{}}}],["this.usersub",{"_index":238,"title":{},"body":{"components/AddCellsComponent.html":{},"components/AddTestChamberComponent.html":{},"components/EditCellsComponent.html":{},"components/EditTestChamberComponent.html":{}}}],["this.usersub?.unsubscribe",{"_index":233,"title":{},"body":{"components/AddCellsComponent.html":{},"components/AddTestChamberComponent.html":{},"components/EditCellsComponent.html":{},"components/EditTestChamberComponent.html":{}}}],["this.words.length",{"_index":1582,"title":{},"body":{"components/DevicesDefaultComponent.html":{}}}],["this.x",{"_index":531,"title":{},"body":{"components/AppComponent.html":{}}}],["those",{"_index":2134,"title":{},"body":{"components/TestChambersComponent.html":{}}}],["through",{"_index":483,"title":{},"body":{"classes/Anim.html":{},"classes/Dot.html":{},"components/HomeComponent.html":{},"components/NoResultComponent.html":{},"components/TestChambersComponent.html":{}}}],["throwerror",{"_index":919,"title":{},"body":{"injectables/CellService.html":{},"injectables/DeviceDataService.html":{},"injectables/TestChamberService.html":{},"injectables/TestDataService.html":{},"injectables/UserService.html":{},"interfaces/_User.html":{},"interfaces/_UserLight.html":{}}}],["time",{"_index":1135,"title":{},"body":{"interfaces/Channel.html":{},"interfaces/DriveCycle.html":{},"interfaces/MeasuredParameters.html":{},"interfaces/QuickResponseMeasurement.html":{},"interfaces/RowInfo.html":{},"interfaces/SensorObj.html":{},"interfaces/TestChannel.html":{},"interfaces/TestChannelDeepChannel.html":{},"interfaces/TestResultDocument.html":{},"interfaces/_TestResultDeep.html":{},"interfaces/_TestResultLight.html":{}}}],["time(s",{"_index":1260,"title":{},"body":{"interfaces/Charts.html":{}}}],["time:number",{"_index":1653,"title":{},"body":{"interfaces/DriveCycle.html":{}}}],["timeout",{"_index":1393,"title":{},"body":{"interfaces/Charts.html":{},"injectables/ComponentStoreService.html":{},"components/EditCellsComponent.html":{},"components/EditTestChamberComponent.html":{},"interfaces/ToastMsg.html":{},"components/ViewTestChambersComponent.html":{}}}],["timeout?:number",{"_index":2180,"title":{},"body":{"interfaces/ToastMsg.html":{}}}],["timestamp",{"_index":1524,"title":{},"body":{"interfaces/DeviceDataLight.html":{}}}],["timestamp:any",{"_index":1541,"title":{},"body":{"interfaces/DeviceDataLight.html":{}}}],["title",{"_index":496,"title":{},"body":{"components/AppComponent.html":{},"components/DashboardComponent.html":{}}}],["title>.intro",{"_index":1898,"title":{},"body":{"components/HomeComponent.html":{}}}],["toast",{"_index":540,"title":{},"body":{"components/AppComponent.html":{},"injectables/ComponentStoreService.html":{}}}],["toastcolor",{"_index":497,"title":{},"body":{"components/AppComponent.html":{}}}],["toastmsg",{"_index":498,"title":{"interfaces/ToastMsg.html":{}},"body":{"components/AppComponent.html":{},"injectables/ComponentStoreService.html":{},"interfaces/ToastMsg.html":{},"coverage.html":{}}}],["toastmsgsource",{"_index":1412,"title":{},"body":{"injectables/ComponentStoreService.html":{}}}],["toggle::after",{"_index":1865,"title":{},"body":{"components/HeadNavComponent.html":{}}}],["toggleshowchart",{"_index":1219,"title":{},"body":{"interfaces/Charts.html":{}}}],["tolowercase",{"_index":1951,"title":{},"body":{"components/ShowAllTestsResultComponent.html":{},"components/ViewCellsComponent.html":{},"components/ViewTestChambersComponent.html":{}}}],["tools",{"_index":1586,"title":{},"body":{"components/DevicesDefaultComponent.html":{}}}],["top",{"_index":537,"title":{},"body":{"components/AppComponent.html":{},"components/BatteryTestComponent.html":{},"components/CellsComponent.html":{},"components/DashboardComponent.html":{},"components/DevicesDefaultComponent.html":{},"components/EditCellsComponent.html":{},"components/EditTestChamberComponent.html":{},"components/FootNavComponent.html":{},"components/HeadNavComponent.html":{},"components/HomeComponent.html":{},"components/TestChambersComponent.html":{},"components/ViewCellsComponent.html":{},"components/ViewTestChambersComponent.html":{}}}],["top:10px",{"_index":1497,"title":{},"body":{"components/DashboardComponent.html":{}}}],["top:20px",{"_index":307,"title":{},"body":{"components/AddCellsComponent.html":{},"components/AddTestChamberComponent.html":{}}}],["totalrows",{"_index":1116,"title":{},"body":{"interfaces/Channel.html":{},"interfaces/MeasuredParameters.html":{},"interfaces/QuickResponseMeasurement.html":{},"interfaces/RowInfo.html":{},"interfaces/SensorObj.html":{},"interfaces/TestChannel.html":{},"interfaces/TestChannelDeepChannel.html":{},"interfaces/TestResultDocument.html":{},"interfaces/_TestResultDeep.html":{},"interfaces/_TestResultLight.html":{}}}],["tr",{"_index":2249,"title":{},"body":{"components/ViewCellsComponent.html":{}}}],["tr:hover",{"_index":1961,"title":{},"body":{"components/ShowAllTestsResultComponent.html":{},"components/ViewCellsComponent.html":{},"components/ViewTestChambersComponent.html":{}}}],["track",{"_index":372,"title":{},"body":{"components/AddTestChamberComponent.html":{},"classes/Anim.html":{},"classes/Dot.html":{},"components/EditTestChamberComponent.html":{},"components/HomeComponent.html":{}}}],["tracking",{"_index":984,"title":{},"body":{"components/CellsComponent.html":{}}}],["transform",{"_index":1056,"title":{},"body":{"components/CellsComponent.html":{},"components/DevicesDefaultComponent.html":{},"components/FootNavComponent.html":{},"components/HeadNavComponent.html":{},"components/TestChambersComponent.html":{}}}],["transition",{"_index":1569,"title":{},"body":{"components/DevicesDefaultComponent.html":{},"components/FootNavComponent.html":{}}}],["transition(':enter",{"_index":1573,"title":{},"body":{"components/DevicesDefaultComponent.html":{}}}],["transition(':leave",{"_index":1577,"title":{},"body":{"components/DevicesDefaultComponent.html":{}}}],["translate(${p.x",{"_index":432,"title":{},"body":{"classes/Anim.html":{},"classes/Dot.html":{},"components/HomeComponent.html":{}}}],["translatey",{"_index":1579,"title":{},"body":{"components/DevicesDefaultComponent.html":{}}}],["translatey(0",{"_index":1576,"title":{},"body":{"components/DevicesDefaultComponent.html":{}}}],["translatey(40",{"_index":1574,"title":{},"body":{"components/DevicesDefaultComponent.html":{}}}],["transparent",{"_index":1871,"title":{},"body":{"components/HeadNavComponent.html":{}}}],["tree",{"_index":8,"title":{},"body":{"components/AddBatteryPackComponent.html":{},"components/AddCellsComponent.html":{},"components/AddTestChamberComponent.html":{},"components/AppComponent.html":{},"components/BatteryPacksComponent.html":{},"components/BatteryTestComponent.html":{},"components/CellsComponent.html":{},"components/DashboardComponent.html":{},"components/DeviceDataComponent.html":{},"components/DevicesComponent.html":{},"components/DevicesDefaultComponent.html":{},"components/DocsComponent.html":{},"components/EditBatteryPackComponent.html":{},"components/EditCellsComponent.html":{},"components/EditTestChamberComponent.html":{},"components/FootNavComponent.html":{},"components/HeadNavComponent.html":{},"components/HomeComponent.html":{},"components/NoResultComponent.html":{},"components/ShowAllTestsResultComponent.html":{},"components/TestChambersComponent.html":{},"components/ViewBatteryPacksComponent.html":{},"components/ViewCellsComponent.html":{},"components/ViewTestChambersComponent.html":{}}}],["trends",{"_index":995,"title":{},"body":{"components/CellsComponent.html":{}}}],["trigger",{"_index":1567,"title":{},"body":{"components/DevicesDefaultComponent.html":{}}}],["trigger('insertremovetrigger",{"_index":1572,"title":{},"body":{"components/DevicesDefaultComponent.html":{}}}],["trim",{"_index":1952,"title":{},"body":{"components/ShowAllTestsResultComponent.html":{},"components/ViewCellsComponent.html":{},"components/ViewTestChambersComponent.html":{}}}],["true",{"_index":202,"title":{},"body":{"components/AddCellsComponent.html":{},"components/AddTestChamberComponent.html":{},"modules/AppModule.html":{},"interfaces/BreadCrumbs.html":{},"components/CellsComponent.html":{},"interfaces/ChannelFields.html":{},"interfaces/Charts.html":{},"components/DashboardComponent.html":{},"components/EditCellsComponent.html":{},"components/EditTestChamberComponent.html":{},"interfaces/FileField.html":{},"interfaces/InputField.html":{},"interfaces/PayLoad.html":{},"interfaces/SelectField.html":{},"components/TestChambersComponent.html":{},"interfaces/TestFormat.html":{},"interfaces/TextField.html":{},"miscellaneous/variables.html":{}}}],["true;//controls",{"_index":805,"title":{},"body":{"interfaces/BreadCrumbs.html":{},"components/DashboardComponent.html":{}}}],["trustconstantresourceurl",{"_index":794,"title":{},"body":{"interfaces/BreadCrumbs.html":{},"components/DashboardComponent.html":{}}}],["try",{"_index":2223,"title":{},"body":{"components/ViewCellsComponent.html":{},"components/ViewTestChambersComponent.html":{}}}],["tslib",{"_index":2371,"title":{},"body":{"dependencies.html":{}}}],["type",{"_index":134,"title":{},"body":{"components/AddCellsComponent.html":{},"components/AddTestChamberComponent.html":{},"classes/Anim.html":{},"components/AppComponent.html":{},"guards/AuthGuard.html":{},"components/BatteryTestComponent.html":{},"interfaces/BreadCrumbs.html":{},"interfaces/Cell.html":{},"classes/CellClass.html":{},"injectables/CellService.html":{},"interfaces/CellTemplate.html":{},"components/CellsComponent.html":{},"interfaces/Channel.html":{},"interfaces/ChannelFields.html":{},"interfaces/Charts.html":{},"injectables/ComponentStoreService.html":{},"components/DashboardComponent.html":{},"components/DeviceDataComponent.html":{},"interfaces/DeviceDataLight.html":{},"injectables/DeviceDataService.html":{},"components/DevicesDefaultComponent.html":{},"classes/Dot.html":{},"interfaces/DriveCycle.html":{},"components/EditCellsComponent.html":{},"components/EditTestChamberComponent.html":{},"interfaces/FileField.html":{},"components/FootNavComponent.html":{},"components/HeadNavComponent.html":{},"components/HomeComponent.html":{},"interfaces/InputField.html":{},"interfaces/MeasuredParameters.html":{},"interfaces/PayLoad.html":{},"interfaces/QuickResponseMeasurement.html":{},"interfaces/RowInfo.html":{},"interfaces/SelectField.html":{},"interfaces/SensorObj.html":{},"components/ShowAllTestsResultComponent.html":{},"interfaces/Test.html":{},"classes/TestChamber.html":{},"injectables/TestChamberService.html":{},"components/TestChambersComponent.html":{},"interfaces/TestChannel.html":{},"interfaces/TestChannelDeepChannel.html":{},"injectables/TestDataService.html":{},"interfaces/TestFormat.html":{},"interfaces/TestResultDocument.html":{},"injectables/TestService.html":{},"interfaces/TextField.html":{},"interfaces/ToastMsg.html":{},"injectables/UserService.html":{},"components/ViewCellsComponent.html":{},"components/ViewTestChambersComponent.html":{},"interfaces/_TestChamber.html":{},"interfaces/_TestResultDeep.html":{},"interfaces/_TestResultLight.html":{},"interfaces/_User.html":{},"interfaces/_UserLight.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["type?:'warning'|'alert'|'notification",{"_index":2179,"title":{},"body":{"interfaces/ToastMsg.html":{}}}],["types",{"_index":1596,"title":{},"body":{"components/DevicesDefaultComponent.html":{}}}],["tzero",{"_index":401,"title":{},"body":{"classes/Anim.html":{},"classes/Dot.html":{},"components/HomeComponent.html":{}}}],["u",{"_index":440,"title":{},"body":{"classes/Anim.html":{},"classes/Dot.html":{},"components/HomeComponent.html":{}}}],["u._id",{"_index":247,"title":{},"body":{"components/AddCellsComponent.html":{},"components/AddTestChamberComponent.html":{},"components/EditCellsComponent.html":{},"components/EditTestChamberComponent.html":{}}}],["ui",{"_index":1780,"title":{},"body":{"components/FootNavComponent.html":{}}}],["ul",{"_index":1036,"title":{},"body":{"components/CellsComponent.html":{},"components/TestChambersComponent.html":{}}}],["ultimate",{"_index":1585,"title":{},"body":{"components/DevicesDefaultComponent.html":{}}}],["undefined",{"_index":155,"title":{},"body":{"components/AddCellsComponent.html":{},"components/AddTestChamberComponent.html":{},"components/AppComponent.html":{},"interfaces/BreadCrumbs.html":{},"interfaces/ChannelFields.html":{},"interfaces/Charts.html":{},"components/DashboardComponent.html":{},"components/EditCellsComponent.html":{},"components/EditTestChamberComponent.html":{},"interfaces/FileField.html":{},"interfaces/InputField.html":{},"interfaces/PayLoad.html":{},"interfaces/SelectField.html":{},"injectables/TestChamberService.html":{},"interfaces/TestFormat.html":{},"interfaces/TextField.html":{},"components/ViewCellsComponent.html":{},"components/ViewTestChambersComponent.html":{}}}],["unique",{"_index":263,"title":{},"body":{"components/AddCellsComponent.html":{},"components/AddTestChamberComponent.html":{},"components/EditCellsComponent.html":{},"components/EditTestChamberComponent.html":{}}}],["unit",{"_index":2395,"title":{},"body":{"index.html":{}}}],["unparalleled",{"_index":2095,"title":{},"body":{"components/TestChambersComponent.html":{}}}],["until",{"_index":1157,"title":{},"body":{"interfaces/ChannelFields.html":{},"interfaces/FileField.html":{},"interfaces/InputField.html":{},"interfaces/PayLoad.html":{},"interfaces/SelectField.html":{},"interfaces/TestFormat.html":{},"interfaces/TextField.html":{},"miscellaneous/variables.html":{}}}],["up",{"_index":1735,"title":{},"body":{"components/EditTestChamberComponent.html":{}}}],["update",{"_index":1698,"title":{},"body":{"components/EditCellsComponent.html":{},"components/EditTestChamberComponent.html":{}}}],["updatecell",{"_index":896,"title":{},"body":{"injectables/CellService.html":{}}}],["updatecell(payload",{"_index":914,"title":{},"body":{"injectables/CellService.html":{}}}],["updateconnection",{"_index":1372,"title":{},"body":{"interfaces/Charts.html":{},"components/ViewTestChambersComponent.html":{}}}],["updated",{"_index":1696,"title":{},"body":{"components/EditCellsComponent.html":{},"components/EditTestChamberComponent.html":{}}}],["updateduptoindex",{"_index":1214,"title":{},"body":{"interfaces/Charts.html":{}}}],["updatetestchamber",{"_index":2014,"title":{},"body":{"injectables/TestChamberService.html":{}}}],["updatetestchamber(chamberconfig",{"_index":2043,"title":{},"body":{"injectables/TestChamberService.html":{}}}],["updatetestchamber(this.chamber",{"_index":1733,"title":{},"body":{"components/EditTestChamberComponent.html":{}}}],["updating",{"_index":1243,"title":{},"body":{"interfaces/Charts.html":{}}}],["uploaded",{"_index":2106,"title":{},"body":{"components/TestChambersComponent.html":{}}}],["uppercase",{"_index":1057,"title":{},"body":{"components/CellsComponent.html":{},"components/TestChambersComponent.html":{}}}],["url",{"_index":786,"title":{},"body":{"interfaces/BreadCrumbs.html":{},"interfaces/Charts.html":{},"components/FootNavComponent.html":{}}}],["url(\"/e_mobility/i",{"_index":1014,"title":{},"body":{"components/CellsComponent.html":{},"components/DevicesDefaultComponent.html":{},"components/TestChambersComponent.html":{}}}],["url('/e_mobility/i",{"_index":1903,"title":{},"body":{"components/HomeComponent.html":{}}}],["url.createobjecturl(blob",{"_index":1401,"title":{},"body":{"interfaces/Charts.html":{}}}],["url?:string",{"_index":796,"title":{},"body":{"interfaces/BreadCrumbs.html":{},"components/DashboardComponent.html":{}}}],["urlcomponents",{"_index":830,"title":{},"body":{"interfaces/BreadCrumbs.html":{},"components/DashboardComponent.html":{}}}],["urlcomponents.shift();//exculde",{"_index":832,"title":{},"body":{"interfaces/BreadCrumbs.html":{},"components/DashboardComponent.html":{}}}],["urls",{"_index":822,"title":{},"body":{"interfaces/BreadCrumbs.html":{},"components/DashboardComponent.html":{}}}],["use",{"_index":253,"title":{},"body":{"components/AddCellsComponent.html":{},"interfaces/Charts.html":{},"injectables/ComponentStoreService.html":{},"components/EditCellsComponent.html":{},"components/TestChambersComponent.html":{},"index.html":{}}}],["useclass",{"_index":614,"title":{},"body":{"modules/AppModule.html":{}}}],["used",{"_index":366,"title":{},"body":{"components/AddTestChamberComponent.html":{},"interfaces/BreadCrumbs.html":{},"components/DashboardComponent.html":{},"components/EditTestChamberComponent.html":{},"components/TestChambersComponent.html":{}}}],["useful",{"_index":297,"title":{},"body":{"components/AddCellsComponent.html":{},"components/EditCellsComponent.html":{},"components/FootNavComponent.html":{}}}],["user",{"_index":206,"title":{},"body":{"components/AddCellsComponent.html":{},"components/AddTestChamberComponent.html":{},"injectables/CellService.html":{},"components/EditCellsComponent.html":{},"components/EditTestChamberComponent.html":{},"components/FootNavComponent.html":{},"components/HeadNavComponent.html":{},"classes/TestChamber.html":{},"components/TestChambersComponent.html":{},"injectables/UserService.html":{},"components/ViewCellsComponent.html":{},"components/ViewTestChambersComponent.html":{},"interfaces/_TestChamber.html":{},"interfaces/_User.html":{},"interfaces/_UserLight.html":{}}}],["user._id",{"_index":209,"title":{},"body":{"components/AddCellsComponent.html":{},"components/AddTestChamberComponent.html":{},"components/EditCellsComponent.html":{},"components/EditTestChamberComponent.html":{}}}],["user.accesstype",{"_index":1689,"title":{},"body":{"components/EditCellsComponent.html":{},"components/EditTestChamberComponent.html":{}}}],["user.email",{"_index":1846,"title":{},"body":{"components/HeadNavComponent.html":{}}}],["user.name",{"_index":302,"title":{},"body":{"components/AddCellsComponent.html":{},"components/AddTestChamberComponent.html":{},"components/EditCellsComponent.html":{},"components/EditTestChamberComponent.html":{},"components/HeadNavComponent.html":{},"components/ViewCellsComponent.html":{},"components/ViewTestChambersComponent.html":{}}}],["user.sub",{"_index":2195,"title":{},"body":{"injectables/UserService.html":{},"interfaces/_User.html":{},"interfaces/_UserLight.html":{}}}],["users",{"_index":113,"title":{},"body":{"components/AddCellsComponent.html":{},"components/AddTestChamberComponent.html":{},"interfaces/Cell.html":{},"classes/CellClass.html":{},"components/EditCellsComponent.html":{},"components/EditTestChamberComponent.html":{},"components/ViewCellsComponent.html":{},"components/ViewTestChambersComponent.html":{}}}],["users.findindex((u",{"_index":246,"title":{},"body":{"components/AddCellsComponent.html":{},"components/AddTestChamberComponent.html":{},"components/EditCellsComponent.html":{},"components/EditTestChamberComponent.html":{}}}],["users.splice(remindex",{"_index":248,"title":{},"body":{"components/AddCellsComponent.html":{},"components/AddTestChamberComponent.html":{},"components/EditCellsComponent.html":{},"components/EditTestChamberComponent.html":{}}}],["userservice",{"_index":125,"title":{"injectables/UserService.html":{}},"body":{"components/AddCellsComponent.html":{},"components/AddTestChamberComponent.html":{},"components/EditCellsComponent.html":{},"components/EditTestChamberComponent.html":{},"components/HeadNavComponent.html":{},"injectables/UserService.html":{},"interfaces/_User.html":{},"interfaces/_UserLight.html":{},"coverage.html":{}}}],["usersub",{"_index":114,"title":{},"body":{"components/AddCellsComponent.html":{},"components/AddTestChamberComponent.html":{},"components/EditCellsComponent.html":{},"components/EditTestChamberComponent.html":{}}}],["using",{"_index":1598,"title":{},"body":{"components/DevicesDefaultComponent.html":{},"components/HomeComponent.html":{}}}],["v",{"_index":214,"title":{},"body":{"components/AddCellsComponent.html":{},"components/AddTestChamberComponent.html":{},"interfaces/CellTemplate.html":{},"components/EditCellsComponent.html":{},"components/EditTestChamberComponent.html":{},"components/ViewCellsComponent.html":{}}}],["value",{"_index":140,"title":{},"body":{"components/AddCellsComponent.html":{},"components/AddTestChamberComponent.html":{},"components/AppComponent.html":{},"components/BatteryTestComponent.html":{},"components/CellsComponent.html":{},"interfaces/ChannelFields.html":{},"injectables/ComponentStoreService.html":{},"components/DashboardComponent.html":{},"components/DeviceDataComponent.html":{},"components/DevicesDefaultComponent.html":{},"components/EditCellsComponent.html":{},"components/EditTestChamberComponent.html":{},"interfaces/FileField.html":{},"components/FootNavComponent.html":{},"interfaces/InputField.html":{},"interfaces/PayLoad.html":{},"interfaces/SelectField.html":{},"components/ShowAllTestsResultComponent.html":{},"injectables/TestChamberService.html":{},"components/TestChambersComponent.html":{},"interfaces/TestFormat.html":{},"interfaces/TextField.html":{},"components/ViewCellsComponent.html":{},"components/ViewTestChambersComponent.html":{},"miscellaneous/variables.html":{}}}],["values",{"_index":1137,"title":{},"body":{"interfaces/Channel.html":{},"interfaces/Charts.html":{},"interfaces/MeasuredParameters.html":{},"interfaces/QuickResponseMeasurement.html":{},"interfaces/RowInfo.html":{},"interfaces/SensorObj.html":{},"interfaces/TestChannel.html":{},"interfaces/TestChannelDeepChannel.html":{},"interfaces/TestResultDocument.html":{},"interfaces/_TestResultDeep.html":{},"interfaces/_TestResultLight.html":{}}}],["var",{"_index":35,"title":{},"body":{"components/AddBatteryPackComponent.html":{},"components/AddCellsComponent.html":{},"components/AddTestChamberComponent.html":{},"components/AppComponent.html":{},"components/BatteryPacksComponent.html":{},"components/BatteryTestComponent.html":{},"components/CellsComponent.html":{},"components/DashboardComponent.html":{},"components/DeviceDataComponent.html":{},"components/DevicesComponent.html":{},"components/DevicesDefaultComponent.html":{},"components/DocsComponent.html":{},"components/EditBatteryPackComponent.html":{},"components/EditCellsComponent.html":{},"components/EditTestChamberComponent.html":{},"components/FootNavComponent.html":{},"components/HeadNavComponent.html":{},"components/HomeComponent.html":{},"components/NoResultComponent.html":{},"components/ShowAllTestsResultComponent.html":{},"components/TestChambersComponent.html":{},"components/ViewBatteryPacksComponent.html":{},"components/ViewCellsComponent.html":{},"components/ViewTestChambersComponent.html":{}}}],["variable",{"_index":2342,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":2417,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["various",{"_index":1595,"title":{},"body":{"components/DevicesDefaultComponent.html":{}}}],["vehicles",{"_index":2136,"title":{},"body":{"components/TestChambersComponent.html":{}}}],["verifyuser",{"_index":2184,"title":{},"body":{"injectables/UserService.html":{}}}],["verifyuser(user",{"_index":2190,"title":{},"body":{"injectables/UserService.html":{},"interfaces/_User.html":{},"interfaces/_UserLight.html":{}}}],["versatile",{"_index":2130,"title":{},"body":{"components/TestChambersComponent.html":{}}}],["version",{"_index":368,"title":{},"body":{"components/AddTestChamberComponent.html":{},"components/EditTestChamberComponent.html":{},"classes/TestChamber.html":{},"components/ViewTestChambersComponent.html":{},"interfaces/_TestChamber.html":{},"index.html":{},"properties.html":{}}}],["vertical",{"_index":749,"title":{},"body":{"components/BatteryTestComponent.html":{},"components/DashboardComponent.html":{},"components/DevicesDefaultComponent.html":{},"components/FootNavComponent.html":{},"components/HeadNavComponent.html":{}}}],["via",{"_index":2396,"title":{},"body":{"index.html":{}}}],["view",{"_index":86,"title":{},"body":{"components/AddBatteryPackComponent.html":{},"components/AddCellsComponent.html":{},"components/AddTestChamberComponent.html":{},"components/AppComponent.html":{},"components/BatteryPacksComponent.html":{},"modules/BatteryPacksRoutingModule.html":{},"components/BatteryTestComponent.html":{},"modules/BatteryTestRoutingModule.html":{},"components/CellsComponent.html":{},"modules/CellsRoutingModule.html":{},"components/DashboardComponent.html":{},"components/DeviceDataComponent.html":{},"components/DevicesComponent.html":{},"components/DevicesDefaultComponent.html":{},"components/DocsComponent.html":{},"components/EditBatteryPackComponent.html":{},"components/EditCellsComponent.html":{},"components/EditTestChamberComponent.html":{},"components/FootNavComponent.html":{},"components/HeadNavComponent.html":{},"components/HomeComponent.html":{},"components/NoResultComponent.html":{},"components/ShowAllTestsResultComponent.html":{},"components/TestChambersComponent.html":{},"modules/TestChambersRoutingModule.html":{},"components/ViewBatteryPacksComponent.html":{},"components/ViewCellsComponent.html":{},"components/ViewTestChambersComponent.html":{}}}],["view/:chamberid/:testid",{"_index":781,"title":{},"body":{"modules/BatteryTestRoutingModule.html":{}}}],["viewbatterypackscomponent",{"_index":85,"title":{"components/ViewBatteryPacksComponent.html":{}},"body":{"components/AddBatteryPackComponent.html":{},"components/AddCellsComponent.html":{},"components/AddTestChamberComponent.html":{},"components/AppComponent.html":{},"components/BatteryPacksComponent.html":{},"modules/BatteryPacksModule.html":{},"modules/BatteryPacksRoutingModule.html":{},"components/BatteryTestComponent.html":{},"components/CellsComponent.html":{},"components/DashboardComponent.html":{},"components/DeviceDataComponent.html":{},"components/DevicesComponent.html":{},"components/DevicesDefaultComponent.html":{},"components/DocsComponent.html":{},"components/EditBatteryPackComponent.html":{},"components/EditCellsComponent.html":{},"components/EditTestChamberComponent.html":{},"components/FootNavComponent.html":{},"components/HeadNavComponent.html":{},"components/HomeComponent.html":{},"components/NoResultComponent.html":{},"components/ShowAllTestsResultComponent.html":{},"components/TestChambersComponent.html":{},"components/ViewBatteryPacksComponent.html":{},"components/ViewCellsComponent.html":{},"components/ViewTestChambersComponent.html":{},"coverage.html":{},"overview.html":{}}}],["viewcellscomponent",{"_index":87,"title":{"components/ViewCellsComponent.html":{}},"body":{"components/AddBatteryPackComponent.html":{},"components/AddCellsComponent.html":{},"components/AddTestChamberComponent.html":{},"components/AppComponent.html":{},"components/BatteryPacksComponent.html":{},"components/BatteryTestComponent.html":{},"components/CellsComponent.html":{},"modules/CellsModule.html":{},"modules/CellsRoutingModule.html":{},"components/DashboardComponent.html":{},"components/DeviceDataComponent.html":{},"components/DevicesComponent.html":{},"components/DevicesDefaultComponent.html":{},"components/DocsComponent.html":{},"components/EditBatteryPackComponent.html":{},"components/EditCellsComponent.html":{},"components/EditTestChamberComponent.html":{},"components/FootNavComponent.html":{},"components/HeadNavComponent.html":{},"components/HomeComponent.html":{},"components/NoResultComponent.html":{},"components/ShowAllTestsResultComponent.html":{},"components/TestChambersComponent.html":{},"components/ViewBatteryPacksComponent.html":{},"components/ViewCellsComponent.html":{},"components/ViewTestChambersComponent.html":{},"coverage.html":{},"overview.html":{}}}],["viewchild",{"_index":1189,"title":{},"body":{"interfaces/Charts.html":{},"components/EditCellsComponent.html":{},"components/EditTestChamberComponent.html":{}}}],["viewchild('mymodal",{"_index":1216,"title":{},"body":{"interfaces/Charts.html":{},"components/EditCellsComponent.html":{},"components/EditTestChamberComponent.html":{}}}],["viewchildren",{"_index":1188,"title":{},"body":{"interfaces/Charts.html":{}}}],["viewchildren(basechartdirective",{"_index":1215,"title":{},"body":{"interfaces/Charts.html":{}}}],["viewtestchamberscomponent",{"_index":88,"title":{"components/ViewTestChambersComponent.html":{}},"body":{"components/AddBatteryPackComponent.html":{},"components/AddCellsComponent.html":{},"components/AddTestChamberComponent.html":{},"components/AppComponent.html":{},"components/BatteryPacksComponent.html":{},"components/BatteryTestComponent.html":{},"components/CellsComponent.html":{},"components/DashboardComponent.html":{},"components/DeviceDataComponent.html":{},"components/DevicesComponent.html":{},"components/DevicesDefaultComponent.html":{},"components/DocsComponent.html":{},"components/EditBatteryPackComponent.html":{},"components/EditCellsComponent.html":{},"components/EditTestChamberComponent.html":{},"components/FootNavComponent.html":{},"components/HeadNavComponent.html":{},"components/HomeComponent.html":{},"components/NoResultComponent.html":{},"components/ShowAllTestsResultComponent.html":{},"components/TestChambersComponent.html":{},"modules/TestChambersModule.html":{},"modules/TestChambersRoutingModule.html":{},"components/ViewBatteryPacksComponent.html":{},"components/ViewCellsComponent.html":{},"components/ViewTestChambersComponent.html":{},"coverage.html":{},"overview.html":{}}}],["visibility",{"_index":1154,"title":{},"body":{"interfaces/ChannelFields.html":{},"interfaces/FileField.html":{},"interfaces/InputField.html":{},"interfaces/PayLoad.html":{},"interfaces/SelectField.html":{},"interfaces/TestFormat.html":{},"interfaces/TextField.html":{},"components/ViewTestChambersComponent.html":{},"miscellaneous/variables.html":{}}}],["visibility_off",{"_index":2315,"title":{},"body":{"components/ViewTestChambersComponent.html":{}}}],["void",{"_index":143,"title":{},"body":{"components/AddCellsComponent.html":{},"components/AddTestChamberComponent.html":{},"classes/Anim.html":{},"components/AppComponent.html":{},"components/BatteryTestComponent.html":{},"interfaces/BreadCrumbs.html":{},"components/CellsComponent.html":{},"interfaces/Charts.html":{},"injectables/ComponentStoreService.html":{},"components/DashboardComponent.html":{},"components/DeviceDataComponent.html":{},"components/DevicesDefaultComponent.html":{},"components/DocsComponent.html":{},"classes/Dot.html":{},"components/EditCellsComponent.html":{},"components/EditTestChamberComponent.html":{},"components/FootNavComponent.html":{},"components/HeadNavComponent.html":{},"components/HomeComponent.html":{},"components/NoResultComponent.html":{},"components/ShowAllTestsResultComponent.html":{},"components/TestChambersComponent.html":{},"components/ViewCellsComponent.html":{},"components/ViewTestChambersComponent.html":{}}}],["volt",{"_index":1158,"title":{},"body":{"interfaces/ChannelFields.html":{},"interfaces/FileField.html":{},"interfaces/InputField.html":{},"interfaces/PayLoad.html":{},"interfaces/SelectField.html":{},"interfaces/TestFormat.html":{},"interfaces/TextField.html":{},"miscellaneous/variables.html":{}}}],["voltage",{"_index":289,"title":{},"body":{"components/AddCellsComponent.html":{},"interfaces/Channel.html":{},"interfaces/Charts.html":{},"components/DashboardComponent.html":{},"components/EditCellsComponent.html":{},"components/HomeComponent.html":{},"interfaces/MeasuredParameters.html":{},"interfaces/QuickResponseMeasurement.html":{},"interfaces/RowInfo.html":{},"interfaces/SensorObj.html":{},"interfaces/TestChannel.html":{},"interfaces/TestChannelDeepChannel.html":{},"interfaces/TestResultDocument.html":{},"components/ViewCellsComponent.html":{},"interfaces/_TestResultDeep.html":{},"interfaces/_TestResultLight.html":{}}}],["voltage(v",{"_index":287,"title":{},"body":{"components/AddCellsComponent.html":{},"interfaces/Charts.html":{},"components/EditCellsComponent.html":{}}}],["w",{"_index":1168,"title":{},"body":{"interfaces/ChannelFields.html":{},"interfaces/FileField.html":{},"interfaces/InputField.html":{},"interfaces/PayLoad.html":{},"interfaces/SelectField.html":{},"interfaces/TestFormat.html":{},"interfaces/TextField.html":{},"miscellaneous/variables.html":{}}}],["wait",{"_index":1391,"title":{},"body":{"interfaces/Charts.html":{}}}],["want",{"_index":370,"title":{},"body":{"components/AddTestChamberComponent.html":{},"interfaces/Charts.html":{},"components/EditCellsComponent.html":{},"components/EditTestChamberComponent.html":{}}}],["warehouse",{"_index":988,"title":{},"body":{"components/CellsComponent.html":{}}}],["warning",{"_index":2177,"title":{},"body":{"interfaces/ToastMsg.html":{}}}],["way",{"_index":978,"title":{},"body":{"components/CellsComponent.html":{}}}],["webkit",{"_index":323,"title":{},"body":{"components/AddCellsComponent.html":{},"components/AddTestChamberComponent.html":{},"components/EditCellsComponent.html":{},"components/EditTestChamberComponent.html":{}}}],["website",{"_index":2093,"title":{},"body":{"components/TestChambersComponent.html":{}}}],["weight",{"_index":1034,"title":{},"body":{"components/CellsComponent.html":{},"components/HomeComponent.html":{},"components/TestChambersComponent.html":{},"components/ViewCellsComponent.html":{},"components/ViewTestChambersComponent.html":{}}}],["weired",{"_index":2216,"title":{},"body":{"components/ViewCellsComponent.html":{},"components/ViewTestChambersComponent.html":{}}}],["well",{"_index":1708,"title":{},"body":{"components/EditCellsComponent.html":{}}}],["went",{"_index":850,"title":{},"body":{"interfaces/BreadCrumbs.html":{},"injectables/CellService.html":{},"components/DashboardComponent.html":{},"injectables/DeviceDataService.html":{},"injectables/TestChamberService.html":{},"injectables/TestDataService.html":{},"injectables/UserService.html":{},"interfaces/_User.html":{},"interfaces/_UserLight.html":{}}}],["white",{"_index":748,"title":{},"body":{"components/BatteryTestComponent.html":{},"components/CellsComponent.html":{},"injectables/ComponentStoreService.html":{},"components/DevicesDefaultComponent.html":{},"components/TestChambersComponent.html":{}}}],["whthere",{"_index":806,"title":{},"body":{"interfaces/BreadCrumbs.html":{},"components/DashboardComponent.html":{}}}],["wide",{"_index":2132,"title":{},"body":{"components/TestChambersComponent.html":{}}}],["width",{"_index":761,"title":{},"body":{"components/BatteryTestComponent.html":{},"components/CellsComponent.html":{},"components/FootNavComponent.html":{},"components/HeadNavComponent.html":{},"components/TestChambersComponent.html":{}}}],["window.location.hostname",{"_index":485,"title":{},"body":{"classes/Anim.html":{},"components/BatteryTestComponent.html":{},"components/CellsComponent.html":{},"components/DevicesDefaultComponent.html":{},"classes/Dot.html":{},"components/HomeComponent.html":{},"components/ShowAllTestsResultComponent.html":{}}}],["window.location.origin",{"_index":2427,"title":{},"body":{"miscellaneous/variables.html":{}}}],["without",{"_index":1612,"title":{},"body":{"components/DevicesDefaultComponent.html":{},"components/TestChambersComponent.html":{}}}],["withstand",{"_index":381,"title":{},"body":{"components/AddTestChamberComponent.html":{},"components/EditTestChamberComponent.html":{}}}],["won't",{"_index":1995,"title":{},"body":{"classes/TestChamber.html":{},"interfaces/_TestChamber.html":{}}}],["words",{"_index":933,"title":{},"body":{"injectables/CellService.html":{},"components/DevicesDefaultComponent.html":{}}}],["words[currentword",{"_index":1587,"title":{},"body":{"components/DevicesDefaultComponent.html":{}}}],["works",{"_index":1514,"title":{},"body":{"components/DeviceDataComponent.html":{},"components/DocsComponent.html":{}}}],["world",{"_index":2100,"title":{},"body":{"components/TestChambersComponent.html":{}}}],["worry",{"_index":2111,"title":{},"body":{"components/TestChambersComponent.html":{}}}],["write",{"_index":935,"title":{},"body":{"injectables/CellService.html":{},"interfaces/Channel.html":{},"components/EditCellsComponent.html":{},"components/EditTestChamberComponent.html":{},"interfaces/MeasuredParameters.html":{},"interfaces/QuickResponseMeasurement.html":{},"interfaces/RowInfo.html":{},"interfaces/SensorObj.html":{},"classes/TestChamber.html":{},"interfaces/TestChannel.html":{},"interfaces/TestChannelDeepChannel.html":{},"interfaces/TestResultDocument.html":{},"injectables/UserService.html":{},"interfaces/_TestChamber.html":{},"interfaces/_TestResultDeep.html":{},"interfaces/_TestResultLight.html":{},"interfaces/_User.html":{},"interfaces/_UserLight.html":{}}}],["wrong",{"_index":947,"title":{},"body":{"injectables/CellService.html":{},"injectables/DeviceDataService.html":{},"components/EditCellsComponent.html":{},"components/EditTestChamberComponent.html":{},"injectables/TestChamberService.html":{},"injectables/TestDataService.html":{},"injectables/UserService.html":{},"components/ViewCellsComponent.html":{},"components/ViewTestChambersComponent.html":{},"interfaces/_User.html":{},"interfaces/_UserLight.html":{}}}],["wrong!',type:'warning',color:'red",{"_index":851,"title":{},"body":{"interfaces/BreadCrumbs.html":{},"components/DashboardComponent.html":{}}}],["x",{"_index":499,"title":{},"body":{"components/AppComponent.html":{},"interfaces/ChannelFields.html":{},"components/EditCellsComponent.html":{},"components/EditTestChamberComponent.html":{},"interfaces/FileField.html":{},"interfaces/InputField.html":{},"interfaces/PayLoad.html":{},"interfaces/SelectField.html":{},"interfaces/TestFormat.html":{},"interfaces/TextField.html":{},"miscellaneous/variables.html":{}}}],["xaxes",{"_index":1256,"title":{},"body":{"interfaces/Charts.html":{}}}],["y",{"_index":1959,"title":{},"body":{"components/ShowAllTestsResultComponent.html":{},"components/ViewTestChambersComponent.html":{}}}],["yaxes",{"_index":1261,"title":{},"body":{"interfaces/Charts.html":{}}}],["yes",{"_index":875,"title":{},"body":{"classes/CellClass.html":{},"injectables/CellService.html":{},"classes/TestChamber.html":{}}}],["you'll",{"_index":2110,"title":{},"body":{"components/TestChambersComponent.html":{}}}],["you\\'ll",{"_index":2148,"title":{},"body":{"components/TestChambersComponent.html":{}}}],["your_api_identifier",{"_index":2425,"title":{},"body":{"miscellaneous/variables.html":{}}}],["z",{"_index":549,"title":{},"body":{"components/AppComponent.html":{},"components/CellsComponent.html":{},"components/HeadNavComponent.html":{},"components/TestChambersComponent.html":{}}}],["zone.js",{"_index":2373,"title":{},"body":{"dependencies.html":{}}}],["zoom",{"_index":560,"title":{},"body":{"modules/AppModule.html":{},"modules/BatteryPacksModule.html":{},"modules/BatteryTestModule.html":{},"modules/CellsModule.html":{},"modules/TestChambersModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"components/AddBatteryPackComponent.html":{"url":"components/AddBatteryPackComponent.html","title":"component - AddBatteryPackComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  AddBatteryPackComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/body/devices/battery-packs/add-battery-pack/add-battery-pack.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-add-battery-pack\n            \n\n            \n                styleUrls\n                ./add-battery-pack.component.css\n            \n\n\n\n            \n                templateUrl\n                ./add-battery-pack.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-add-battery-pack',\n  templateUrl: './add-battery-pack.component.html',\n  styleUrls: ['./add-battery-pack.component.css']\n})\nexport class AddBatteryPackComponent {\n\n}\n\n    \n\n    \n        comming soon!\n\n    \n\n    \n                \n                    ./add-battery-pack.component.css\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = 'comming soon!'\n    var COMPONENTS = [{'name': 'AddBatteryPackComponent', 'selector': 'app-add-battery-pack'},{'name': 'AddCellsComponent', 'selector': 'app-add-cells'},{'name': 'AddTestChamberComponent', 'selector': 'app-add-test-chamber'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BatteryPacksComponent', 'selector': 'app-battery-packs'},{'name': 'BatteryTestComponent', 'selector': 'app-battery-test'},{'name': 'CellsComponent', 'selector': 'app-cells'},{'name': 'CreateNewTestComponent', 'selector': 'app-create-new-test'},{'name': 'DashboardComponent', 'selector': 'app-dashboard'},{'name': 'DeviceDataComponent', 'selector': 'app-device-data'},{'name': 'DevicesComponent', 'selector': 'app-devices'},{'name': 'DevicesDefaultComponent', 'selector': 'app-devices-default'},{'name': 'DocsComponent', 'selector': 'app-docs'},{'name': 'EditBatteryPackComponent', 'selector': 'app-edit-battery-pack'},{'name': 'EditCellsComponent', 'selector': 'app-edit-cells'},{'name': 'EditTestChamberComponent', 'selector': 'app-edit-test-chamber'},{'name': 'FootNavComponent', 'selector': 'app-foot-nav'},{'name': 'HeadNavComponent', 'selector': 'app-head-nav'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'NoResultComponent', 'selector': 'app-no-result'},{'name': 'ShowAllTestsResultComponent', 'selector': 'app-show-all-tests-result'},{'name': 'ShowTestResultComponent', 'selector': 'app-show-test-result'},{'name': 'TestChambersComponent', 'selector': 'app-test-chambers'},{'name': 'ViewBatteryPacksComponent', 'selector': 'app-view-battery-packs'},{'name': 'ViewCellsComponent', 'selector': 'app-view-cells'},{'name': 'ViewTestChambersComponent', 'selector': 'app-view-test-chambers'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AddBatteryPackComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AddCellsComponent.html":{"url":"components/AddCellsComponent.html","title":"component - AddCellsComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  AddCellsComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/body/devices/cells/add-cells/add-cells.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n                    OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-add-cells\n            \n\n            \n                styleUrls\n                ./add-cells.component.css\n            \n\n\n\n            \n                templateUrl\n                ./add-cells.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                cell\n                            \n                            \n                                    Optional\n                                cellTemplates\n                            \n                            \n                                isSaveDisabled\n                            \n                            \n                                    Optional\n                                selectedCellTemplate\n                            \n                            \n                                    Optional\n                                selectedUser\n                            \n                            \n                                showSpinnerButton\n                            \n                            \n                                    Optional\n                                subs\n                            \n                            \n                                users\n                            \n                            \n                                userSub\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getUsers\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                populate\n                            \n                            \n                                save\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(_cellService: CellService, _userService: UserService, _componentStoreService: ComponentStoreService, router: Router, route: ActivatedRoute)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/body/devices/cells/add-cells/add-cells.component.ts:24\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        _cellService\n                                                  \n                                                        \n                                                                        CellService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        _userService\n                                                  \n                                                        \n                                                                        UserService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        _componentStoreService\n                                                  \n                                                        \n                                                                        ComponentStoreService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        route\n                                                  \n                                                        \n                                                                        ActivatedRoute\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getUsers\n                        \n                    \n                \n            \n            \n                \ngetUsers(searchStr: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/body/devices/cells/add-cells/add-cells.component.ts:92\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    searchStr\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        ''\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnDestroy\n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/body/devices/cells/add-cells/add-cells.component.ts:116\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/body/devices/cells/add-cells/add-cells.component.ts:34\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        populate\n                        \n                    \n                \n            \n            \n                \npopulate()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/body/devices/cells/add-cells/add-cells.component.ts:43\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        save\n                        \n                    \n                \n            \n            \n                \nsave()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/body/devices/cells/add-cells/add-cells.component.ts:55\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        cell\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Cell\n\n                    \n                \n                \n                    \n                        Default value : new CellClass()\n                    \n                \n                    \n                        \n                                Defined in src/app/components/body/devices/cells/add-cells/add-cells.component.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        cellTemplates\n                        \n                    \n                \n            \n                \n                    \n                        Type :     CellTemplate[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/components/body/devices/cells/add-cells/add-cells.component.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isSaveDisabled\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/components/body/devices/cells/add-cells/add-cells.component.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        selectedCellTemplate\n                        \n                    \n                \n            \n                \n                    \n                        Type :         CellTemplate\n\n                    \n                \n                \n                    \n                        Default value : undefined\n                    \n                \n                    \n                        \n                                Defined in src/app/components/body/devices/cells/add-cells/add-cells.component.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        selectedUser\n                        \n                    \n                \n            \n                \n                    \n                        Type :         _User[]\n\n                    \n                \n                    \n                        \n                                Defined in src/app/components/body/devices/cells/add-cells/add-cells.component.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        showSpinnerButton\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/components/body/devices/cells/add-cells/add-cells.component.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        subs\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Subscription[]\n\n                    \n                \n                    \n                        \n                                Defined in src/app/components/body/devices/cells/add-cells/add-cells.component.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        users\n                        \n                    \n                \n            \n                \n                    \n                        Type :         _User[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/components/body/devices/cells/add-cells/add-cells.component.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        userSub\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Subscription | undefined\n\n                    \n                \n                \n                    \n                        Default value : undefined\n                    \n                \n                    \n                        \n                                Defined in src/app/components/body/devices/cells/add-cells/add-cells.component.ts:24\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Router, ActivatedRoute } from '@angular/router';\nimport { ComponentStoreService } from './../../../../../services/component-store.service';\nimport { UserService, _User } from './../../../../../services/user.service';\nimport { CellService } from './../../../../../services/cell.service';\nimport { CellTemplate } from './../../../../../models/CellTemplate';\nimport { Subscription } from 'rxjs';\nimport { Component, OnInit, OnDestroy } from '@angular/core';\nimport { Cell, CellClass } from 'src/app/models/Cell';\n\n@Component({\n  selector: 'app-add-cells',\n  templateUrl: './add-cells.component.html',\n  styleUrls: ['./add-cells.component.css'],\n})\nexport class AddCellsComponent implements OnInit, OnDestroy {\n  showSpinnerButton: boolean = false;\n  isSaveDisabled: boolean = false;\n  subs?: Subscription[];\n  cellTemplates?: CellTemplate[] = [];\n  selectedCellTemplate?: CellTemplate = undefined;\n  cell: Cell = new CellClass();\n  selectedUser?: _User[];\n  users: _User[] = [];\n  userSub: Subscription | undefined = undefined;\n\n  constructor(\n    private _cellService: CellService,\n    private _userService: UserService,\n    private _componentStoreService: ComponentStoreService,\n    private router: Router,\n    private route: ActivatedRoute\n  ) {}\n\n  ngOnInit(): void {\n    const sub: Subscription = this._cellService\n      .getTemplates()\n      .subscribe((d: any) => {\n        this.cellTemplates = d;\n      });\n    this.cell.cellQuantity = 1;\n    this.subs?.push(sub);\n  }\n  populate() {\n    console.log(this.selectedCellTemplate);\n    this.cell.manufacturer = this.selectedCellTemplate?.manufacturer;\n    this.cell.type = this.selectedCellTemplate?.type;\n    this.cell.formFactor = this.selectedCellTemplate?.formFactor;\n    this.cell.cellChemistry = this.selectedCellTemplate?.cellChemistry;\n    this.cell.nomVolt = this.selectedCellTemplate?.nomVoltage;\n    this.cell.nomCap = this.selectedCellTemplate?.nomCapacity;\n    this.cell.nomCurr = this.selectedCellTemplate?.nomCurrent;\n    this.cell.maxVolt = this.selectedCellTemplate?.maxVoltage;\n    this.cell.minVolt = this.selectedCellTemplate?.minVoltage;\n  }\n  save() {\n    this.isSaveDisabled = true;\n    this.showSpinnerButton = true;\n    const assignedUsers = [];\n    if (this.selectedUser) {\n      for (let user of this.selectedUser) {\n        assignedUsers.push({ _id: user._id, accessType: 'view' });\n      }\n    }\n    this.cell.users = assignedUsers;\n    const sub = this._cellService.addCell(this.cell).subscribe({\n      next: (v) => {\n        console.log(v);\n        this.showSpinnerButton = false;\n        this.isSaveDisabled = false;\n        this._componentStoreService.sendToastMsg({\n          msg: 'Cell created successfully!',\n          color: 'green',\n        });\n        this.router.navigate(['../view'], {\n          relativeTo: this.route,\n          skipLocationChange: true,\n        });\n      },\n      error: (e) => {\n        console.error(e);\n        this.showSpinnerButton = false;\n        this.isSaveDisabled = false;\n        this._componentStoreService.sendToastMsg({\n          msg: 'Cell creation failed!',\n          color: 'red',\n        });\n      },\n    });\n    this.subs?.push(sub);\n    console.log(this.selectedUser);\n  }\n  getUsers(searchStr: string = '') {\n    this.userSub?.unsubscribe();\n    this.users = [];\n    searchStr = searchStr.trim();\n    if (searchStr.length > 0) {\n      this.userSub = this._userService\n        .getUsers(searchStr)\n        .subscribe((users: _User[]) => {\n          //console.log(this.selectedUser)\n          if (this.selectedUser) {\n            //remove existing users from search string\n            this.selectedUser.forEach((user: _User) => {\n              let remIndex = users.findIndex((u) => u._id == user._id);\n              if (remIndex !== -1) {\n                users.splice(remIndex, 1);\n              }\n            });\n          }\n          this.users = users;\n        });\n    } else {\n      this.users = [];\n    }\n  }\n  ngOnDestroy(): void {\n    this.subs?.forEach((sub) => {\n      sub.unsubscribe();\n    });\n  }\n}\n\n    \n\n    \n        \n  \n    \n      Back\n    \n  \n\n\n  \n    Add a new cells to your inventory\n    \n      \n        \n          Use existant template?\n        \n        \n          \n            \n              {{ tem.templateName }}\n            \n          \n        \n        \n          Select any template to auto-populate some of the fields.\n        \n      \n      About the cell's physical information.\n      \n        \n          Cell Id\n          \n            \n          \n          \n            Unique identifier, generates automatically.\n          \n        \n\n        \n          \n            Cell Name\n          \n          \n            \n          \n          \n            Give a name/base-name to your cell, should be unique among the\n              cells that you have access to.\n          \n        \n\n        \n          \n            Cell Quantity\n          \n          \n            \n          \n          \n            If > 1, then it will generate unique sequence of cell records,\n              with name {{ cell.cellName }}-1 , {{ cell.cellName }}-2 ,\n              ...\n          \n        \n\n        \n          \n            Manufacturer\n          \n          \n            \n          \n          \n            Name of the manufacturer.\n          \n        \n\n        \n          \n            Batch No.\n          \n          \n            \n          \n          \n            Batch no. for the inventory management.\n          \n        \n\n        \n          \n            Type\n          \n          \n            \n          \n          \n            Shape of the cell.\n          \n        \n\n        \n          \n            Form Factor\n          \n          \n            \n          \n          \n            Express the physical size of the cell.\n          \n        \n\n        \n          \n            Cell Chemistry\n          \n          \n            \n          \n          \n            Cell chemistry of the cell.\n          \n        \n      \n\n      About the cell's electrical information.\n      \n        \n          \n            Nominal Voltage(V)\n          \n          \n            \n          \n          \n            Manufacturer specified nominal cell voltage.\n          \n        \n\n        \n          \n            Nominal Capacity(mAh)\n          \n          \n            \n          \n          \n            Manufacturer specified nominal cell capacity.\n          \n        \n\n        \n          \n            Nominal Current(A)\n          \n          \n            \n          \n          \n            Manufacturer specified nominal cell current.\n          \n        \n\n        \n          \n            Max Voltage Rating(V)\n          \n          \n            \n          \n          \n            Manufacturer specified maximum cell voltage, might be useful\n              while perforiming test.\n          \n        \n\n        \n          \n            Min Voltage Rating(V)\n          \n          \n            \n          \n          \n            Manufacturer specified minimum cell voltage, might be useful\n              while perforiming test.\n          \n        \n\n        \n          \n            Assigned Users\n          \n          \n            \n              {{\n                user.name\n              }}\n            \n          \n\n          \n            User will have access to the experiment results.\n          \n        \n\n        \n          \n            \n              Add\n              \n                Loading...\n              \n            \n          \n        \n      \n    \n  \n\n\n    \n\n    \n                \n                    ./add-cells.component.css\n                \n                .card{\n    margin-top:20px;\n}\n.card-body .row{\n    margin:10px 0px;\n}\ntextarea{\n    resize: none;\n}\n.required-ast::after{\n    content: \" *\";\n    color: red;\n}\n\n/* Chrome, Safari, Edge, Opera */\ninput::-webkit-outer-spin-button,\ninput::-webkit-inner-spin-button {\n  -webkit-appearance: none;\n  margin: 0;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            Back            Add a new cells to your inventory                            Use existant template?                                                    {{ tem.templateName }}                                                Select any template to auto-populate some of the fields.                    About the cell\\'s physical information.                        Cell Id                                                      Unique identifier, generates automatically.                                                Cell Name                                                                Give a name/base-name to your cell, should be unique among the              cells that you have access to.                                                Cell Quantity                                                                If > 1, then it will generate unique sequence of cell records,              with name {{ cell.cellName }}-1 , {{ cell.cellName }}-2 ,              ...                                                Manufacturer                                                                Name of the manufacturer.                                                Batch No.                                                                Batch no. for the inventory management.                                                Type                                                                Shape of the cell.                                                Form Factor                                                                Express the physical size of the cell.                                                Cell Chemistry                                                                Cell chemistry of the cell.                              About the cell\\'s electrical information.                                    Nominal Voltage(V)                                                                Manufacturer specified nominal cell voltage.                                                Nominal Capacity(mAh)                                                                Manufacturer specified nominal cell capacity.                                                Nominal Current(A)                                                                Manufacturer specified nominal cell current.                                                Max Voltage Rating(V)                                                                Manufacturer specified maximum cell voltage, might be useful              while perforiming test.                                                Min Voltage Rating(V)                                                                Manufacturer specified minimum cell voltage, might be useful              while perforiming test.                                                Assigned Users                                              {{                user.name              }}                                            User will have access to the experiment results.                                                              Add                              Loading...                                                        '\n    var COMPONENTS = [{'name': 'AddBatteryPackComponent', 'selector': 'app-add-battery-pack'},{'name': 'AddCellsComponent', 'selector': 'app-add-cells'},{'name': 'AddTestChamberComponent', 'selector': 'app-add-test-chamber'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BatteryPacksComponent', 'selector': 'app-battery-packs'},{'name': 'BatteryTestComponent', 'selector': 'app-battery-test'},{'name': 'CellsComponent', 'selector': 'app-cells'},{'name': 'CreateNewTestComponent', 'selector': 'app-create-new-test'},{'name': 'DashboardComponent', 'selector': 'app-dashboard'},{'name': 'DeviceDataComponent', 'selector': 'app-device-data'},{'name': 'DevicesComponent', 'selector': 'app-devices'},{'name': 'DevicesDefaultComponent', 'selector': 'app-devices-default'},{'name': 'DocsComponent', 'selector': 'app-docs'},{'name': 'EditBatteryPackComponent', 'selector': 'app-edit-battery-pack'},{'name': 'EditCellsComponent', 'selector': 'app-edit-cells'},{'name': 'EditTestChamberComponent', 'selector': 'app-edit-test-chamber'},{'name': 'FootNavComponent', 'selector': 'app-foot-nav'},{'name': 'HeadNavComponent', 'selector': 'app-head-nav'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'NoResultComponent', 'selector': 'app-no-result'},{'name': 'ShowAllTestsResultComponent', 'selector': 'app-show-all-tests-result'},{'name': 'ShowTestResultComponent', 'selector': 'app-show-test-result'},{'name': 'TestChambersComponent', 'selector': 'app-test-chambers'},{'name': 'ViewBatteryPacksComponent', 'selector': 'app-view-battery-packs'},{'name': 'ViewCellsComponent', 'selector': 'app-view-cells'},{'name': 'ViewTestChambersComponent', 'selector': 'app-view-test-chambers'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AddCellsComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AddTestChamberComponent.html":{"url":"components/AddTestChamberComponent.html","title":"component - AddTestChamberComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  AddTestChamberComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/body/devices/test-chambers/add-test-chamber/add-test-chamber.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-add-test-chamber\n            \n\n            \n                styleUrls\n                ./add-test-chamber.component.css\n            \n\n\n\n            \n                templateUrl\n                ./add-test-chamber.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                chamber\n                            \n                            \n                                isSaveDisabled\n                            \n                            \n                                    Optional\n                                selectedUser\n                            \n                            \n                                showSpinnerButton\n                            \n                            \n                                subs\n                            \n                            \n                                users\n                            \n                            \n                                userSub\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getUsers\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                save\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(_userService: UserService, _testChamberService: TestChamberService, _componentStoreService: ComponentStoreService, router: Router, route: ActivatedRoute)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/body/devices/test-chambers/add-test-chamber/add-test-chamber.component.ts:25\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        _userService\n                                                  \n                                                        \n                                                                        UserService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        _testChamberService\n                                                  \n                                                        \n                                                                        TestChamberService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        _componentStoreService\n                                                  \n                                                        \n                                                                        ComponentStoreService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        route\n                                                  \n                                                        \n                                                                        ActivatedRoute\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getUsers\n                        \n                    \n                \n            \n            \n                \ngetUsers(searchStr: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/body/devices/test-chambers/add-test-chamber/add-test-chamber.component.ts:35\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    searchStr\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        ''\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnDestroy\n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/body/devices/test-chambers/add-test-chamber/add-test-chamber.component.ts:93\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        save\n                        \n                    \n                \n            \n            \n                \nsave()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/body/devices/test-chambers/add-test-chamber/add-test-chamber.component.ts:60\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        chamber\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new TestChamber()\n                    \n                \n                    \n                        \n                                Defined in src/app/components/body/devices/test-chambers/add-test-chamber/add-test-chamber.component.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isSaveDisabled\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/components/body/devices/test-chambers/add-test-chamber/add-test-chamber.component.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        selectedUser\n                        \n                    \n                \n            \n                \n                    \n                        Type :         _User[]\n\n                    \n                \n                    \n                        \n                                Defined in src/app/components/body/devices/test-chambers/add-test-chamber/add-test-chamber.component.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        showSpinnerButton\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/components/body/devices/test-chambers/add-test-chamber/add-test-chamber.component.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        subs\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Subscription[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/components/body/devices/test-chambers/add-test-chamber/add-test-chamber.component.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        users\n                        \n                    \n                \n            \n                \n                    \n                        Type :         _User[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/components/body/devices/test-chambers/add-test-chamber/add-test-chamber.component.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        userSub\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Subscription | undefined\n\n                    \n                \n                \n                    \n                        Default value : undefined\n                    \n                \n                    \n                        \n                                Defined in src/app/components/body/devices/test-chambers/add-test-chamber/add-test-chamber.component.ts:22\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { ComponentStoreService } from './../../../../../services/component-store.service';\nimport { TestChamberService } from 'src/app/services/test-chamber.service';\nimport { Subscription } from 'rxjs';\nimport {\n  _User,\n  UserService,\n  _UserLight,\n} from './../../../../../services/user.service';\nimport { TestChamber } from './../../../../../models/TestChamber';\nimport { Component, OnDestroy } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\n\n@Component({\n  selector: 'app-add-test-chamber',\n  templateUrl: './add-test-chamber.component.html',\n  styleUrls: ['./add-test-chamber.component.css'],\n})\nexport class AddTestChamberComponent implements OnDestroy {\n  chamber = new TestChamber();\n  selectedUser?: _User[];\n  users: _User[] = [];\n  userSub: Subscription | undefined = undefined;\n  isSaveDisabled: boolean = false;\n  showSpinnerButton: boolean = false;\n  subs: Subscription[] = [];\n\n  constructor(\n    private _userService: UserService,\n    private _testChamberService: TestChamberService,\n    private _componentStoreService: ComponentStoreService,\n    private router: Router,\n    private route: ActivatedRoute\n  ) {}\n\n  getUsers(searchStr: string = '') {\n    this.userSub?.unsubscribe();\n    this.users = [];\n    searchStr = searchStr.trim();\n    if (searchStr.length > 0) {\n      this.userSub = this._userService\n        .getUsers(searchStr)\n        .subscribe((users: _User[]) => {\n          //console.log(this.selectedUser)\n          if (this.selectedUser) {\n            //remove existing users from search string\n            this.selectedUser.forEach((user: _User) => {\n              let remIndex = users.findIndex((u) => u._id == user._id);\n              if (remIndex !== -1) {\n                users.splice(remIndex, 1);\n              }\n            });\n          }\n          this.users = users;\n        });\n    } else {\n      this.users = [];\n    }\n  }\n\n  save() {\n    this.showSpinnerButton = true;\n    let assignedUsers: _UserLight[] = [];\n    this.selectedUser?.forEach((user: _User) => {\n      assignedUsers.push({ _id: user._id, accessType: 'read' });\n    });\n    this.chamber.assignedUsers = assignedUsers;\n    const sub = this._testChamberService\n      .createNewTestChamber(this.chamber)\n      .subscribe({\n        next: (v) => {\n          console.log(v);\n          this.showSpinnerButton = false;\n          this._componentStoreService.sendToastMsg({\n            msg: 'Chamber created successfully',\n            color: 'green',\n          });\n          this.router.navigate(['../view'], {\n            relativeTo: this.route,\n            skipLocationChange: true,\n          });\n        },\n        error: (e) => {\n          console.error(e);\n          this.showSpinnerButton = false;\n          this._componentStoreService.sendToastMsg({\n            msg: 'Chamber creation failed!',\n            color: 'red',\n          });\n        },\n      });\n    this.subs.push(sub);\n  }\n  ngOnDestroy(): void {\n    this.subs.forEach((sub) => {\n      sub.unsubscribe();\n    });\n    this.userSub?.unsubscribe();\n  }\n}\n\n    \n\n    \n        \n  \n    \n      Back\n    \n  \n\n\n  \n    Create a new Test Chamber\n    \n      \n        \n          \n            Chmaber Id\n          \n          \n            \n          \n          \n            Unique identifier, generates automatically.\n          \n        \n\n        \n          \n            Chamber Name\n          \n          \n            \n          \n          \n            Give a name to your chamber, should be unique among the chambers\n              that you have access to.\n          \n        \n\n        \n          \n            Chamber controller\n          \n          \n            \n          \n          \n            About the electronic controller that is used to control the\n              chamber.\n          \n        \n\n        \n          \n            Version of Chamber/Controller\n          \n          \n            \n          \n          \n            If you want to maintain a track record of you chamber or\n              controoler's version.\n          \n        \n\n        \n          \n            About\n          \n          \n            \n          \n        \n        \n          \n            Maximum Temperature\n          \n          \n            \n          \n          \n            in °C. It gives the idea on how much max temperature your chamber\n              can produce or withstand.\n          \n        \n        \n          \n            Minimum Temperature\n          \n          \n            \n          \n          \n            in °C. It gives the idea on how much min temperature your chamber\n              can produce or withstand.\n          \n        \n\n        \n          \n            Location\n          \n          \n            \n          \n          \n            \n              Gives an idea about the physical location of your chamber.\n          \n        \n\n        \n          \n            Max no. of Channels\n          \n          \n            \n          \n          \n            \n              How many independent channels that your chamber support. Each\n              channel can hold a different set of experiment.\n          \n        \n\n        \n          \n            Assigned Users\n          \n          \n            \n              {{\n                user.name\n              }}\n            \n          \n\n          \n            User will have access to the test chamber and it's experiment\n              results.\n          \n        \n\n        \n          \n            \n              Create\n              \n                Loading...\n              \n            \n          \n        \n      \n    \n  \n\n\n    \n\n    \n                \n                    ./add-test-chamber.component.css\n                \n                .card{\n    margin-top:20px;\n}\n.card-body .row{\n    margin:10px 0px;\n}\ntextarea{\n    resize: none;\n}\n\n/* Chrome, Safari, Edge, Opera */\ninput::-webkit-outer-spin-button,\ninput::-webkit-inner-spin-button {\n  -webkit-appearance: none;\n  margin: 0;\n}\n.required-ast::after{\n    content: \" *\";\n    color: red;\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            Back            Create a new Test Chamber                                        Chmaber Id                                                                Unique identifier, generates automatically.                                                Chamber Name                                                                Give a name to your chamber, should be unique among the chambers              that you have access to.                                                Chamber controller                                                                About the electronic controller that is used to control the              chamber.                                                Version of Chamber/Controller                                                                If you want to maintain a track record of you chamber or              controoler\\'s version.                                                About                                                                                Maximum Temperature                                                                in °C. It gives the idea on how much max temperature your chamber              can produce or withstand.                                                Minimum Temperature                                                                in °C. It gives the idea on how much min temperature your chamber              can produce or withstand.                                                Location                                                                              Gives an idea about the physical location of your chamber.                                                Max no. of Channels                                                                              How many independent channels that your chamber support. Each              channel can hold a different set of experiment.                                                Assigned Users                                              {{                user.name              }}                                            User will have access to the test chamber and it\\'s experiment              results.                                                              Create                              Loading...                                                        '\n    var COMPONENTS = [{'name': 'AddBatteryPackComponent', 'selector': 'app-add-battery-pack'},{'name': 'AddCellsComponent', 'selector': 'app-add-cells'},{'name': 'AddTestChamberComponent', 'selector': 'app-add-test-chamber'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BatteryPacksComponent', 'selector': 'app-battery-packs'},{'name': 'BatteryTestComponent', 'selector': 'app-battery-test'},{'name': 'CellsComponent', 'selector': 'app-cells'},{'name': 'CreateNewTestComponent', 'selector': 'app-create-new-test'},{'name': 'DashboardComponent', 'selector': 'app-dashboard'},{'name': 'DeviceDataComponent', 'selector': 'app-device-data'},{'name': 'DevicesComponent', 'selector': 'app-devices'},{'name': 'DevicesDefaultComponent', 'selector': 'app-devices-default'},{'name': 'DocsComponent', 'selector': 'app-docs'},{'name': 'EditBatteryPackComponent', 'selector': 'app-edit-battery-pack'},{'name': 'EditCellsComponent', 'selector': 'app-edit-cells'},{'name': 'EditTestChamberComponent', 'selector': 'app-edit-test-chamber'},{'name': 'FootNavComponent', 'selector': 'app-foot-nav'},{'name': 'HeadNavComponent', 'selector': 'app-head-nav'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'NoResultComponent', 'selector': 'app-no-result'},{'name': 'ShowAllTestsResultComponent', 'selector': 'app-show-all-tests-result'},{'name': 'ShowTestResultComponent', 'selector': 'app-show-test-result'},{'name': 'TestChambersComponent', 'selector': 'app-test-chambers'},{'name': 'ViewBatteryPacksComponent', 'selector': 'app-view-battery-packs'},{'name': 'ViewCellsComponent', 'selector': 'app-view-cells'},{'name': 'ViewTestChambersComponent', 'selector': 'app-view-test-chambers'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AddTestChamberComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Anim.html":{"url":"classes/Anim.html","title":"class - Anim","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Anim\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/components/body/home/home.component.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                dot\n                            \n                            \n                                    Public\n                                duration\n                            \n                            \n                                    Public\n                                tZero\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                onFinish\n                            \n                            \n                                run\n                            \n                            \n                                start\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(dot: any)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/body/home/home.component.ts:19\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        dot\n                                                  \n                                                        \n                                                                        any\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        dot\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                    \n                        \n                                Defined in src/app/components/body/home/home.component.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        duration\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                    \n                        \n                                Defined in src/app/components/body/home/home.component.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        tZero\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                    \n                        \n                                Defined in src/app/components/body/home/home.component.ts:19\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        onFinish\n                        \n                    \n                \n            \n            \n                \nonFinish()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/body/home/home.component.ts:43\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        run\n                        \n                    \n                \n            \n            \n                \nrun()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/body/home/home.component.ts:30\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        start\n                        \n                    \n                \n            \n            \n                \nstart(duration: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/body/home/home.component.ts:24\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    duration\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Location } from '@angular/common';\nimport { Component, OnInit } from '@angular/core';\n\nclass Dot {\n  // Initialize the dot: connect sprite and track properties with supplied SVG elements\n  constructor(public sprite: any, public track: any) {\n    this.sprite = document.getElementById(sprite);\n    this.track = document.getElementById(track);\n  }\n\n  // Put the dot on its spot\n  move(u: any) {\n    let p = this.track.getPointAtLength(u * this.track.getTotalLength());\n    this.sprite.setAttribute('transform', `translate(${p.x}, ${p.y})`);\n  }\n}\nclass Anim {\n  public duration: any;\n  public tZero: any;\n\n  constructor(public dot: any) {\n    this.dot = dot;\n  }\n  start(duration: any) {\n    this.duration = duration;\n    this.tZero = Date.now();\n    requestAnimationFrame(() => this.run());\n  }\n\n  run() {\n    let u = Math.min((Date.now() - this.tZero) / this.duration, 1);\n\n    if (u  this.run());\n    } else {\n      this.onFinish();\n    }\n\n    this.dot.move(u);\n  }\n\n  onFinish() {\n    // Schedule the animation to restart\n    setTimeout(() => this.start(this.duration), 10);\n  }\n}\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css'],\n})\nexport class HomeComponent implements OnInit {\n  constructor(private location: Location) {}\n\n  ngOnInit(): void {\n    let anim_time = 4000;\n    let dot1 = new Dot('Dot_1', 'Path_1');\n    let anim_gen_1 = new Anim(dot1);\n    anim_gen_1.start(anim_time);\n\n    let dot2 = new Dot('Dot_2', 'Path_2');\n    let anim_gen_2 = new Anim(dot2);\n    anim_gen_2.start(anim_time);\n\n    let dot3 = new Dot('Dot_3', 'Path_3');\n    let anim_gen_3 = new Anim(dot3);\n    anim_gen_3.start(anim_time);\n\n    let dot4 = new Dot('Dot_4', 'Path_4');\n    let anim_gen_4 = new Anim(dot4);\n    anim_gen_4.start(anim_time);\n\n    //change the location from /home to home just to keep the location static through out the app\n    if (window.location.hostname != 'localhost') {\n      console.log(window.location.hostname);\n      this.location.replaceState('./'); //on prod\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AppComponent.html":{"url":"components/AppComponent.html","title":"component - AppComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  AppComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/app.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-root\n            \n\n            \n                styleUrls\n                ./app.component.css\n            \n\n\n\n            \n                templateUrl\n                ./app.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                selectedDate\n                            \n                            \n                                showToast\n                            \n                            \n                                title\n                            \n                            \n                                toastColor\n                            \n                            \n                                toastMsg\n                            \n                            \n                                x\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                changeToastStatus\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                showToastMsg\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(store: ComponentStoreService, _testService: TestService)\n                    \n                \n                        \n                            \n                                Defined in src/app/app.component.ts:18\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                        ComponentStoreService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        _testService\n                                                  \n                                                        \n                                                                        TestService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        changeToastStatus\n                        \n                    \n                \n            \n            \n                \nchangeToastStatus(status: boolean)\n                \n            \n\n\n            \n                \n                    Defined in src/app/app.component.ts:40\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    status\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/app.component.ts:25\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        showToastMsg\n                        \n                    \n                \n            \n            \n                \nshowToastMsg(msg: ToastMsg)\n                \n            \n\n\n            \n                \n                    Defined in src/app/app.component.ts:31\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    msg\n                                    \n                                                ToastMsg\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        selectedDate\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                    \n                        \n                                Defined in src/app/app.component.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        showToast\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/app.component.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        title\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'intelligentBMS'\n                    \n                \n                    \n                        \n                                Defined in src/app/app.component.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        toastColor\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string | undefined\n\n                    \n                \n                \n                    \n                        Default value : 'black'\n                    \n                \n                    \n                        \n                                Defined in src/app/app.component.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        toastMsg\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string | undefined\n\n                    \n                \n                \n                    \n                        Default value : undefined\n                    \n                \n                    \n                        \n                                Defined in src/app/app.component.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        x\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                \n                    \n                        Default value : undefined\n                    \n                \n                    \n                        \n                                Defined in src/app/app.component.ts:15\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { TestService } from './services/test.service';\nimport { ToastMsg } from './models/ToastMsg';\nimport { ComponentStoreService } from './services/component-store.service';\nimport { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css'],\n})\nexport class AppComponent implements OnInit {\n  title = 'intelligentBMS';\n\n  showToast: boolean = false;\n  x: any = undefined;\n  toastMsg: string | undefined = undefined;\n  toastColor: string | undefined = 'black';\n  selectedDate?: Date;\n\n  constructor(\n    private store: ComponentStoreService,\n    private _testService: TestService\n  ) {}\n\n  ngOnInit(): void {\n    this.store.toastMsg$.subscribe((msg) => {\n      this.showToastMsg(msg);\n      //console.log(msg);\n    });\n  }\n  showToastMsg(msg: ToastMsg) {\n    this.toastMsg = msg.msg;\n    this.toastColor = msg.color;\n    this.changeToastStatus(true);\n    this.x = setTimeout(() => {\n      this.changeToastStatus(false);\n    }, msg.timeOut);\n  }\n\n  changeToastStatus(status: boolean) {\n    status ? clearTimeout(this.x) : null;\n    this.showToast = status;\n  }\n}\n\n    \n\n    \n        \n  \n  \n    \n  \n  \n\n\n\n  \n    \n      {{ toastMsg }}\n    \n    \n  \n\n\n    \n\n    \n                \n                    ./app.component.css\n                \n                .body {\n  margin-top: 20px;\n  margin-bottom: 20px;\n}\n\n.toast {\n  position: fixed;\n  align-items: center;\n  right: 12px;\n  bottom: 13%;\n  z-index: 10;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                        {{ toastMsg }}          '\n    var COMPONENTS = [{'name': 'AddBatteryPackComponent', 'selector': 'app-add-battery-pack'},{'name': 'AddCellsComponent', 'selector': 'app-add-cells'},{'name': 'AddTestChamberComponent', 'selector': 'app-add-test-chamber'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BatteryPacksComponent', 'selector': 'app-battery-packs'},{'name': 'BatteryTestComponent', 'selector': 'app-battery-test'},{'name': 'CellsComponent', 'selector': 'app-cells'},{'name': 'CreateNewTestComponent', 'selector': 'app-create-new-test'},{'name': 'DashboardComponent', 'selector': 'app-dashboard'},{'name': 'DeviceDataComponent', 'selector': 'app-device-data'},{'name': 'DevicesComponent', 'selector': 'app-devices'},{'name': 'DevicesDefaultComponent', 'selector': 'app-devices-default'},{'name': 'DocsComponent', 'selector': 'app-docs'},{'name': 'EditBatteryPackComponent', 'selector': 'app-edit-battery-pack'},{'name': 'EditCellsComponent', 'selector': 'app-edit-cells'},{'name': 'EditTestChamberComponent', 'selector': 'app-edit-test-chamber'},{'name': 'FootNavComponent', 'selector': 'app-foot-nav'},{'name': 'HeadNavComponent', 'selector': 'app-head-nav'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'NoResultComponent', 'selector': 'app-no-result'},{'name': 'ShowAllTestsResultComponent', 'selector': 'app-show-all-tests-result'},{'name': 'ShowTestResultComponent', 'selector': 'app-show-test-result'},{'name': 'TestChambersComponent', 'selector': 'app-test-chambers'},{'name': 'ViewBatteryPacksComponent', 'selector': 'app-view-battery-packs'},{'name': 'ViewCellsComponent', 'selector': 'app-view-cells'},{'name': 'ViewTestChambersComponent', 'selector': 'app-view-test-chambers'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AppComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AppModule\n\n\n\ncluster_AppModule_bootstrap\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_declarations\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nDashboardComponent\n\nDashboardComponent\n\nAppModule -->\n\nDashboardComponent->AppModule\n\n\n\n\n\nDeviceDataComponent\n\nDeviceDataComponent\n\nAppModule -->\n\nDeviceDataComponent->AppModule\n\n\n\n\n\nDevicesComponent\n\nDevicesComponent\n\nAppModule -->\n\nDevicesComponent->AppModule\n\n\n\n\n\nDevicesDefaultComponent\n\nDevicesDefaultComponent\n\nAppModule -->\n\nDevicesDefaultComponent->AppModule\n\n\n\n\n\nDocsComponent\n\nDocsComponent\n\nAppModule -->\n\nDocsComponent->AppModule\n\n\n\n\n\nFootNavComponent\n\nFootNavComponent\n\nAppModule -->\n\nFootNavComponent->AppModule\n\n\n\n\n\nHeadNavComponent\n\nHeadNavComponent\n\nAppModule -->\n\nHeadNavComponent->AppModule\n\n\n\n\n\nHomeComponent\n\nHomeComponent\n\nAppModule -->\n\nHomeComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nAppRoutingModule\n\nAppRoutingModule\n\nAppModule -->\n\nAppRoutingModule->AppModule\n\n\n\n\n\nSharedModule\n\nSharedModule\n\nAppModule -->\n\nSharedModule->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            AppComponent\n                        \n                        \n                            DashboardComponent\n                        \n                        \n                            DeviceDataComponent\n                        \n                        \n                            DevicesComponent\n                        \n                        \n                            DevicesDefaultComponent\n                        \n                        \n                            DocsComponent\n                        \n                        \n                            FootNavComponent\n                        \n                        \n                            HeadNavComponent\n                        \n                        \n                            HomeComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AppRoutingModule\n                        \n                        \n                            SharedModule\n                        \n                    \n                \n                \n                    Bootstrap\n                    \n                        \n                            AppComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { SharedModule } from './shared/shared.module';\nimport { environment } from './../environments/environment';\nimport { NgModule } from '@angular/core';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { FootNavComponent } from './components/footer/foot-nav/foot-nav.component';\nimport { HeadNavComponent } from './components/header/head-nav/head-nav.component';\nimport { HomeComponent } from './components/body/home/home.component';\nimport { DevicesComponent } from './components/body/devices/devices.component';\nimport { DocsComponent } from './components/body/docs/docs.component';\nimport { DashboardComponent } from './components/body/dashboard/dashboard.component';\nimport { AuthModule } from '@auth0/auth0-angular';\nimport { NgCircleProgressModule } from 'ng-circle-progress';\nimport { DeviceDataComponent } from './components/body/dashboard/device-data/device-data.component';\nimport { HttpClientModule } from '@angular/common/http';\nimport { AuthHttpInterceptor } from '@auth0/auth0-angular';\nimport { HTTP_INTERCEPTORS } from '@angular/common/http';\nimport { DevicesDefaultComponent } from './components/body/devices/devices-default/devices-default.component';\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    FootNavComponent,\n    HeadNavComponent,\n    HomeComponent,\n    DevicesComponent,\n    DocsComponent,\n    DashboardComponent,\n    DeviceDataComponent,\n    DevicesDefaultComponent,\n  ],\n  imports: [\n    AppRoutingModule,\n    AuthModule.forRoot({\n      ...environment.auth,\n      httpInterceptor: environment.httpInterceptor,\n    }),\n    NgCircleProgressModule.forRoot({\n      animation: true,\n      animationDuration: 300,\n    }),\n    HttpClientModule,\n    SharedModule,\n    BrowserModule,\n    BrowserAnimationsModule,\n    NgbModule,\n  ],\n  providers: [\n    {\n      provide: HTTP_INTERCEPTORS,\n      useClass: AuthHttpInterceptor,\n      multi: true,\n    },\n  ],\n  bootstrap: [AppComponent],\n})\nexport class AppModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppRoutingModule.html":{"url":"modules/AppRoutingModule.html","title":"module - AppRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    AppRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app-routing.module.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { DevicesDefaultComponent } from './components/body/devices/devices-default/devices-default.component';\nimport { BatteryTestComponent } from './components/body/battery-test/battery-test.component';\nimport { DeviceDataComponent } from './components/body/dashboard/device-data/device-data.component';\nimport { DashboardComponent } from './components/body/dashboard/dashboard.component';\nimport { DocsComponent } from './components/body/docs/docs.component';\nimport { DevicesComponent } from './components/body/devices/devices.component';\nimport { HomeComponent } from './components/body/home/home.component';\nimport { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { AuthGuard } from './guards/auth.guard';\n\nconst routes: Routes = [\n  {\n    path: 'home',\n    component: HomeComponent,\n  },\n  {\n    path: 'dashboard',\n    component: DashboardComponent,\n    canActivate: [AuthGuard],\n    children: [\n      {\n        path: 'device-data/:deviceId',\n        component: DeviceDataComponent,\n      },\n    ],\n  },\n  {\n    path: 'devices',\n    canActivate: [AuthGuard],\n    component: DevicesComponent,\n    children: [\n      { path: 'default', component: DevicesDefaultComponent },\n      {\n        path: 'cells',\n        loadChildren: () =>\n          \"import('./cells/cells.module').then((m) => m.CellsModule)\",\n      },\n      {\n        path: 'battery-packs',\n        loadChildren: () =>\n          \"import('./battery-packs/battery-packs.module').then(\\\n            (m) => m.BatteryPacksModule\\\n          )\",\n      },\n      {\n        path: 'test-chambers',\n        loadChildren: () =>\n          \"import('./test-chambers/test-chambers.module').then(\\\n            (m) => m.TestChambersModule\\\n          )\",\n      },\n      { path: '', redirectTo: 'default', pathMatch: 'full' },\n    ],\n  },\n  {\n    path: 'docs',\n    component: DocsComponent,\n  },\n  {\n    path: 'battery-test',\n    canActivate: [AuthGuard],\n    children: [\n      {\n        path: '',\n        loadChildren: () =>\n          \"import('./battery-test/battery-test.module').then(\\\n            (m) => m.BatteryTestModule\\\n          )\",\n      },\n    ],\n  },\n  {\n    path: '',\n    redirectTo: 'home',\n    pathMatch: 'full',\n  },\n  {\n    path: '**',\n    redirectTo: 'home',\n    pathMatch: 'full',\n  },\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule],\n})\nexport class AppRoutingModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"guards/AuthGuard.html":{"url":"guards/AuthGuard.html","title":"guard - AuthGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n    Guards\n    AuthGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n        \n            \n            File\n            \n            \n                src/app/guards/auth.guard.ts\n            \n\n\n\n\n\n\n                \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                canActivate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n                \n    Constructor\n        \n            \n                \n                    \nconstructor(auth: AuthService)\n                    \n                \n                        \n                            \n                                Defined in src/app/guards/auth.guard.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        auth\n                                                  \n                                                        \n                                                                    AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n                \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        canActivate\n                        \n                    \n                \n            \n            \n                \ncanActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot)\n                \n            \n\n\n            \n                \n                    Defined in src/app/guards/auth.guard.ts:14\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    route\n                                    \n                                                ActivatedRouteSnapshot\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    state\n                                    \n                                                RouterStateSnapshot\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n        \n\n\n        \n            import { environment } from 'src/environments/environment';\nimport { Injectable } from '@angular/core';\nimport { ActivatedRouteSnapshot, RouterStateSnapshot, CanActivate } from '@angular/router';\nimport { AuthService } from '@auth0/auth0-angular';\nimport { Observable } from 'rxjs';\nimport { tap } from 'rxjs/operators';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthGuard implements CanActivate {\n  constructor(private auth: AuthService) {}\n\n  canActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): Observable {\n    return this.auth.isAuthenticated$.pipe(\n      tap(loggedIn => {\n        if (!loggedIn) {\n          this.auth.loginWithRedirect({redirect_uri:environment.appUri, appState: { target: state.url } });\n        }\n      })\n    );\n  }\n}\n\n        \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/BatteryPacksComponent.html":{"url":"components/BatteryPacksComponent.html","title":"component - BatteryPacksComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  BatteryPacksComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/body/devices/battery-packs/battery-packs.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-battery-packs\n            \n\n            \n                styleUrls\n                ./battery-packs.component.css\n            \n\n\n\n            \n                templateUrl\n                ./battery-packs.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-battery-packs',\n  templateUrl: './battery-packs.component.html',\n  styleUrls: ['./battery-packs.component.css']\n})\nexport class BatteryPacksComponent {\n\n}\n\n    \n\n    \n        comming soon!\n\n    \n\n    \n                \n                    ./battery-packs.component.css\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = 'comming soon!'\n    var COMPONENTS = [{'name': 'AddBatteryPackComponent', 'selector': 'app-add-battery-pack'},{'name': 'AddCellsComponent', 'selector': 'app-add-cells'},{'name': 'AddTestChamberComponent', 'selector': 'app-add-test-chamber'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BatteryPacksComponent', 'selector': 'app-battery-packs'},{'name': 'BatteryTestComponent', 'selector': 'app-battery-test'},{'name': 'CellsComponent', 'selector': 'app-cells'},{'name': 'CreateNewTestComponent', 'selector': 'app-create-new-test'},{'name': 'DashboardComponent', 'selector': 'app-dashboard'},{'name': 'DeviceDataComponent', 'selector': 'app-device-data'},{'name': 'DevicesComponent', 'selector': 'app-devices'},{'name': 'DevicesDefaultComponent', 'selector': 'app-devices-default'},{'name': 'DocsComponent', 'selector': 'app-docs'},{'name': 'EditBatteryPackComponent', 'selector': 'app-edit-battery-pack'},{'name': 'EditCellsComponent', 'selector': 'app-edit-cells'},{'name': 'EditTestChamberComponent', 'selector': 'app-edit-test-chamber'},{'name': 'FootNavComponent', 'selector': 'app-foot-nav'},{'name': 'HeadNavComponent', 'selector': 'app-head-nav'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'NoResultComponent', 'selector': 'app-no-result'},{'name': 'ShowAllTestsResultComponent', 'selector': 'app-show-all-tests-result'},{'name': 'ShowTestResultComponent', 'selector': 'app-show-test-result'},{'name': 'TestChambersComponent', 'selector': 'app-test-chambers'},{'name': 'ViewBatteryPacksComponent', 'selector': 'app-view-battery-packs'},{'name': 'ViewCellsComponent', 'selector': 'app-view-cells'},{'name': 'ViewTestChambersComponent', 'selector': 'app-view-test-chambers'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'BatteryPacksComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/BatteryPacksModule.html":{"url":"modules/BatteryPacksModule.html","title":"module - BatteryPacksModule","body":"\n                   \n\n\n\n\n    Modules\n    BatteryPacksModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_BatteryPacksModule\n\n\n\ncluster_BatteryPacksModule_imports\n\n\n\ncluster_BatteryPacksModule_declarations\n\n\n\n\nAddBatteryPackComponent\n\nAddBatteryPackComponent\n\n\n\nBatteryPacksModule\n\nBatteryPacksModule\n\nBatteryPacksModule -->\n\nAddBatteryPackComponent->BatteryPacksModule\n\n\n\n\n\nBatteryPacksComponent\n\nBatteryPacksComponent\n\nBatteryPacksModule -->\n\nBatteryPacksComponent->BatteryPacksModule\n\n\n\n\n\nEditBatteryPackComponent\n\nEditBatteryPackComponent\n\nBatteryPacksModule -->\n\nEditBatteryPackComponent->BatteryPacksModule\n\n\n\n\n\nViewBatteryPacksComponent\n\nViewBatteryPacksComponent\n\nBatteryPacksModule -->\n\nViewBatteryPacksComponent->BatteryPacksModule\n\n\n\n\n\nBatteryPacksRoutingModule\n\nBatteryPacksRoutingModule\n\nBatteryPacksModule -->\n\nBatteryPacksRoutingModule->BatteryPacksModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/battery-packs/battery-packs.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            AddBatteryPackComponent\n                        \n                        \n                            BatteryPacksComponent\n                        \n                        \n                            EditBatteryPackComponent\n                        \n                        \n                            ViewBatteryPacksComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            BatteryPacksRoutingModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { BatteryPacksRoutingModule } from './battery-packs-routing.module';\nimport { BatteryPacksComponent } from '../components/body/devices/battery-packs/battery-packs.component';\nimport { ViewBatteryPacksComponent } from '../components/body/devices/battery-packs/view-battery-packs/view-battery-packs.component';\nimport { EditBatteryPackComponent } from '../components/body/devices/battery-packs/edit-battery-pack/edit-battery-pack.component';\nimport { AddBatteryPackComponent } from '../components/body/devices/battery-packs/add-battery-pack/add-battery-pack.component';\n\n\n@NgModule({\n  declarations: [\n    BatteryPacksComponent,\n    ViewBatteryPacksComponent,\n    EditBatteryPackComponent,\n    AddBatteryPackComponent\n  ],\n  imports: [\n    CommonModule,\n    BatteryPacksRoutingModule\n  ]\n})\nexport class BatteryPacksModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/BatteryPacksRoutingModule.html":{"url":"modules/BatteryPacksRoutingModule.html","title":"module - BatteryPacksRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    BatteryPacksRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/battery-packs/battery-packs-routing.module.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { AddBatteryPackComponent } from './../components/body/devices/battery-packs/add-battery-pack/add-battery-pack.component';\nimport { EditBatteryPackComponent } from './../components/body/devices/battery-packs/edit-battery-pack/edit-battery-pack.component';\nimport { ViewBatteryPacksComponent } from './../components/body/devices/battery-packs/view-battery-packs/view-battery-packs.component';\nimport { BatteryPacksComponent } from './../components/body/devices/battery-packs/battery-packs.component';\nimport { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\n\nconst routes: Routes = [\n  { path: 'view', component: ViewBatteryPacksComponent },\n  { path: 'edit', component: EditBatteryPackComponent },\n  { path: 'add', component: AddBatteryPackComponent },\n  { path: '', component: BatteryPacksComponent },\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class BatteryPacksRoutingModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/BatteryTestComponent.html":{"url":"components/BatteryTestComponent.html","title":"component - BatteryTestComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  BatteryTestComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/body/battery-test/battery-test.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n                    OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-battery-test\n            \n\n            \n                styleUrls\n                ./battery-test.component.css\n            \n\n\n\n            \n                templateUrl\n                ./battery-test.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                delay\n                            \n                            \n                                    Optional\n                                interValId\n                            \n                            \n                                isTestInfoViewEnabled\n                            \n                            \n                                liveTests\n                            \n                            \n                                    Optional\n                                sub\n                            \n                            \n                                subs\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                changeView\n                            \n                            \n                                getTests\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(location: Location, _testChamberService: TestChamberService, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/body/battery-test/battery-test.component.ts:19\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        location\n                                                  \n                                                        \n                                                                        Location\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        _testChamberService\n                                                  \n                                                        \n                                                                        TestChamberService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        changeView\n                        \n                    \n                \n            \n            \n                \nchangeView()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/body/battery-test/battery-test.component.ts:54\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getTests\n                        \n                    \n                \n            \n            \n                \ngetTests()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/body/battery-test/battery-test.component.ts:35\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnDestroy\n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/body/battery-test/battery-test.component.ts:47\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/body/battery-test/battery-test.component.ts:26\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        delay\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 10000\n                    \n                \n                    \n                        \n                                Defined in src/app/components/body/battery-test/battery-test.component.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        interValId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                    \n                        \n                                Defined in src/app/components/body/battery-test/battery-test.component.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isTestInfoViewEnabled\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/components/body/battery-test/battery-test.component.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        liveTests\n                        \n                    \n                \n            \n                \n                    \n                        Type :     _TestResultLight[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/components/body/battery-test/battery-test.component.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        sub\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Subscription\n\n                    \n                \n                    \n                        \n                                Defined in src/app/components/body/battery-test/battery-test.component.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        subs\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Subscription[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/components/body/battery-test/battery-test.component.ts:14\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Router } from '@angular/router';\nimport { TestChamberService } from 'src/app/services/test-chamber.service';\nimport { _TestResultLight } from './../../../models/TestResult';\nimport { Subscription } from 'rxjs';\nimport { Location } from '@angular/common';\nimport { Component, OnInit, OnDestroy } from '@angular/core';\n\n@Component({\n  selector: 'app-battery-test',\n  templateUrl: './battery-test.component.html',\n  styleUrls: ['./battery-test.component.css'],\n})\nexport class BatteryTestComponent implements OnInit, OnDestroy {\n  subs: Subscription[] = [];\n  liveTests: _TestResultLight[] = [];\n  sub?: Subscription;\n  delay: number = 10000;\n  interValId?: any;\n  isTestInfoViewEnabled: boolean = false;\n  constructor(\n    private location: Location,\n    private _testChamberService: TestChamberService,\n    private router: Router\n  ) {}\n\n  ngOnInit(): void {\n    if (window.location.hostname != 'localhost') {\n      this.location.replaceState('./'); //on prod\n    }\n    this.getTests();\n    this.interValId = setInterval(() => {\n      this.getTests();\n    }, this.delay);\n  }\n  getTests() {\n    this.sub = this._testChamberService.getLiveTests().subscribe({\n      next: (tests: any) => {\n        this.liveTests = tests;\n        this.sub?.unsubscribe();\n      },\n      error: (err) => {\n        console.log(err);\n        this.liveTests = [];\n      },\n    });\n  }\n  ngOnDestroy(): void {\n    this.subs.forEach((sub) => {\n      sub.unsubscribe();\n    });\n    this.sub?.unsubscribe();\n    clearInterval(this.interValId);\n  }\n  changeView() {\n    this.isTestInfoViewEnabled = !this.isTestInfoViewEnabled;\n  }\n}\n\n    \n\n    \n        \n  \n    Battery Test\n    \n      \n        \n          \n            See all tests\n          \n        \n        \n          \n            Create new test\n          \n        \n      \n    \n  \n  \n    \n      \n        \n          \n            \n              Ongoing Tests\n              live\n            \n            \n               labs \n            \n          \n        \n\n        \n          There is no test running at the moment.\n        \n        \n          \n            \n              \n                \n                  \n                    \n                      {{ test.testName }}\n                      \n                        {{ test.chamberName }}\n                      \n                    \n                  \n                  \n                    \n                      Test Id:\n                      {{ test._id }}\n                    \n                    \n                      Status:\n                      {{ test.status }}\n                    \n                    \n                      Channels:\n                      \n                        \n                          \n                            Channel {{ ch.channelNo }} :\n                              {{ ch.statusCh }}\n                            \n                              \n                                @ {{ ch.chMultiplierIndex }}\n                              \n                            \n                          \n                        \n                      \n                    \n                  \n                \n              \n            \n          \n        \n      \n    \n  \n\n\n\n  \n    \n      \n        Back\n      \n    \n    \n      \n        \n          \n            See all tests\n          \n        \n        \n          \n            Create new test\n          \n        \n      \n    \n  \n  \n\n\n    \n\n    \n                \n                    ./battery-test.component.css\n                \n                .header-black {\n  background-color: #010305cf;\n  color: white;\n}\n.header-black * {\n  vertical-align: middle;\n}\n.live-tests-container .card {\n  margin-top: 20px;\n}\n.progress {\n  margin-top: 5px;\n  margin-bottom: 5px;\n}\n.live-test {\n  cursor: pointer;\n}\n.live-test:hover .card-header {\n  background-color: rgba(85, 117, 120, 0.452);\n}\n.header-control .btn {\n  width: 100%;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      Battery Test                                        See all tests                                                Create new test                                                                                      Ongoing Tests              live                                       labs                                                 There is no test running at the moment.                                                                                                                                {{ test.testName }}                                              {{ test.chamberName }}                                                                                                                        Test Id:                      {{ test._id }}                                                              Status:                      {{ test.status }}                                                              Channels:                                                                                                    Channel {{ ch.channelNo }} :                              {{ ch.statusCh }}                                                                                          @ {{ ch.chMultiplierIndex }}                                                                                                                                                                                                                                                                    Back                                                  See all tests                                                Create new test                                '\n    var COMPONENTS = [{'name': 'AddBatteryPackComponent', 'selector': 'app-add-battery-pack'},{'name': 'AddCellsComponent', 'selector': 'app-add-cells'},{'name': 'AddTestChamberComponent', 'selector': 'app-add-test-chamber'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BatteryPacksComponent', 'selector': 'app-battery-packs'},{'name': 'BatteryTestComponent', 'selector': 'app-battery-test'},{'name': 'CellsComponent', 'selector': 'app-cells'},{'name': 'CreateNewTestComponent', 'selector': 'app-create-new-test'},{'name': 'DashboardComponent', 'selector': 'app-dashboard'},{'name': 'DeviceDataComponent', 'selector': 'app-device-data'},{'name': 'DevicesComponent', 'selector': 'app-devices'},{'name': 'DevicesDefaultComponent', 'selector': 'app-devices-default'},{'name': 'DocsComponent', 'selector': 'app-docs'},{'name': 'EditBatteryPackComponent', 'selector': 'app-edit-battery-pack'},{'name': 'EditCellsComponent', 'selector': 'app-edit-cells'},{'name': 'EditTestChamberComponent', 'selector': 'app-edit-test-chamber'},{'name': 'FootNavComponent', 'selector': 'app-foot-nav'},{'name': 'HeadNavComponent', 'selector': 'app-head-nav'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'NoResultComponent', 'selector': 'app-no-result'},{'name': 'ShowAllTestsResultComponent', 'selector': 'app-show-all-tests-result'},{'name': 'ShowTestResultComponent', 'selector': 'app-show-test-result'},{'name': 'TestChambersComponent', 'selector': 'app-test-chambers'},{'name': 'ViewBatteryPacksComponent', 'selector': 'app-view-battery-packs'},{'name': 'ViewCellsComponent', 'selector': 'app-view-cells'},{'name': 'ViewTestChambersComponent', 'selector': 'app-view-test-chambers'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'BatteryTestComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/BatteryTestModule.html":{"url":"modules/BatteryTestModule.html","title":"module - BatteryTestModule","body":"\n                   \n\n\n\n\n    Modules\n    BatteryTestModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_BatteryTestModule\n\n\n\ncluster_BatteryTestModule_imports\n\n\n\ncluster_BatteryTestModule_declarations\n\n\n\n\nBatteryTestComponent\n\nBatteryTestComponent\n\n\n\nBatteryTestModule\n\nBatteryTestModule\n\nBatteryTestModule -->\n\nBatteryTestComponent->BatteryTestModule\n\n\n\n\n\nCreateNewTestComponent\n\nCreateNewTestComponent\n\nBatteryTestModule -->\n\nCreateNewTestComponent->BatteryTestModule\n\n\n\n\n\nNoResultComponent\n\nNoResultComponent\n\nBatteryTestModule -->\n\nNoResultComponent->BatteryTestModule\n\n\n\n\n\nShowAllTestsResultComponent\n\nShowAllTestsResultComponent\n\nBatteryTestModule -->\n\nShowAllTestsResultComponent->BatteryTestModule\n\n\n\n\n\nShowTestResultComponent\n\nShowTestResultComponent\n\nBatteryTestModule -->\n\nShowTestResultComponent->BatteryTestModule\n\n\n\n\n\nBatteryTestRoutingModule\n\nBatteryTestRoutingModule\n\nBatteryTestModule -->\n\nBatteryTestRoutingModule->BatteryTestModule\n\n\n\n\n\nNgbPagination\n\nNgbPagination\n\nBatteryTestModule -->\n\nNgbPagination->BatteryTestModule\n\n\n\n\n\nSharedModule\n\nSharedModule\n\nBatteryTestModule -->\n\nSharedModule->BatteryTestModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/battery-test/battery-test.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            BatteryTestComponent\n                        \n                        \n                            CreateNewTestComponent\n                        \n                        \n                            NoResultComponent\n                        \n                        \n                            ShowAllTestsResultComponent\n                        \n                        \n                            ShowTestResultComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            BatteryTestRoutingModule\n                        \n                        \n                            NgbPagination\n                        \n                        \n                            SharedModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { RouterModule } from '@angular/router';\nimport { NgbPagination } from '@ng-bootstrap/ng-bootstrap';\nimport { NgChartsModule } from 'ng2-charts';\nimport { ShowTestResultComponent } from './../components/body/battery-test/show-test-result/show-test-result.component';\nimport { NoResultComponent } from './../components/body/battery-test/no-result/no-result.component';\nimport { CreateNewTestComponent } from './../components/body/battery-test/create-new-test/create-new-test.component';\nimport { BatteryTestComponent } from './../components/body/battery-test/battery-test.component';\nimport { SharedModule } from './../shared/shared.module';\nimport { NgSelectModule } from '@ng-select/ng-select';\nimport { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { BatteryTestRoutingModule } from './battery-test-routing.module';\nimport { ShowAllTestsResultComponent } from '../components/body/battery-test/show-all-tests-result/show-all-tests-result.component';\n\n@NgModule({\n  declarations: [\n    BatteryTestComponent,\n    CreateNewTestComponent,\n    NoResultComponent,\n    ShowTestResultComponent,\n    ShowAllTestsResultComponent,\n  ],\n  imports: [\n    CommonModule,\n    BatteryTestRoutingModule,\n    NgSelectModule,\n    SharedModule,\n    NgChartsModule,\n    NgbPagination,\n    RouterModule,\n  ],\n})\nexport class BatteryTestModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/BatteryTestRoutingModule.html":{"url":"modules/BatteryTestRoutingModule.html","title":"module - BatteryTestRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    BatteryTestRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/battery-test/battery-test-routing.module.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { ShowTestResultComponent } from './../components/body/battery-test/show-test-result/show-test-result.component';\nimport { CreateNewTestComponent } from './../components/body/battery-test/create-new-test/create-new-test.component';\nimport { BatteryTestComponent } from './../components/body/battery-test/battery-test.component';\nimport { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { ShowAllTestsResultComponent } from '../components/body/battery-test/show-all-tests-result/show-all-tests-result.component';\n\nconst routes: Routes = [\n  { path: 'add', component: CreateNewTestComponent },\n  {\n    path: 'view-all',\n    component: ShowAllTestsResultComponent,\n    children: [\n      { path: 'view/:chamberId/:testId', component: ShowTestResultComponent },\n    ],\n  },\n  {\n    path: '',\n    component: BatteryTestComponent,\n    children: [\n      { path: 'view/:chamberId/:testId', component: ShowTestResultComponent },\n    ],\n  },\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class BatteryTestRoutingModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/BreadCrumbs.html":{"url":"interfaces/BreadCrumbs.html","title":"interface - BreadCrumbs","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  BreadCrumbs\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/components/body/dashboard/dashboard.component.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            name\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            status\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            url\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        status\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        status:     \"active\" | \"disabled\"\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     \"active\" | \"disabled\"\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        url\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        url:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { ComponentStoreService } from './../../../services/component-store.service';\nimport { DeviceDataService } from './../../../services/device-data.service';\nimport { DeviceDataLight } from './../../../models/DeviceData';\nimport { Component, OnDestroy, OnInit, ɵɵtrustConstantResourceUrl } from '@angular/core';\nimport { NavigationEnd, Router } from '@angular/router';\nimport { Subscription } from 'rxjs';\n\ninterface BreadCrumbs{\n  url?:string,\n  name?:string,\n  status?:'active'|'disabled'\n}\n\n@Component({\n  selector: 'app-dashboard',\n  templateUrl: './dashboard.component.html',\n  styleUrls: ['./dashboard.component.css']\n})\nexport class DashboardComponent implements OnInit, OnDestroy {\n  devices:DeviceDataLight[]|undefined = undefined;\n  noOfDevices:number|undefined = undefined;\n  noOfDevicesConnected:number|undefined = undefined;\n  isOnOverView:boolean = true;//controls whthere the all pack has been shown or a particular pack details is appearing\n  subscriptions:Subscription[] = [];\n\n  breadCrumbs:BreadCrumbs[]= [];\n  \n\n  constructor(\n    private deviceData:DeviceDataService,\n    private router:Router,\n    private store:ComponentStoreService,\n    ) {\n    this.detectUrlChanges();\n    }\n\n  ngOnInit(): void {\n    this.detectUrlChanges();\n  }\n  \n  goToPackDetails(){\n    this.isOnOverView = false;\n  }\n\n  detectUrlChanges(){\n    let subs = this.router.events.subscribe(data=>{\n      \n      //Detects the change of urls, will be used when getting bakc to parent component from child component\n      if(data instanceof NavigationEnd){\n        this.breadCrumbs = [];\n        let urlComponents = this.router.url.split('/');\n        urlComponents.shift();//exculde the first \"\" element\n\n        if(urlComponents.length == 3){\n          this.breadCrumbs.push({name:'Dashboard',url:'./../dashboard',status:'active'});\n          this.breadCrumbs.push({name:'Device data',url:'./',status:'disabled'});\n          this.isOnOverView = false;\n        }\n        else if(urlComponents.length == 1){\n          this.breadCrumbs.push({name:'Dashboard',url:'./',status:'disabled'});\n          this.isOnOverView = true;\n\n          let subs = this.deviceData.getDeviceDataLight().subscribe( \n            (data:DeviceDataLight[])=>{\n            this.devices = data;\n            this.noOfDevices = data.length;\n            this.noOfDevicesConnected = data.length;//check how many devices are connected.\n          },\n          (error) =>{\n            this.store.sendToastMsg({msg:'Something went wrong!',type:'warning',color:'red'});\n          }\n          );\n          this.subscriptions?.push(subs);\n        }\n        console.log(this.breadCrumbs)\n      }\n    })\n    this.subscriptions?.push(subs);\n  }\n\n  ngOnDestroy(): void {\n      this.subscriptions?.forEach(subs=>{\n        subs.unsubscribe();\n      })\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Cell.html":{"url":"interfaces/Cell.html","title":"interface - Cell","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Cell\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/Cell.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            _id\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            accessType\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            assignedUsers\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            batchNo\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            cellChemistry\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            cellName\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            cellQuantity\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            formFactor\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            manufacturer\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            maxVolt\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            minVolt\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            nomCap\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            nomCurr\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            nomVolt\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            testsPerformed\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            type\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            users\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        _id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        _id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        accessType\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        accessType:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        assignedUsers\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        assignedUsers:     _UserLight[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     _UserLight[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        batchNo\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        batchNo:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        cellChemistry\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        cellChemistry:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        cellName\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        cellName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        cellQuantity\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        cellQuantity:         Number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        formFactor\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        formFactor:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        manufacturer\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        manufacturer:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        maxVolt\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        maxVolt:         Number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        minVolt\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        minVolt:         Number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        nomCap\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        nomCap:         Number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        nomCurr\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        nomCurr:         Number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        nomVolt\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        nomVolt:         Number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        testsPerformed\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        testsPerformed:     literal type[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        type:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        users\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        users:     any[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     any[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { _UserLight } from './../services/user.service';\nexport interface Cell {\n  _id?: string;\n  cellName?: string;\n  cellQuantity?: Number; //should not be presetn on api schema\n  manufacturer?: string;\n  batchNo?: string;\n  type?: string;\n  formFactor?: string;\n  cellChemistry?: string;\n  nomVolt?: Number;\n  nomCap?: Number;\n  nomCurr?: Number;\n  maxVolt?: Number;\n  minVolt?: Number;\n  users?: any[];\n  accessType?: string;\n  assignedUsers?: _UserLight[];\n  testsPerformed?: { testConfigChannelId: string }[];\n}\n\nexport class CellClass implements Cell {\n  constructor(\n    public _id?: string,\n    public cellName?: string,\n    public nomVolt?: number,\n    public nomCap?: number,\n    public manufacturer?: string,\n    public cellQuantity?: number,\n    public batchNo?: string,\n    public type?: string,\n    public formFactor?: string,\n    public cellChemistry?: string,\n    public nomCurr?: number,\n    public maxVolt?: number,\n    public minVolt?: number\n  ) {}\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CellClass.html":{"url":"classes/CellClass.html","title":"class - CellClass","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CellClass\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/Cell.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                            Cell\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Optional\n                                _id\n                            \n                            \n                                    Public\n                                    Optional\n                                batchNo\n                            \n                            \n                                    Public\n                                    Optional\n                                cellChemistry\n                            \n                            \n                                    Public\n                                    Optional\n                                cellName\n                            \n                            \n                                    Public\n                                    Optional\n                                cellQuantity\n                            \n                            \n                                    Public\n                                    Optional\n                                formFactor\n                            \n                            \n                                    Public\n                                    Optional\n                                manufacturer\n                            \n                            \n                                    Public\n                                    Optional\n                                maxVolt\n                            \n                            \n                                    Public\n                                    Optional\n                                minVolt\n                            \n                            \n                                    Public\n                                    Optional\n                                nomCap\n                            \n                            \n                                    Public\n                                    Optional\n                                nomCurr\n                            \n                            \n                                    Public\n                                    Optional\n                                nomVolt\n                            \n                            \n                                    Public\n                                    Optional\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(_id?: string, cellName?: string, nomVolt?: number, nomCap?: number, manufacturer?: string, cellQuantity?: number, batchNo?: string, type?: string, formFactor?: string, cellChemistry?: string, nomCurr?: number, maxVolt?: number, minVolt?: number)\n                    \n                \n                        \n                            \n                                Defined in src/app/models/Cell.ts:22\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        _id\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        cellName\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        nomVolt\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        nomCap\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        manufacturer\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        cellQuantity\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        batchNo\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        type\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        formFactor\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        cellChemistry\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        nomCurr\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        maxVolt\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        minVolt\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Optional\n                        _id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/models/Cell.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Optional\n                        batchNo\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/models/Cell.ts:30\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Optional\n                        cellChemistry\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/models/Cell.ts:33\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Optional\n                        cellName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/models/Cell.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Optional\n                        cellQuantity\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/app/models/Cell.ts:29\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Optional\n                        formFactor\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/models/Cell.ts:32\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Optional\n                        manufacturer\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/models/Cell.ts:28\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Optional\n                        maxVolt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/app/models/Cell.ts:35\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Optional\n                        minVolt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/app/models/Cell.ts:36\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Optional\n                        nomCap\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/app/models/Cell.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Optional\n                        nomCurr\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/app/models/Cell.ts:34\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Optional\n                        nomVolt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/app/models/Cell.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Optional\n                        type\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/models/Cell.ts:31\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { _UserLight } from './../services/user.service';\nexport interface Cell {\n  _id?: string;\n  cellName?: string;\n  cellQuantity?: Number; //should not be presetn on api schema\n  manufacturer?: string;\n  batchNo?: string;\n  type?: string;\n  formFactor?: string;\n  cellChemistry?: string;\n  nomVolt?: Number;\n  nomCap?: Number;\n  nomCurr?: Number;\n  maxVolt?: Number;\n  minVolt?: Number;\n  users?: any[];\n  accessType?: string;\n  assignedUsers?: _UserLight[];\n  testsPerformed?: { testConfigChannelId: string }[];\n}\n\nexport class CellClass implements Cell {\n  constructor(\n    public _id?: string,\n    public cellName?: string,\n    public nomVolt?: number,\n    public nomCap?: number,\n    public manufacturer?: string,\n    public cellQuantity?: number,\n    public batchNo?: string,\n    public type?: string,\n    public formFactor?: string,\n    public cellChemistry?: string,\n    public nomCurr?: number,\n    public maxVolt?: number,\n    public minVolt?: number\n  ) {}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/CellService.html":{"url":"injectables/CellService.html","title":"injectable - CellService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  CellService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/cell.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addCell\n                            \n                            \n                                    Private\n                                errorHandler\n                            \n                            \n                                getCellForExperiment\n                            \n                            \n                                getCells\n                            \n                            \n                                getTemplates\n                            \n                            \n                                markForDelete\n                            \n                            \n                                updateCell\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/cell.service.ts:17\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        addCell\n                        \n                    \n                \n            \n            \n                \naddCell(cell: Cell)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/cell.service.ts:26\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    cell\n                                    \n                                                Cell\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        errorHandler\n                        \n                    \n                \n            \n            \n                \n                    \n                    errorHandler(error: HttpErrorResponse)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/cell.service.ts:76\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    error\n                                    \n                                                HttpErrorResponse\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getCellForExperiment\n                        \n                    \n                \n            \n            \n                \ngetCellForExperiment(searchStr: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/cell.service.ts:32\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    searchStr\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getCells\n                        \n                    \n                \n            \n            \n                \ngetCells(cellId?: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/cell.service.ts:47\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    cellId\n                                    \n                                                string\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getTemplates\n                        \n                    \n                \n            \n            \n                \ngetTemplates()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/cell.service.ts:20\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        markForDelete\n                        \n                    \n                \n            \n            \n                \nmarkForDelete(cellId: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/cell.service.ts:66\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    cellId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateCell\n                        \n                    \n                \n            \n            \n                \nupdateCell(payload: Cell)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/cell.service.ts:60\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    payload\n                                    \n                                                Cell\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import {\n  HttpClient,\n  HttpErrorResponse,\n  HttpResponse,\n  HttpParams,\n} from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { throwError } from 'rxjs';\nimport { retry, catchError, share } from 'rxjs/operators';\nimport { User } from '@auth0/auth0-angular';\nimport { environment } from 'src/environments/environment';\nimport { Cell } from '../models/Cell';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class CellService {\n  constructor(private http: HttpClient) {}\n\n  getTemplates() {\n    return this.http\n      .get(`${environment.apiUri}/api/protected/cell/cell-templates`)\n      .pipe(share(), retry(3), catchError(this.errorHandler));\n  }\n\n  addCell(cell: Cell) {\n    return this.http\n      .post(`${environment.apiUri}/api/protected/cell/cell-info`, cell)\n      .pipe(retry(3), catchError(this.errorHandler));\n  }\n\n  getCellForExperiment(searchStr: string) {\n    //return on the cells on which you can perform an experiment\n    // in other words in which you have admin or write access\n    let params = new HttpParams();\n    if (searchStr) {\n      params = params.set('searchStr', searchStr);\n    }\n    return this.http\n      .get(\n        `${environment.apiUri}/api/protected/cell/cell-info/for-experiment`,\n        { params: params }\n      )\n      .pipe(retry(2), catchError(this.errorHandler));\n  }\n\n  getCells(cellId?: string) {\n    //return all the cell on which you have any type of access\n    let params = new HttpParams();\n    if (cellId) {\n      params = params.set('cellId', cellId);\n    }\n    return this.http\n      .get(`${environment.apiUri}/api/protected/cell/cell-info/`, {\n        params: params,\n      })\n      .pipe(retry(2), catchError(this.errorHandler));\n  }\n\n  updateCell(payload: Cell) {\n    return this.http\n      .put(`${environment.apiUri}/api/protected/cell/cell-info`, { ...payload })\n      .pipe(retry(2), catchError(this.errorHandler));\n  }\n\n  markForDelete(cellId: string) {\n    let params = new HttpParams();\n    params = params.set('cellId', cellId);\n    return this.http\n      .delete(`${environment.apiUri}/api/protected/cell/cell-info`, {\n        params: params,\n      })\n      .pipe(retry(2), catchError(this.errorHandler));\n  }\n\n  private errorHandler(error: HttpErrorResponse) {\n    if (error.status === 0) {\n      console.error(\n        `Something went wrong with the network. Error status : ${error.status}`\n      );\n    } else {\n      console.error(`Backed has rejected the request. ${error.error}`);\n    }\n    return throwError(() => new Error(error.error));\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/CellTemplate.html":{"url":"interfaces/CellTemplate.html","title":"interface - CellTemplate","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  CellTemplate\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/CellTemplate.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            _id\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            cellChemistry\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            formFactor\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            manufacturer\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            maxVoltage\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            minVoltage\n                                        \n                                \n                                \n                                        \n                                            nomCapacity\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            nomCurrent\n                                        \n                                \n                                \n                                        \n                                            nomVoltage\n                                        \n                                \n                                \n                                        \n                                            templateName\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            type\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        _id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        _id:         String\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         String\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        cellChemistry\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        cellChemistry:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        formFactor\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        formFactor:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        manufacturer\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        manufacturer:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        maxVoltage\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        maxVoltage:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        minVoltage\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        minVoltage:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        nomCapacity\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        nomCapacity:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        nomCurrent\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        nomCurrent:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        nomVoltage\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        nomVoltage:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        templateName\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        templateName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        type:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface CellTemplate {\n  _id: String;\n  templateName: string;\n  manufacturer?: string;\n  nomVoltage: number; //in V\n  nomCurrent?: number; //in A\n  nomCapacity: number; //in mAh\n  maxVoltage?: number; //in V\n  minVoltage?: number; //in V\n  formFactor?: string;\n  cellChemistry?: string;\n  type?: string; //Pouch,Cyclindrical,Prismatic\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/CellsComponent.html":{"url":"components/CellsComponent.html","title":"component - CellsComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  CellsComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/body/devices/cells/cells.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n                    OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-cells\n            \n\n            \n                styleUrls\n                ./cells.component.css\n            \n\n\n\n            \n                templateUrl\n                ./cells.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                isAnyCellAvailable\n                            \n                            \n                                subs\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(router: Router, location: Location, _cellService: CellService)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/body/devices/cells/cells.component.ts:14\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        location\n                                                  \n                                                        \n                                                                        Location\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        _cellService\n                                                  \n                                                        \n                                                                        CellService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnDestroy\n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/body/devices/cells/cells.component.ts:35\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/body/devices/cells/cells.component.ts:25\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        isAnyCellAvailable\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/components/body/devices/cells/cells.component.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        subs\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Subscription[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/components/body/devices/cells/cells.component.ts:14\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Subscription } from 'rxjs';\nimport { CellService } from './../../../../services/cell.service';\nimport { Router } from '@angular/router';\nimport { Component, OnInit, OnDestroy } from '@angular/core';\nimport { Location } from '@angular/common';\n\n@Component({\n  selector: 'app-cells',\n  templateUrl: './cells.component.html',\n  styleUrls: ['./cells.component.css'],\n})\nexport class CellsComponent implements OnInit, OnDestroy {\n  isAnyCellAvailable: boolean = false;\n  subs: Subscription[] = [];\n  constructor(\n    private router: Router,\n    private location: Location,\n    private _cellService: CellService\n  ) {\n    //console.log(router.routerState.snapshot.url)\n    if (window.location.hostname != 'localhost') {\n      this.location.replaceState('./'); //on prod\n    }\n  }\n  ngOnInit(): void {\n    const sub = this._cellService.getCells().subscribe({\n      next: (data: any) => {\n        if (data.length > 0) {\n          this.isAnyCellAvailable = true;\n        }\n      },\n    });\n    this.subs.push(sub);\n  }\n  ngOnDestroy(): void {\n    this.subs.forEach((sub) => {\n      sub.unsubscribe();\n    });\n  }\n}\n\n    \n\n    \n        \n  \n    \n      \n        battery_profile\n      \n    \n  \n  \n    \n      Battery Cells\n      \n        Our battery cell management page provides a simple and effective way to\n        maintain detailed records of your battery cells, ensuring that you have\n        the information you need to succeed.\n      \n    \n  \n  \n    \n      \n        \n          Add a new cell\n        \n      \n      \n        \n          Existing cells\n        \n      \n    \n  \n\n\n  \n    See Features\n  \n\n\n  \n    \n      \n        \n          \n            \n              \n                Battery Cell Tracking: Keep detailed records of\n                your battery cells for future testing and analysis.\n              \n              \n                Warehouse Management: Organize and manage your\n                battery cell inventory with ease.\n              \n              \n                Test Result Analysis: Analyze the results of\n                your battery cell tests to identify trends and patterns.\n              \n              \n                Easy Integration: Seamlessly integrate with\n                other pages, such as testchamber, to streamline your battery\n                testing process.\n              \n              \n                Customizable: Tailor the page to your specific\n                needs with flexible options for adding and organizing battery\n                cells.\n              \n            \n          \n        \n      \n      \n        \n      \n    \n  \n\n\n    \n\n    \n                \n                    ./cells.component.css\n                \n                #cells-image {\n  background-image: url(\"/e_mobility/i-bms/assets/Classic_iOS_Battery_Icon.png\");\n}\n.image-container {\n  height: 300px;\n  background-attachment: scroll;\n  background-repeat: no-repeat;\n  background-size: contain;\n  background-position: center;\n}\n.text-center span {\n  font-size: 200px;\n  color: #19151540;\n}\n\n.about {\n  color: rgba(33, 37, 41, 0.75);\n}\n.cells-features {\n  margin-top: 40px;\n}\n\n.cells-features h2 {\n  font-size: 28px;\n  font-weight: bold;\n  margin-bottom: 20px;\n}\n\n.cells-features ul {\n  list-style: none;\n  margin: 0;\n  padding: 0;\n}\n.btn-primary {\n  background-color: rgb(0, 113, 184);\n}\n\n.cells-features li {\n  margin-bottom: 10px;\n  line-height: 1.5;\n  color: rgba(33, 37, 41, 0.75);\n}\n\n.cells-features strong {\n  font-weight: bold;\n}\n.intro-container {\n  padding-top: 20px;\n  padding-bottom: 50px;\n}\n.control div {\n  padding: 10px;\n}\n#collapse-btn {\n  height: 50px;\n}\n\nbutton {\n  background-color: white;\n  border: none;\n  padding: 10px 20px;\n  font-size: 18px;\n  color: #333;\n  text-transform: uppercase;\n  letter-spacing: 2px;\n  position: relative;\n  overflow: hidden;\n  z-index: 0;\n}\n\nbutton::before {\n  content: \"\";\n  position: absolute;\n  top: -20px;\n  left: -20px;\n  right: -20px;\n  bottom: -20px;\n  background: linear-gradient(\n    45deg,\n    rgba(255, 255, 255, 0.4),\n    rgba(0, 0, 0, 0.2)\n  );\n  filter: blur(30px);\n  z-index: -1;\n}\n\nbutton:hover::before {\n  filter: blur(10px);\n}\n\n.control button {\n  height: 100%;\n  width: 100%;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                    battery_profile                        Battery Cells              Our battery cell management page provides a simple and effective way to        maintain detailed records of your battery cells, ensuring that you have        the information you need to succeed.                                          Add a new cell                                      Existing cells                          See Features                                                                          Battery Cell Tracking: Keep detailed records of                your battery cells for future testing and analysis.                                            Warehouse Management: Organize and manage your                battery cell inventory with ease.                                            Test Result Analysis: Analyze the results of                your battery cell tests to identify trends and patterns.                                            Easy Integration: Seamlessly integrate with                other pages, such as testchamber, to streamline your battery                testing process.                                            Customizable: Tailor the page to your specific                needs with flexible options for adding and organizing battery                cells.                                                                            '\n    var COMPONENTS = [{'name': 'AddBatteryPackComponent', 'selector': 'app-add-battery-pack'},{'name': 'AddCellsComponent', 'selector': 'app-add-cells'},{'name': 'AddTestChamberComponent', 'selector': 'app-add-test-chamber'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BatteryPacksComponent', 'selector': 'app-battery-packs'},{'name': 'BatteryTestComponent', 'selector': 'app-battery-test'},{'name': 'CellsComponent', 'selector': 'app-cells'},{'name': 'CreateNewTestComponent', 'selector': 'app-create-new-test'},{'name': 'DashboardComponent', 'selector': 'app-dashboard'},{'name': 'DeviceDataComponent', 'selector': 'app-device-data'},{'name': 'DevicesComponent', 'selector': 'app-devices'},{'name': 'DevicesDefaultComponent', 'selector': 'app-devices-default'},{'name': 'DocsComponent', 'selector': 'app-docs'},{'name': 'EditBatteryPackComponent', 'selector': 'app-edit-battery-pack'},{'name': 'EditCellsComponent', 'selector': 'app-edit-cells'},{'name': 'EditTestChamberComponent', 'selector': 'app-edit-test-chamber'},{'name': 'FootNavComponent', 'selector': 'app-foot-nav'},{'name': 'HeadNavComponent', 'selector': 'app-head-nav'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'NoResultComponent', 'selector': 'app-no-result'},{'name': 'ShowAllTestsResultComponent', 'selector': 'app-show-all-tests-result'},{'name': 'ShowTestResultComponent', 'selector': 'app-show-test-result'},{'name': 'TestChambersComponent', 'selector': 'app-test-chambers'},{'name': 'ViewBatteryPacksComponent', 'selector': 'app-view-battery-packs'},{'name': 'ViewCellsComponent', 'selector': 'app-view-cells'},{'name': 'ViewTestChambersComponent', 'selector': 'app-view-test-chambers'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'CellsComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/CellsModule.html":{"url":"modules/CellsModule.html","title":"module - CellsModule","body":"\n                   \n\n\n\n\n    Modules\n    CellsModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_CellsModule\n\n\n\ncluster_CellsModule_declarations\n\n\n\ncluster_CellsModule_imports\n\n\n\n\nAddCellsComponent\n\nAddCellsComponent\n\n\n\nCellsModule\n\nCellsModule\n\nCellsModule -->\n\nAddCellsComponent->CellsModule\n\n\n\n\n\nCellsComponent\n\nCellsComponent\n\nCellsModule -->\n\nCellsComponent->CellsModule\n\n\n\n\n\nEditCellsComponent\n\nEditCellsComponent\n\nCellsModule -->\n\nEditCellsComponent->CellsModule\n\n\n\n\n\nViewCellsComponent\n\nViewCellsComponent\n\nCellsModule -->\n\nViewCellsComponent->CellsModule\n\n\n\n\n\nCellsRoutingModule\n\nCellsRoutingModule\n\nCellsModule -->\n\nCellsRoutingModule->CellsModule\n\n\n\n\n\nNgbPagination\n\nNgbPagination\n\nCellsModule -->\n\nNgbPagination->CellsModule\n\n\n\n\n\nSharedModule\n\nSharedModule\n\nCellsModule -->\n\nSharedModule->CellsModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/cells/cells.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            AddCellsComponent\n                        \n                        \n                            CellsComponent\n                        \n                        \n                            EditCellsComponent\n                        \n                        \n                            ViewCellsComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            CellsRoutingModule\n                        \n                        \n                            NgbPagination\n                        \n                        \n                            SharedModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgbPagination } from '@ng-bootstrap/ng-bootstrap';\nimport { NgSelectModule } from '@ng-select/ng-select';\nimport { SharedModule } from './../shared/shared.module';\nimport { ViewCellsComponent } from './../components/body/devices/cells/view-cells/view-cells.component';\nimport { EditCellsComponent } from './../components/body/devices/cells/edit-cells/edit-cells.component';\nimport { AddCellsComponent } from './../components/body/devices/cells/add-cells/add-cells.component';\nimport { CellsComponent } from './../components/body/devices/cells/cells.component';\nimport { NgModule } from '@angular/core';\n\nimport { CellsRoutingModule } from './cells-routing.module';\n\n@NgModule({\n  declarations: [\n    CellsComponent,\n    AddCellsComponent,\n    EditCellsComponent,\n    ViewCellsComponent,\n  ],\n  imports: [CellsRoutingModule, SharedModule, NgSelectModule, NgbPagination],\n})\nexport class CellsModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/CellsRoutingModule.html":{"url":"modules/CellsRoutingModule.html","title":"module - CellsRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    CellsRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/cells/cells-routing.module.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { CellsComponent } from './../components/body/devices/cells/cells.component';\nimport { ViewCellsComponent } from './../components/body/devices/cells/view-cells/view-cells.component';\nimport { EditCellsComponent } from './../components/body/devices/cells/edit-cells/edit-cells.component';\nimport { AddCellsComponent } from './../components/body/devices/cells/add-cells/add-cells.component';\nimport { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\n\nconst routes: Routes = [\n  {\n    path: 'add',\n    component: AddCellsComponent,\n  },\n  {\n    path: 'edit/:cellId',\n    component: EditCellsComponent,\n  },\n  {\n    path: 'view',\n    component: ViewCellsComponent,\n  },\n  {\n    path: '',\n    component: CellsComponent,\n  },\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class CellsRoutingModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Channel.html":{"url":"interfaces/Channel.html","title":"interface - Channel","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Channel\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/TestResult.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            channelNo\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            currentMultiplierIndex\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            multiplier\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            rows\n                                        \n                                \n                                \n                                        \n                                            status\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        channelNo\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        channelNo:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        currentMultiplierIndex\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        currentMultiplierIndex:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        multiplier\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        multiplier:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        rows\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        rows:         RowInfo[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         RowInfo[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        status\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        status:     \"Completed\" | \"Running\" | \"Scheduled\" | \"Stopped\" | \"Paused\"\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     \"Completed\" | \"Running\" | \"Scheduled\" | \"Stopped\" | \"Paused\"\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { PayLoad, TestFormat } from './FormFields';\n\nexport interface _TestResultLight {\n  _id?: string;\n  createdOnChamber?: string;\n  chamberName?: string;\n  testName?: string;\n  testDescription?: string;\n  status?: 'Running' | 'Paused' | 'Stopped' | 'Scheduled' | 'Completed';\n  channels?: TestChannel[];\n  createdOn?: Date;\n}\n\nexport interface TestChannel {\n  channelNo: number;\n  statusCh: 'Running' | 'Paused' | 'Stopped' | 'Scheduled' | 'Completed';\n  chMultiplierIndex: number;\n  chMultiplier: number;\n  onRows?: number;\n  totalRows?: number;\n  statusRow?: 'Running' | 'Paused' | 'Stopped' | 'Scheduled' | 'Completed';\n  rowMultiplierIndex?: number;\n  rowMultiplier?: number;\n}\nexport interface TestChannelDeepChannel {\n  channelNumber: number;\n  status: 'Running' | 'Paused' | 'Stopped' | 'Scheduled' | 'Completed';\n  currentMultiplierIndex: number;\n  multiplier: number;\n  testFormats: TestFormat[];\n  rows?: RowInfo[];\n  chStartDate?: Date;\n  chEndDate?: Date;\n}\nexport interface _TestResultDeep {\n  _id?: string;\n  chamberName?: string;\n  createdOnChamber?: string;\n  testName?: string;\n  testDesc?: string;\n  status?: 'Running' | 'Paused' | 'Stopped' | 'Scheduled' | 'Completed';\n  channels: TestChannelDeepChannel[];\n  accessType: 'admin' | 'read' | 'write';\n  testStartDate?: Date;\n  testEndDate?: Date;\n  testScheduleDate?: Date;\n}\n\nexport interface MeasuredParameters {\n  current?: number[];\n  voltage?: number[];\n  chamberTemp?: number[];\n  chamberHum?: number[];\n  cellTemp?: SensorObj[];\n  time?: number[];\n}\nexport interface SensorObj {\n  sensorId: number;\n  values: number[];\n}\n\nexport interface RowInfo {\n  rowNo: number;\n  measuredParameters?: MeasuredParameters;\n  derivedParameters?: any;\n  status: 'Completed' | 'Running' | 'Scheduled' | 'Stopped' | 'Paused';\n  currentMultiplierIndex: number;\n  multiplier: number;\n  rowStartDate?: Date;\n  rowEndDate?: Date;\n}\n\nexport interface Channel {\n  rows?: RowInfo[];\n  channelNo: number;\n  status: 'Completed' | 'Running' | 'Scheduled' | 'Stopped' | 'Paused';\n  currentMultiplierIndex?: number;\n  multiplier?: number;\n}\n\nexport interface TestResultDocument {\n  channels: Channel[];\n}\n\nexport interface QuickResponseMeasurement {\n  channelNo: Number;\n  statusCh: 'Running' | 'Paused' | 'Stopped' | 'Scheduled' | 'Completed';\n  measuredParameters: MeasuredParameters;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ChannelFields.html":{"url":"interfaces/ChannelFields.html","title":"interface - ChannelFields","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ChannelFields\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/FormFields.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            allTestFormat\n                                        \n                                \n                                \n                                        \n                                            availableChannels\n                                        \n                                \n                                \n                                        \n                                            cellID\n                                        \n                                \n                                \n                                        \n                                            channelNumber\n                                        \n                                \n                                \n                                        \n                                            isAddRowButtonDisabled\n                                        \n                                \n                                \n                                        \n                                            isRemoveRowButtonDisabled\n                                        \n                                \n                                \n                                        \n                                            overallRowMultiplier\n                                        \n                                \n                                \n                                        \n                                            testFormats\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        allTestFormat\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        allTestFormat:     TestFormat[][]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     TestFormat[][]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        availableChannels\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        availableChannels:     number[] | undefined\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number[] | undefined\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        cellID\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        cellID:     string | undefined\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string | undefined\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        channelNumber\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        channelNumber:     number | undefined\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number | undefined\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        isAddRowButtonDisabled\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        isAddRowButtonDisabled:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        isRemoveRowButtonDisabled\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        isRemoveRowButtonDisabled:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        overallRowMultiplier\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        overallRowMultiplier:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        testFormats\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        testFormats:     TestFormat[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     TestFormat[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { DriveCycle } from 'src/app/models/DriveCycle';\nexport interface SelectField {\n  value: any;\n  type: string;\n  id: number;\n  options: string[];\n  visibility: boolean;\n  template_width: number;\n}\nexport interface TextField {\n  type: 'text';\n  id: number;\n  value: 'at' | 'for' | 'Run' | 'until' | 'volt.' | 'seconds.';\n  visibility: boolean;\n  template_width: number;\n}\nexport interface InputField {\n  type: 'input';\n  id: number;\n  value: any;\n  visibility: boolean;\n  template_width: number;\n}\n\nexport interface FileField {\n  type: 'file';\n  id: number;\n  value: DriveCycle | null;\n  visibility: boolean;\n  template_width: number;\n}\n\nexport interface TestFormat {\n  fields: (SelectField | TextField | InputField | FileField)[];\n  name: string;\n  value: number;\n  multiplier: number;\n  ambTemp: number;\n}\n\nconst testFormats: TestFormat[] = [\n  {\n    name: 'Do this for this long.',\n    value: 1,\n    fields: [\n      {\n        id: 1,\n        type: 'select',\n        options: ['Charge', 'Discharge', 'Rest', 'Hold'],\n        value: 'Charge',\n        visibility: true,\n        template_width: 2,\n      } as SelectField,\n      {\n        id: 2,\n        type: 'text',\n        value: 'at',\n        visibility: true,\n        template_width: 1,\n      } as TextField,\n      {\n        id: 3,\n        type: 'input',\n        value: null,\n        visibility: true,\n        template_width: 2,\n      } as InputField,\n      {\n        id: 4,\n        type: 'select',\n        options: ['C', 'A', 'W'],\n        value: 'C',\n        visibility: true,\n        template_width: 2,\n      } as SelectField,\n      {\n        id: 5,\n        type: 'text',\n        value: 'for',\n        visibility: true,\n        template_width: 1,\n      } as TextField,\n      {\n        id: 6,\n        type: 'input',\n        value: null,\n        visibility: true,\n        template_width: 2,\n      } as InputField,\n      {\n        id: 7,\n        type: 'select',\n        options: ['hours.', 'minutes.', 'seconds.'],\n        value: 'hours.',\n        visibility: true,\n        template_width: 2,\n      } as SelectField,\n    ],\n    multiplier: 1,\n    ambTemp: 25,\n  },\n  {\n    name: 'Do this until this happen.',\n    value: 2,\n    fields: [\n      {\n        id: 1,\n        type: 'select',\n        options: ['Charge', 'Discharge'],\n        value: 'Charge',\n        visibility: true,\n        template_width: 2,\n      } as SelectField,\n      {\n        id: 2,\n        type: 'text',\n        value: 'at',\n        visibility: true,\n        template_width: 1,\n      } as SelectField,\n      {\n        id: 3,\n        type: 'input',\n        value: null,\n        visibility: true,\n        template_width: 2,\n      } as InputField,\n      {\n        id: 4,\n        type: 'select',\n        options: ['C', 'A', 'W'],\n        value: 'C',\n        visibility: true,\n        template_width: 2,\n      } as SelectField,\n      {\n        id: 5,\n        type: 'text',\n        value: 'until',\n        visibility: true,\n        template_width: 1,\n      } as TextField,\n      {\n        id: 6,\n        type: 'input',\n        value: null,\n        visibility: true,\n        template_width: 2,\n      } as InputField,\n      {\n        id: 7,\n        type: 'text',\n        value: 'volt.',\n        visibility: true,\n        template_width: 2,\n      } as TextField,\n    ],\n    multiplier: 1,\n    ambTemp: 25,\n  },\n  {\n    name: 'Run X.',\n    value: 3,\n    fields: [\n      {\n        id: 1,\n        type: 'text',\n        value: 'Run',\n        visibility: true,\n        template_width: 1,\n      } as TextField,\n      {\n        id: 2,\n        type: 'file',\n        value: null,\n        visibility: true,\n        template_width: 4,\n      } as FileField,\n      {\n        id: 3,\n        type: 'text',\n        value: 'for',\n        visibility: true,\n        template_width: 1,\n      } as TextField,\n      {\n        id: 4,\n        type: 'input',\n        value: null,\n        visibility: true,\n        template_width: 3,\n      } as InputField,\n      {\n        id: 3,\n        type: 'select',\n        options: ['hours.', 'minutes.', 'seconds.'],\n        value: 'hours.',\n        visibility: true,\n        template_width: 2,\n      } as SelectField,\n    ],\n    multiplier: 1,\n    ambTemp: 25,\n  },\n];\nexport interface ChannelFields {\n  channelNumber: number | undefined;\n  cellID: string | undefined;\n  testFormats: TestFormat[];\n  allTestFormat: TestFormat[][];\n  isRemoveRowButtonDisabled: boolean;\n  isAddRowButtonDisabled: boolean;\n  overallRowMultiplier: number;\n  availableChannels: number[] | undefined;\n}\nexport interface PayLoad {\n  channels: ChannelFields[] | undefined;\n  isConAmTe: boolean;\n  ambTemp: number;\n}\n\nexport { testFormats };\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Charts.html":{"url":"interfaces/Charts.html","title":"interface - Charts","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Charts\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/components/body/battery-test/show-test-result/show-test-result.component.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            chartData\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            ChartOptions\n                                        \n                                \n                                \n                                        \n                                            ChartType\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            name\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        chartData\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        chartData:      | any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :      | any\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        ChartOptions\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        ChartOptions:      | any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :      | any\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        ChartType\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        ChartType:     ChartType\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     ChartType\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { ComponentStoreService } from './../../../../services/component-store.service';\nimport {\n  _TestResultDeep,\n  QuickResponseMeasurement,\n  MeasuredParameters,\n  SensorObj,\n} from './../../../../models/TestResult';\nimport { TestChamberService } from 'src/app/services/test-chamber.service';\nimport { of, Subscription, switchMap } from 'rxjs';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { NgbModal } from '@ng-bootstrap/ng-bootstrap';\nimport { saveAs } from 'file-saver';\n\nimport { ChartConfiguration, ChartType } from 'chart.js';\nimport {\n  Component,\n  OnInit,\n  OnDestroy,\n  QueryList,\n  ViewChildren,\n  ViewChild,\n} from '@angular/core';\nimport { BaseChartDirective } from 'ng2-charts';\nimport { Location } from '@angular/common';\n\ninterface Charts {\n  name?: string;\n  chartData?: ChartConfiguration['data'] | any;\n  ChartOptions?: ChartConfiguration['options'] | any;\n  ChartType: ChartType;\n}\n\n@Component({\n  selector: 'app-show-test-result',\n  templateUrl: './show-test-result.component.html',\n  styleUrls: ['./show-test-result.component.css'],\n})\nexport class ShowTestResultComponent implements OnInit, OnDestroy {\n  subs: Subscription[] = [];\n  testInfo?: _TestResultDeep;\n  showChart: boolean = false;\n  allCharts: Charts[] = [];\n  quickResponses: QuickResponseMeasurement[] = [];\n  chartSub?: Subscription;\n  testId?: string | null;\n  chamberId?: string | null;\n  measurementUpdateIntervalId: any;\n  testInfoIntervalId: any;\n  testInfoSub?: Subscription;\n  modalTitle?: string;\n  modalBody?: string;\n  isConnected: boolean = false;\n  isConnectedIntervalId: any;\n  connSub?: Subscription;\n  maxNoOfDataPoints: number = 1000;\n  targetSampleSize: number = 700;\n  updatedUptoIndex = 0;\n\n  @ViewChildren(BaseChartDirective) charts?: QueryList;\n  @ViewChild('myModal') modal: any;\n\n  constructor(\n    private route: ActivatedRoute,\n    private _testChamberService: TestChamberService,\n    private _componentStoreService: ComponentStoreService,\n    private modalService: NgbModal,\n    private location: Location,\n    private router: Router\n  ) {}\n\n  toggleShowChart() {\n    this.showChart = !this.showChart;\n    clearInterval(this.measurementUpdateIntervalId);\n    this.chartSub?.unsubscribe();\n  }\n\n  onClickChild(event: MouseEvent) {\n    event.stopPropagation();\n  }\n\n  onClickParent(event: MouseEvent) {\n    this.toggleShowChart();\n  }\n\n  showChartView(channelNo: number) {\n    this.allCharts = [];\n    this.toggleShowChart();\n    const channelQuickResponse = this.quickResponses.find(\n      (res) => res.channelNo === channelNo\n    );\n    if (channelQuickResponse) {\n      this.createChart(channelQuickResponse);\n      this.keepUpdatingChart(channelQuickResponse);\n    } else {\n      const sub = this._testChamberService\n        .getQuickResponse(\n          this.chamberId as any,\n          this.testId as any,\n          channelNo as any\n        )\n        .subscribe((data: QuickResponseMeasurement) => {\n          this.createChart(data);\n          this.quickResponses.push(data);\n          if (data.statusCh === 'Running') {\n            //if channel is running then only keep updating the channel\n            this.keepUpdatingChart(data);\n          }\n          sub.unsubscribe();\n        });\n    }\n  }\n\n  createChart(channelQuickResponse: QuickResponseMeasurement) {\n    let blankData: MeasuredParameters = {};\n    blankData.time = [];\n    if (\n      channelQuickResponse.measuredParameters.current &&\n      channelQuickResponse.measuredParameters.current.length > 0\n    ) {\n      blankData.current = [];\n      let chart: Charts = {\n        name: 'Current',\n        chartData: {\n          datasets: [\n            {\n              data: blankData.current,\n              label: 'Current',\n            },\n          ],\n          labels: blankData.time,\n        },\n        ChartOptions: {\n          scales: {\n            xAxes: [\n              {\n                scaleLabel: {\n                  display: true,\n                  labelString: 'Time(S)',\n                },\n              },\n            ],\n            yAxes: [\n              {\n                scaleLabel: {\n                  display: true,\n                  labelString: 'Cell Current (A)',\n                },\n              },\n            ],\n          },\n        },\n        ChartType: 'line',\n      };\n      this.allCharts.push(chart);\n    }\n    if (\n      channelQuickResponse.measuredParameters.voltage &&\n      channelQuickResponse.measuredParameters.voltage.length > 0\n    ) {\n      blankData.voltage = [];\n      let chart: Charts = {\n        name: 'Voltage',\n        chartData: {\n          datasets: [\n            {\n              data: blankData.voltage,\n              label: 'Voltage',\n            },\n          ],\n          labels: blankData.time,\n        },\n        ChartOptions: {\n          scales: {\n            xAxes: [\n              {\n                scaleLabel: {\n                  display: true,\n                  labelString: 'Time(S)',\n                },\n              },\n            ],\n            yAxes: [\n              {\n                scaleLabel: {\n                  display: true,\n                  labelString: 'Cell Voltage(V)',\n                },\n              },\n            ],\n          },\n        },\n        ChartType: 'line',\n      };\n      this.allCharts.push(chart);\n    }\n    if (\n      channelQuickResponse.measuredParameters.chamberTemp &&\n      channelQuickResponse.measuredParameters.chamberTemp.length > 0\n    ) {\n      blankData.chamberTemp = [];\n      let chart: Charts = {\n        name: 'Chamber Temperature',\n        chartData: {\n          datasets: [\n            {\n              data: blankData.chamberTemp,\n              label: 'Chamber Temperature',\n            },\n          ],\n          labels: blankData.time,\n        },\n        ChartOptions: {\n          scales: {\n            xAxes: [\n              {\n                scaleLabel: {\n                  display: true,\n                  labelString: 'Time(S)',\n                },\n              },\n            ],\n            yAxes: [\n              {\n                scaleLabel: {\n                  display: true,\n                  labelString: 'Chamber Temperature (°C)',\n                },\n              },\n            ],\n          },\n        },\n        ChartType: 'line',\n      };\n      this.allCharts.push(chart);\n    }\n    if (\n      channelQuickResponse.measuredParameters.chamberHum &&\n      channelQuickResponse.measuredParameters.chamberHum.length > 0\n    ) {\n      blankData.chamberHum = [];\n      let chart: Charts = {\n        name: 'Chamber Humidity',\n        chartData: {\n          datasets: [\n            {\n              data: blankData.chamberHum,\n              label: 'Chamber Humidity',\n            },\n          ],\n          labels: blankData.time,\n        },\n        ChartOptions: {\n          scales: {\n            xAxes: [\n              {\n                scaleLabel: {\n                  display: true,\n                  labelString: 'Time(S)',\n                },\n              },\n            ],\n            yAxes: [\n              {\n                scaleLabel: {\n                  display: true,\n                  labelString: 'Chamber Humidity(%)',\n                },\n              },\n            ],\n          },\n        },\n        ChartType: 'line',\n      };\n      this.allCharts.push(chart);\n    }\n\n    if (\n      channelQuickResponse.measuredParameters.cellTemp &&\n      channelQuickResponse.measuredParameters.cellTemp.length > 0\n    ) {\n      blankData.cellTemp = [];\n      let chart: Charts = {\n        name: 'Cell Temperature',\n        chartData: {\n          datasets: [],\n          labels: blankData.time,\n        },\n        ChartOptions: {\n          scales: {\n            xAxes: [\n              {\n                scaleLabel: {\n                  display: true,\n                  labelString: 'Time(S)',\n                },\n              },\n            ],\n            yAxes: [\n              {\n                scaleLabel: {\n                  display: true,\n                  labelString: 'Cell Temperatures(°C)',\n                },\n              },\n            ],\n          },\n        },\n        ChartType: 'line',\n      };\n      channelQuickResponse.measuredParameters.cellTemp.forEach(\n        (tempObj: SensorObj) => {\n          let d: SensorObj = { sensorId: tempObj.sensorId, values: [] };\n          blankData.cellTemp?.push(d);\n          chart.chartData.datasets.push({\n            data: d.values,\n            label: 'Sensor' + tempObj.sensorId,\n          });\n        }\n      );\n      this.allCharts.push(chart);\n    }\n    this.appendNewData(blankData, channelQuickResponse.measuredParameters);\n  }\n\n  keepUpdatingChart(channelQuickResponse: QuickResponseMeasurement) {\n    clearInterval(this.measurementUpdateIntervalId);\n    this.measurementUpdateIntervalId = setInterval(() => {\n      this.chartSub = this._testChamberService\n        .getQuickResponse(\n          this.chamberId as any,\n          this.testId as any,\n          channelQuickResponse.channelNo as any,\n          this.updatedUptoIndex - 1\n        )\n        .subscribe((data: any) => {\n          this.appendNewData(\n            channelQuickResponse.measuredParameters,\n            data.measuredParameters as MeasuredParameters\n          );\n          this.charts?.forEach((chart) => chart.update());\n          this.chartSub?.unsubscribe();\n          if (data.status === 'Completed' || data.status === 'Stopped') {\n            clearInterval(this.measurementUpdateIntervalId);\n          }\n        });\n    }, 2000);\n  }\n\n  appendNewData(\n    prevMeasurements: MeasuredParameters,\n    newMeasurements: MeasuredParameters\n  ) {\n    if (newMeasurements.current && newMeasurements.current?.length > 0) {\n      prevMeasurements.current?.push(...newMeasurements.current);\n    }\n    if (newMeasurements.voltage && newMeasurements.voltage?.length > 0) {\n      prevMeasurements.voltage?.push(...newMeasurements.voltage);\n    }\n    if (newMeasurements.chamberHum && newMeasurements.chamberHum?.length > 0) {\n      prevMeasurements.chamberHum?.push(...newMeasurements.chamberHum);\n    }\n    if (\n      newMeasurements.chamberTemp &&\n      newMeasurements.chamberTemp?.length > 0\n    ) {\n      prevMeasurements.chamberTemp?.push(...newMeasurements.chamberTemp);\n    }\n    if (newMeasurements.time && newMeasurements.time?.length > 0) {\n      prevMeasurements.time?.push(...newMeasurements.time);\n    }\n    newMeasurements.cellTemp?.forEach((tempObjNew, i) => {\n      const tempObjOld = prevMeasurements.cellTemp?.find(\n        (tempObj) => tempObj.sensorId === tempObjNew.sensorId\n      );\n      if (tempObjOld) {\n        tempObjOld.values.push(...tempObjNew.values);\n      } else {\n        prevMeasurements.cellTemp?.push(tempObjNew);\n      }\n    });\n    this.updatedUptoIndex += newMeasurements.time\n      ? newMeasurements.time.length\n      : 0;\n\n    if (\n      prevMeasurements.time &&\n      prevMeasurements.time.length > this.maxNoOfDataPoints\n    ) {\n      // Use sampling technique\n      const samplingRate = prevMeasurements.time.length / this.targetSampleSize;\n\n      this.sampleData(prevMeasurements.time, samplingRate);\n      this.sampleData(prevMeasurements.current, samplingRate);\n      this.sampleData(prevMeasurements.voltage, samplingRate);\n      this.sampleData(prevMeasurements.chamberHum, samplingRate);\n      this.sampleData(prevMeasurements.chamberTemp, samplingRate);\n\n      prevMeasurements.cellTemp?.forEach((tempObj) => {\n        this.sampleData(tempObj.values, samplingRate);\n      });\n    }\n  }\n\n  sampleData(data: number[] | undefined, samplingRate: number): void {\n    if (!data || samplingRate  {\n        this.testId = params.get('testId');\n        this.chamberId = params.get('chamberId');\n        return this._testChamberService.getTestData(\n          this.chamberId as any,\n          this.testId as any\n        );\n      })\n    );\n    this.testInfoSub = os$.subscribe((testInfo: _TestResultDeep) => {\n      this.testInfo = testInfo;\n      this.testInfoSub?.unsubscribe();\n    });\n\n    this.testInfoIntervalId = setInterval(() => {\n      if (this.testId && this.chamberId) {\n        this.testInfoSub?.unsubscribe();\n        this.testInfoSub = this._testChamberService\n          .getTestData(this.chamberId as any, this.testId as any)\n          .subscribe((testInfo) => {\n            this.testInfo = testInfo;\n            this.testInfoSub?.unsubscribe();\n            if (\n              this.testInfo?.status === 'Completed' ||\n              this.testInfo?.status === 'Stopped'\n            ) {\n              clearInterval(this.testInfoIntervalId);\n            }\n          });\n      }\n    }, 10000);\n\n    this.updateConnection();\n\n    this.isConnectedIntervalId = setInterval(\n      () => this.updateConnection(),\n      10000\n    );\n  }\n\n  deleteTest() {\n    this.modalTitle = 'Alert';\n    this.modalBody =\n      'Are you sure you want to delete all the information related to this experiment? Once you do it, you can never retrieve it.';\n    this.modalService.open(this.modal, { centered: true }).result.then(\n      (result) => {\n        //console.log('accepted');\n        this._testChamberService\n          .deleteTest(this.chamberId as any, this.testId as any)\n          .subscribe((res) => {\n            let url = '';\n            let path = this.router.url;\n            if (path.indexOf('view-all') > 0) {\n              url = '../../../../';\n            } else {\n              url = '../../../';\n            }\n            this.router.navigate([url], {\n              relativeTo: this.route,\n              skipLocationChange: true,\n            });\n          });\n      },\n      (reason) => {\n        //console.log('closed');\n      }\n    );\n  }\n\n  updateConnection() {\n    if (this.chamberId) {\n      this.connSub?.unsubscribe();\n      this.connSub = this._testChamberService\n        .getConnectionStatus(this.chamberId as any)\n        .subscribe({\n          next: (pay: any) => {\n            this.isConnected = pay.isConnected;\n            this.connSub?.unsubscribe();\n          },\n          error: (err) => {\n            this.isConnected = false;\n          },\n        });\n    }\n  }\n\n  edit() {}\n  play() {\n    this.changeStatus('Running');\n  }\n  pause() {\n    this.changeStatus('Paused');\n  }\n  stop() {\n    this.modalTitle = 'Alert';\n    this.modalBody =\n      'Are you sure you want to stop the experiment? Once you stop it, you can never start it again.';\n    this.modalService.open(this.modal, { centered: true }).result.then(\n      (result) => {\n        //console.log('accepted');\n        this.changeStatus('Stopped');\n      },\n      (reason) => {\n        //console.log('closed');\n      }\n    );\n  }\n  changeStatus(status: string | null) {\n    const sub = this._testChamberService\n      .forceStatus(this.chamberId as any, this.testId as any, status)\n      .subscribe((res: any) => {\n        if (res.acknowledged) {\n          this._componentStoreService.sendToastMsg({\n            msg: 'Status has been sent to the cloud. Wait for the Test Chamber to reflect the status',\n            timeOut: 10000,\n            color: 'black',\n          });\n        }\n      });\n    this.subs.push(sub);\n  }\n\n  download(channelNo: number) {\n    this._testChamberService\n      .downloadTestResult(this.chamberId as any, this.testId as any, channelNo)\n      .subscribe((response) => {\n        const blob = new Blob([response.body], {\n          type: 'text/csv;charset=utf-8;',\n        });\n        const url = URL.createObjectURL(blob);\n        const contentDispositionHeader = response.headers.get(\n          'content-disposition'\n        );\n        const filename = contentDispositionHeader\n          ? contentDispositionHeader.split('filename=')[1].replace(/\"/g, '')\n          : 'testResult.csv';\n        saveAs(url, filename);\n      });\n  }\n  ngOnDestroy(): void {\n    this.subs.forEach((sub) => sub.unsubscribe());\n    this.testInfoSub?.unsubscribe();\n    this.chartSub?.unsubscribe();\n    clearInterval(this.measurementUpdateIntervalId);\n    clearInterval(this.testInfoIntervalId);\n    this.connSub?.unsubscribe();\n    clearInterval(this.isConnectedIntervalId);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ComponentStoreService.html":{"url":"injectables/ComponentStoreService.html","title":"injectable - ComponentStoreService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ComponentStoreService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/component-store.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                toastMsg$\n                            \n                            \n                                    Private\n                                toastMsgSource\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                sendToastMsg\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/services/component-store.service.ts:10\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        sendToastMsg\n                        \n                    \n                \n            \n            \n                \n                    \n                    sendToastMsg(msg: ToastMsg)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/component-store.service.ts:12\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    msg\n                                    \n                                                ToastMsg\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        toastMsg$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.toastMsgSource.asObservable()\n                    \n                \n                    \n                        \n                                Defined in src/app/services/component-store.service.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        toastMsgSource\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Subject()\n                    \n                \n                    \n                        \n                                Defined in src/app/services/component-store.service.ts:9\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { ToastMsg } from './../models/ToastMsg';\nimport { Injectable } from '@angular/core';\nimport { Subject } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class ComponentStoreService {\n  private toastMsgSource = new Subject(); //Store for pushing toast msgs\n  public toastMsg$ = this.toastMsgSource.asObservable(); //use it to listen for toast.\n  constructor() {}\n  public sendToastMsg(msg: ToastMsg) {\n    //Use it to push any msg to the store\n    let defaultMsg = {\n      timeOut: 5000,\n      color: 'white',\n      type: 'notification' as const,\n    };\n    let _msg = { ...defaultMsg, ...msg };\n    this.toastMsgSource.next(_msg);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/DashboardComponent.html":{"url":"components/DashboardComponent.html","title":"component - DashboardComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  DashboardComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/body/dashboard/dashboard.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n                    OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-dashboard\n            \n\n            \n                styleUrls\n                ./dashboard.component.css\n            \n\n\n\n            \n                templateUrl\n                ./dashboard.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                breadCrumbs\n                            \n                            \n                                devices\n                            \n                            \n                                isOnOverView\n                            \n                            \n                                noOfDevices\n                            \n                            \n                                noOfDevicesConnected\n                            \n                            \n                                subscriptions\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                detectUrlChanges\n                            \n                            \n                                goToPackDetails\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(deviceData: DeviceDataService, router: Router, store: ComponentStoreService)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/body/dashboard/dashboard.component.ts:26\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        deviceData\n                                                  \n                                                        \n                                                                        DeviceDataService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                        ComponentStoreService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        detectUrlChanges\n                        \n                    \n                \n            \n            \n                \ndetectUrlChanges()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/body/dashboard/dashboard.component.ts:45\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        goToPackDetails\n                        \n                    \n                \n            \n            \n                \ngoToPackDetails()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/body/dashboard/dashboard.component.ts:41\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnDestroy\n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/body/dashboard/dashboard.component.ts:81\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/body/dashboard/dashboard.component.ts:37\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        breadCrumbs\n                        \n                    \n                \n            \n                \n                    \n                        Type :         BreadCrumbs[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/components/body/dashboard/dashboard.component.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        devices\n                        \n                    \n                \n            \n                \n                    \n                        Type :         DeviceDataLight[] | undefined\n\n                    \n                \n                \n                    \n                        Default value : undefined\n                    \n                \n                    \n                        \n                                Defined in src/app/components/body/dashboard/dashboard.component.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isOnOverView\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                    \n                        \n                                Defined in src/app/components/body/dashboard/dashboard.component.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        noOfDevices\n                        \n                    \n                \n            \n                \n                    \n                        Type :     number | undefined\n\n                    \n                \n                \n                    \n                        Default value : undefined\n                    \n                \n                    \n                        \n                                Defined in src/app/components/body/dashboard/dashboard.component.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        noOfDevicesConnected\n                        \n                    \n                \n            \n                \n                    \n                        Type :     number | undefined\n\n                    \n                \n                \n                    \n                        Default value : undefined\n                    \n                \n                    \n                        \n                                Defined in src/app/components/body/dashboard/dashboard.component.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        subscriptions\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Subscription[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/components/body/dashboard/dashboard.component.ts:24\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { ComponentStoreService } from './../../../services/component-store.service';\nimport { DeviceDataService } from './../../../services/device-data.service';\nimport { DeviceDataLight } from './../../../models/DeviceData';\nimport { Component, OnDestroy, OnInit, ɵɵtrustConstantResourceUrl } from '@angular/core';\nimport { NavigationEnd, Router } from '@angular/router';\nimport { Subscription } from 'rxjs';\n\ninterface BreadCrumbs{\n  url?:string,\n  name?:string,\n  status?:'active'|'disabled'\n}\n\n@Component({\n  selector: 'app-dashboard',\n  templateUrl: './dashboard.component.html',\n  styleUrls: ['./dashboard.component.css']\n})\nexport class DashboardComponent implements OnInit, OnDestroy {\n  devices:DeviceDataLight[]|undefined = undefined;\n  noOfDevices:number|undefined = undefined;\n  noOfDevicesConnected:number|undefined = undefined;\n  isOnOverView:boolean = true;//controls whthere the all pack has been shown or a particular pack details is appearing\n  subscriptions:Subscription[] = [];\n\n  breadCrumbs:BreadCrumbs[]= [];\n  \n\n  constructor(\n    private deviceData:DeviceDataService,\n    private router:Router,\n    private store:ComponentStoreService,\n    ) {\n    this.detectUrlChanges();\n    }\n\n  ngOnInit(): void {\n    this.detectUrlChanges();\n  }\n  \n  goToPackDetails(){\n    this.isOnOverView = false;\n  }\n\n  detectUrlChanges(){\n    let subs = this.router.events.subscribe(data=>{\n      \n      //Detects the change of urls, will be used when getting bakc to parent component from child component\n      if(data instanceof NavigationEnd){\n        this.breadCrumbs = [];\n        let urlComponents = this.router.url.split('/');\n        urlComponents.shift();//exculde the first \"\" element\n\n        if(urlComponents.length == 3){\n          this.breadCrumbs.push({name:'Dashboard',url:'./../dashboard',status:'active'});\n          this.breadCrumbs.push({name:'Device data',url:'./',status:'disabled'});\n          this.isOnOverView = false;\n        }\n        else if(urlComponents.length == 1){\n          this.breadCrumbs.push({name:'Dashboard',url:'./',status:'disabled'});\n          this.isOnOverView = true;\n\n          let subs = this.deviceData.getDeviceDataLight().subscribe( \n            (data:DeviceDataLight[])=>{\n            this.devices = data;\n            this.noOfDevices = data.length;\n            this.noOfDevicesConnected = data.length;//check how many devices are connected.\n          },\n          (error) =>{\n            this.store.sendToastMsg({msg:'Something went wrong!',type:'warning',color:'red'});\n          }\n          );\n          this.subscriptions?.push(subs);\n        }\n        console.log(this.breadCrumbs)\n      }\n    })\n    this.subscriptions?.push(subs);\n  }\n\n  ngOnDestroy(): void {\n      this.subscriptions?.forEach(subs=>{\n        subs.unsubscribe();\n      })\n  }\n}\n\n    \n\n    \n        \n    \n        \n            {{item.name}}\n        \n    \n\n\n\n    \n        \n            \n                \n                    \n                        {{device.name}}\n                        Connected \n                    \n                    \n                        \n                            \n                                \n                                    \n                                    \n                                \n                            \n                            \n                                \n                                    \n                                    \n                                \n                            \n                        \n                        \n                            \n                                \n                                    Description\n                                    Status\n                                \n                            \n                            \n                                \n                                    Pack Voltage\n                                    {{device.packVoltage}}V\n                                \n                                \n                                    Pack Current\n                                    {{device.packCurrent}}A\n                                \n                                \n                                    Average Temperature\n                                    {{device.averageTemperature}}&deg;C\n                                \n                                \n                                    Charge/Discharge status\n                                    {{device.chargeDischargeStatus}}\n                                \n                            \n                        \n                    \n                \n            \n        \n        \n            \n                \n                    Overall Description\n                \n                \n                    \n                        No. of devices configured\n                        {{noOfDevices}}\n                    \n                    \n                        No. of devices online\n                        {{noOfDevicesConnected}}\n                    \n                \n            \n        \n    \n\n\n\n    \n        \n    \n\n    \n\n    \n                \n                    ./dashboard.component.css\n                \n                .divider{\n    --bs-breadcrumb-divider: '>';\n}\n.overall-description{\n    border: 1px solid rgba(0, 0, 0, 0.36);\n    border-radius: 5px;\n    box-shadow: 5px 5px 10px 0px lightblue;\n    padding: 20px;\n    color: rgba(11, 10, 10, 0.559);\n}\n.overall-description .content{\n    margin-top: 10px;\n}\n.overall-description .title{\n    border-bottom: 1px solid gray;\n}\n.pack{\n    border: 1px solid rgba(0, 0, 0, 0.36);\n    border-radius: 5px;\n    box-shadow: 2px 2px 2px 0px rgba(173, 216, 230, 0.411);\n    margin-bottom: 20px;\n    margin-right: 20px;\n}\n.pack .head{\n    font-size: small;\n    padding-top: 10px;\n    padding-bottom: 10px;\n}\n.pack .bottom{\n    font-size: smaller;\n}\n.head{\n    border-bottom: 1px solid gray;\n}\n.pack:hover{\n    box-shadow: 2px 2px 2px 0px rgba(10, 147, 193, 0.783);\n    cursor: pointer;\n}\na.disabled{\n    pointer-events: none;\n    cursor:default;\n    text-decoration: none;\n    color:rgba(128, 128, 128, 0.473);\n}\na.active{\n    text-decoration: none;\n}\n\n.navigation{\n    background-color: rgba(181, 236, 255, 0.154);\n}\n\n.navigation ol{\n    border-left: 4px solid red;\n    vertical-align: middle;\n    padding: 10px 2px;\n}\n\n.overall-description-container{\n    position:relative;\n}\n.overall-description{\n    position:sticky;\n    top:10px;\n}\n\n.circle-pogress{\n    text-align: center;\n}\n.pack-details{\n    margin: auto;\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                        {{item.name}}                                                                                                {{device.name}}                        Connected                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                 Description                                    Status                                                                                                                                                            Pack Voltage                                    {{device.packVoltage}}V                                                                                                    Pack Current                                    {{device.packCurrent}}A                                                                                                    Average Temperature                                    {{device.averageTemperature}}°C                                                                                                    Charge/Discharge status                                    {{device.chargeDischargeStatus}}                                                                                                                                                                                                    Overall Description                                                                            No. of devices configured                        {{noOfDevices}}                                                                No. of devices online                        {{noOfDevicesConnected}}                                                                            '\n    var COMPONENTS = [{'name': 'AddBatteryPackComponent', 'selector': 'app-add-battery-pack'},{'name': 'AddCellsComponent', 'selector': 'app-add-cells'},{'name': 'AddTestChamberComponent', 'selector': 'app-add-test-chamber'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BatteryPacksComponent', 'selector': 'app-battery-packs'},{'name': 'BatteryTestComponent', 'selector': 'app-battery-test'},{'name': 'CellsComponent', 'selector': 'app-cells'},{'name': 'CreateNewTestComponent', 'selector': 'app-create-new-test'},{'name': 'DashboardComponent', 'selector': 'app-dashboard'},{'name': 'DeviceDataComponent', 'selector': 'app-device-data'},{'name': 'DevicesComponent', 'selector': 'app-devices'},{'name': 'DevicesDefaultComponent', 'selector': 'app-devices-default'},{'name': 'DocsComponent', 'selector': 'app-docs'},{'name': 'EditBatteryPackComponent', 'selector': 'app-edit-battery-pack'},{'name': 'EditCellsComponent', 'selector': 'app-edit-cells'},{'name': 'EditTestChamberComponent', 'selector': 'app-edit-test-chamber'},{'name': 'FootNavComponent', 'selector': 'app-foot-nav'},{'name': 'HeadNavComponent', 'selector': 'app-head-nav'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'NoResultComponent', 'selector': 'app-no-result'},{'name': 'ShowAllTestsResultComponent', 'selector': 'app-show-all-tests-result'},{'name': 'ShowTestResultComponent', 'selector': 'app-show-test-result'},{'name': 'TestChambersComponent', 'selector': 'app-test-chambers'},{'name': 'ViewBatteryPacksComponent', 'selector': 'app-view-battery-packs'},{'name': 'ViewCellsComponent', 'selector': 'app-view-cells'},{'name': 'ViewTestChambersComponent', 'selector': 'app-view-test-chambers'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'DashboardComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/DeviceDataComponent.html":{"url":"components/DeviceDataComponent.html","title":"component - DeviceDataComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  DeviceDataComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/body/dashboard/device-data/device-data.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n                    OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-device-data\n            \n\n            \n                styleUrls\n                ./device-data.component.css\n            \n\n\n\n            \n                templateUrl\n                ./device-data.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                deviceId\n                            \n                            \n                                subs\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(route: ActivatedRoute)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/body/dashboard/device-data/device-data.component.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        route\n                                                  \n                                                        \n                                                                        ActivatedRoute\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnDestroy\n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/body/dashboard/device-data/device-data.component.ts:22\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/body/dashboard/device-data/device-data.component.ts:15\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        deviceId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/components/body/dashboard/device-data/device-data.component.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        subs\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Subscription[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/components/body/dashboard/device-data/device-data.component.ts:12\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Subscription } from 'rxjs';\nimport { Component, OnInit, OnDestroy } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\n\n@Component({\n  selector: 'app-device-data',\n  templateUrl: './device-data.component.html',\n  styleUrls: ['./device-data.component.css'],\n})\nexport class DeviceDataComponent implements OnInit, OnDestroy {\n  deviceId?: string;\n  subs: Subscription[] = [];\n  constructor(private route: ActivatedRoute) {}\n\n  ngOnInit(): void {\n    const sub = this.route.paramMap.subscribe((params) => {\n      this.deviceId = params.get('deviceId') as any;\n      //console.log(this.deviceId);\n    });\n    this.subs.push(sub);\n  }\n  ngOnDestroy(): void {\n    this.subs.forEach((sub) => {\n      sub.unsubscribe();\n    });\n  }\n}\n\n    \n\n    \n        device-data works!\n\n    \n\n    \n                \n                    ./device-data.component.css\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = 'device-data works!'\n    var COMPONENTS = [{'name': 'AddBatteryPackComponent', 'selector': 'app-add-battery-pack'},{'name': 'AddCellsComponent', 'selector': 'app-add-cells'},{'name': 'AddTestChamberComponent', 'selector': 'app-add-test-chamber'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BatteryPacksComponent', 'selector': 'app-battery-packs'},{'name': 'BatteryTestComponent', 'selector': 'app-battery-test'},{'name': 'CellsComponent', 'selector': 'app-cells'},{'name': 'CreateNewTestComponent', 'selector': 'app-create-new-test'},{'name': 'DashboardComponent', 'selector': 'app-dashboard'},{'name': 'DeviceDataComponent', 'selector': 'app-device-data'},{'name': 'DevicesComponent', 'selector': 'app-devices'},{'name': 'DevicesDefaultComponent', 'selector': 'app-devices-default'},{'name': 'DocsComponent', 'selector': 'app-docs'},{'name': 'EditBatteryPackComponent', 'selector': 'app-edit-battery-pack'},{'name': 'EditCellsComponent', 'selector': 'app-edit-cells'},{'name': 'EditTestChamberComponent', 'selector': 'app-edit-test-chamber'},{'name': 'FootNavComponent', 'selector': 'app-foot-nav'},{'name': 'HeadNavComponent', 'selector': 'app-head-nav'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'NoResultComponent', 'selector': 'app-no-result'},{'name': 'ShowAllTestsResultComponent', 'selector': 'app-show-all-tests-result'},{'name': 'ShowTestResultComponent', 'selector': 'app-show-test-result'},{'name': 'TestChambersComponent', 'selector': 'app-test-chambers'},{'name': 'ViewBatteryPacksComponent', 'selector': 'app-view-battery-packs'},{'name': 'ViewCellsComponent', 'selector': 'app-view-cells'},{'name': 'ViewTestChambersComponent', 'selector': 'app-view-test-chambers'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'DeviceDataComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/DeviceDataLight.html":{"url":"interfaces/DeviceDataLight.html","title":"interface - DeviceDataLight","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  DeviceDataLight\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/DeviceData.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            averageTemperature\n                                        \n                                \n                                \n                                        \n                                            chargeDischargeStatus\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            lastOnline\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                                \n                                        \n                                            packCondition\n                                        \n                                \n                                \n                                        \n                                            packCurrent\n                                        \n                                \n                                \n                                        \n                                            packVoltage\n                                        \n                                \n                                \n                                        \n                                            soc\n                                        \n                                \n                                \n                                        \n                                            soh\n                                        \n                                \n                                \n                                        \n                                            timeStamp\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        averageTemperature\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        averageTemperature:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        chargeDischargeStatus\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        chargeDischargeStatus:     \"idle\" | \"charging\" | \"discharging\"\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     \"idle\" | \"charging\" | \"discharging\"\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        lastOnline\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        lastOnline:         any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         any\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        packCondition\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        packCondition:     \"poor\" | \"moderate\" | \"good\"\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     \"poor\" | \"moderate\" | \"good\"\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        packCurrent\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        packCurrent:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        packVoltage\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        packVoltage:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        soc\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        soc:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        soh\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        soh:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        timeStamp\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        timeStamp:         any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         any\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface DeviceDataLight{\n    id:string,\n    name:string,\n    soc:number,\n    soh:number,\n    packVoltage:number,\n    packCurrent:number,\n    averageTemperature:number,\n    chargeDischargeStatus:'idle'|'charging'|'discharging',\n    packCondition:'poor'|'moderate'|'good',\n    lastOnline:any,\n    timeStamp:any\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/DeviceDataService.html":{"url":"injectables/DeviceDataService.html","title":"injectable - DeviceDataService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  DeviceDataService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/device-data.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                errorHandler\n                            \n                            \n                                getDeviceDataLight\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/device-data.service.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        errorHandler\n                        \n                    \n                \n            \n            \n                \n                    \n                    errorHandler(error: HttpErrorResponse)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/device-data.service.ts:18\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    error\n                                    \n                                                HttpErrorResponse\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getDeviceDataLight\n                        \n                    \n                \n            \n            \n                \ngetDeviceDataLight()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/device-data.service.ts:14\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { DeviceDataLight } from './../models/DeviceData';\nimport { HttpClient, HttpErrorResponse, HttpResponse } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable,throwError } from 'rxjs';\nimport { retry,catchError } from 'rxjs/operators'\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class DeviceDataService {\n\n  constructor(private http:HttpClient) { }\n\n  getDeviceDataLight(){\n    return this.http.get('/e_mobility/i-bms/assets/DevicesDataLight.json').pipe(retry(3),catchError(this.errorHandler));\n  }\n\n  private errorHandler(error:HttpErrorResponse){\n    if(error.status === 0){\n      console.error(`Something went wrong with the network. Error status : ${error.status}`);\n    }else{\n      console.error(`Backed has rejected the request. ${error.error}`);\n    }\n    return throwError(() => new Error(error.error));\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/DevicesComponent.html":{"url":"components/DevicesComponent.html","title":"component - DevicesComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  DevicesComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/body/devices/devices.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-devices\n            \n\n            \n                styleUrls\n                ./devices.component.css\n            \n\n\n\n            \n                templateUrl\n                ./devices.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-devices',\n  templateUrl: './devices.component.html',\n  styleUrls: ['./devices.component.css'],\n})\nexport class DevicesComponent {}\n\n    \n\n    \n        \n\n    \n\n    \n                \n                    ./devices.component.css\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AddBatteryPackComponent', 'selector': 'app-add-battery-pack'},{'name': 'AddCellsComponent', 'selector': 'app-add-cells'},{'name': 'AddTestChamberComponent', 'selector': 'app-add-test-chamber'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BatteryPacksComponent', 'selector': 'app-battery-packs'},{'name': 'BatteryTestComponent', 'selector': 'app-battery-test'},{'name': 'CellsComponent', 'selector': 'app-cells'},{'name': 'CreateNewTestComponent', 'selector': 'app-create-new-test'},{'name': 'DashboardComponent', 'selector': 'app-dashboard'},{'name': 'DeviceDataComponent', 'selector': 'app-device-data'},{'name': 'DevicesComponent', 'selector': 'app-devices'},{'name': 'DevicesDefaultComponent', 'selector': 'app-devices-default'},{'name': 'DocsComponent', 'selector': 'app-docs'},{'name': 'EditBatteryPackComponent', 'selector': 'app-edit-battery-pack'},{'name': 'EditCellsComponent', 'selector': 'app-edit-cells'},{'name': 'EditTestChamberComponent', 'selector': 'app-edit-test-chamber'},{'name': 'FootNavComponent', 'selector': 'app-foot-nav'},{'name': 'HeadNavComponent', 'selector': 'app-head-nav'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'NoResultComponent', 'selector': 'app-no-result'},{'name': 'ShowAllTestsResultComponent', 'selector': 'app-show-all-tests-result'},{'name': 'ShowTestResultComponent', 'selector': 'app-show-test-result'},{'name': 'TestChambersComponent', 'selector': 'app-test-chambers'},{'name': 'ViewBatteryPacksComponent', 'selector': 'app-view-battery-packs'},{'name': 'ViewCellsComponent', 'selector': 'app-view-cells'},{'name': 'ViewTestChambersComponent', 'selector': 'app-view-test-chambers'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'DevicesComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/DevicesDefaultComponent.html":{"url":"components/DevicesDefaultComponent.html","title":"component - DevicesDefaultComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  DevicesDefaultComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/body/devices/devices-default/devices-default.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-devices-default\n            \n\n            \n                styleUrls\n                ./devices-default.component.css\n            \n\n\n\n            \n                templateUrl\n                ./devices-default.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                currentWord\n                            \n                            \n                                words\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(location: Location)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/body/devices/devices-default/devices-default.component.ts:29\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        location\n                                                  \n                                                        \n                                                                        Location\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/body/devices/devices-default/devices-default.component.ts:32\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        currentWord\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 0\n                    \n                \n                    \n                        \n                                Defined in src/app/components/body/devices/devices-default/devices-default.component.ts:29\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        words\n                        \n                    \n                \n            \n                \n                    \n                        Type :     []\n\n                    \n                \n                \n                    \n                        Default value : ['test chambers.', 'cells.', 'battery packs.']\n                    \n                \n                    \n                        \n                                Defined in src/app/components/body/devices/devices-default/devices-default.component.ts:28\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Location } from '@angular/common';\nimport { Component, OnInit } from '@angular/core';\nimport {\n  trigger,\n  state,\n  style,\n  animate,\n  transition,\n} from '@angular/animations';\n\n@Component({\n  selector: 'app-devices-default',\n  templateUrl: './devices-default.component.html',\n  styleUrls: ['./devices-default.component.css'],\n  animations: [\n    trigger('insertRemoveTrigger', [\n      transition(':enter', [\n        style({ transform: 'translateY(40%)' }),\n        animate('100ms', style({ transform: 'translateY(0%)' })),\n      ]),\n      transition(':leave', [\n        animate('0ms', style({ transform: 'translateY(-20%)' })),\n      ]),\n    ]),\n  ],\n})\nexport class DevicesDefaultComponent {\n  words = ['test chambers.', 'cells.', 'battery packs.'];\n  currentWord = 0;\n  constructor(private location: Location) {}\n\n  ngOnInit(): void {\n    if (window.location.hostname != 'localhost') {\n      this.location.replaceState('./'); //on prod\n    }\n    setInterval(() => {\n      this.currentWord = (this.currentWord + 1) % this.words.length;\n    }, 1500);\n  }\n}\n\n    \n\n    \n        \n    \n      \n        \n          Introducing the\n          ultimate\n          management tools for \n          \n            {{ words[currentWord] }}\n          \n      \n      \n        Advanced device management and testing for cells, test chambers, and\n          battery packs: simplified by our comprehensive tools.\n      \n    \n  \n  \n    \n      \n        Test Chamber\n        \n        \n          \n            Test chambers provide a controlled environment for accurately\n            measuring battery cell parameters. You could mention the various types\n            of tests that can be conducted using the test chambers, such as cycle\n            life, capacity, and performance testing.\n          \n        \n      \n    \n    \n      \n        Battery Cell\n        \n        \n          \n            Lets you manage different types of battery cells, including\n            cylindrical, pouch, and prismatic cells. You can add, view, and edit\n            cell details.\n          \n        \n      \n    \n    \n      \n        Battery Pack\n        \n        \n          \n            Seamlessly connect your devices to your battery packs with our\n            intuitive battery management system, designed to provide comprehensive\n            monitoring and analytics without the need for complex setup or\n            programming.\n          \n        \n      \n    \n  \n\n    \n\n    \n                \n                    ./devices-default.component.css\n                \n                .device-head,\n.device-sub-head {\n  font-family: Helvetica, sans-serif;\n}\n.device-head {\n  color: #060b39;\n  font-size: 40px;\n}\n.device-sub-head {\n  text-align: start;\n  font-size: 15px;\n  color: #2a4d0778;\n  margin-top: 20px;\n}\n.dynamic-text {\n  color: red;\n  display: inline-block;\n}\n.dynamic-text-container {\n  border: 2px solid rgba(38, 125, 67, 0.358);\n  border-radius: 8px;\n  display: inline-block;\n  align-items: center;\n  justify-content: center;\n  overflow: hidden;\n  vertical-align: bottom;\n  margin-top: 10px;\n}\n.device-container {\n  margin-top: 100px;\n}\n.image-container {\n  height: 300px;\n  background-attachment: scroll;\n  background-repeat: no-repeat;\n  background-size: contain;\n  background-position: center;\n  border-bottom: 1px solid rgba(128, 128, 128, 0.275);\n}\n#cell-image {\n  background-image: url(\"/e_mobility/i-bms/assets/Classic_iOS_Battery_Icon.png\");\n}\n#test-chamber-image {\n  background-image: url(\"/e_mobility/i-bms/assets/test_chamber.png\");\n}\n#battery-pack-image {\n  background-image: url(\"/e_mobility/i-bms/assets/battery-pack.png\");\n}\n.device-container .card-body {\n  text-align: left;\n}\n.device-container .card-header{\n  background-color: #010305cf;\n  color: white;\n}\n.device-container .card {\n  height: 100%;\n}\n.device-container .card:hover {\n  cursor: pointer;\n}\n.device-container .card:hover{\n  transform: scale(1.01);\n  box-shadow: 2px 2px #dccaff61\n}\n.device-container > * {\n  margin: 10px;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                            Introducing the          ultimate          management tools for                       {{ words[currentWord] }}                              Advanced device management and testing for cells, test chambers, and          battery packs: simplified by our comprehensive tools.                                Test Chamber                                      Test chambers provide a controlled environment for accurately            measuring battery cell parameters. You could mention the various types            of tests that can be conducted using the test chambers, such as cycle            life, capacity, and performance testing.                                              Battery Cell                                      Lets you manage different types of battery cells, including            cylindrical, pouch, and prismatic cells. You can add, view, and edit            cell details.                                              Battery Pack                                      Seamlessly connect your devices to your battery packs with our            intuitive battery management system, designed to provide comprehensive            monitoring and analytics without the need for complex setup or            programming.                              '\n    var COMPONENTS = [{'name': 'AddBatteryPackComponent', 'selector': 'app-add-battery-pack'},{'name': 'AddCellsComponent', 'selector': 'app-add-cells'},{'name': 'AddTestChamberComponent', 'selector': 'app-add-test-chamber'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BatteryPacksComponent', 'selector': 'app-battery-packs'},{'name': 'BatteryTestComponent', 'selector': 'app-battery-test'},{'name': 'CellsComponent', 'selector': 'app-cells'},{'name': 'CreateNewTestComponent', 'selector': 'app-create-new-test'},{'name': 'DashboardComponent', 'selector': 'app-dashboard'},{'name': 'DeviceDataComponent', 'selector': 'app-device-data'},{'name': 'DevicesComponent', 'selector': 'app-devices'},{'name': 'DevicesDefaultComponent', 'selector': 'app-devices-default'},{'name': 'DocsComponent', 'selector': 'app-docs'},{'name': 'EditBatteryPackComponent', 'selector': 'app-edit-battery-pack'},{'name': 'EditCellsComponent', 'selector': 'app-edit-cells'},{'name': 'EditTestChamberComponent', 'selector': 'app-edit-test-chamber'},{'name': 'FootNavComponent', 'selector': 'app-foot-nav'},{'name': 'HeadNavComponent', 'selector': 'app-head-nav'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'NoResultComponent', 'selector': 'app-no-result'},{'name': 'ShowAllTestsResultComponent', 'selector': 'app-show-all-tests-result'},{'name': 'ShowTestResultComponent', 'selector': 'app-show-test-result'},{'name': 'TestChambersComponent', 'selector': 'app-test-chambers'},{'name': 'ViewBatteryPacksComponent', 'selector': 'app-view-battery-packs'},{'name': 'ViewCellsComponent', 'selector': 'app-view-cells'},{'name': 'ViewTestChambersComponent', 'selector': 'app-view-test-chambers'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'DevicesDefaultComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/DocsComponent.html":{"url":"components/DocsComponent.html","title":"component - DocsComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  DocsComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/body/docs/docs.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-docs\n            \n\n            \n                styleUrls\n                ./docs.component.css\n            \n\n\n\n            \n                templateUrl\n                ./docs.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/components/body/docs/docs.component.ts:8\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/body/docs/docs.component.ts:11\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-docs',\n  templateUrl: './docs.component.html',\n  styleUrls: ['./docs.component.css'],\n})\nexport class DocsComponent implements OnInit {\n  constructor() {}\n\n  ngOnInit(): void {}\n}\n\n    \n\n    \n        docs works!\n\n    \n\n    \n                \n                    ./docs.component.css\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = 'docs works!'\n    var COMPONENTS = [{'name': 'AddBatteryPackComponent', 'selector': 'app-add-battery-pack'},{'name': 'AddCellsComponent', 'selector': 'app-add-cells'},{'name': 'AddTestChamberComponent', 'selector': 'app-add-test-chamber'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BatteryPacksComponent', 'selector': 'app-battery-packs'},{'name': 'BatteryTestComponent', 'selector': 'app-battery-test'},{'name': 'CellsComponent', 'selector': 'app-cells'},{'name': 'CreateNewTestComponent', 'selector': 'app-create-new-test'},{'name': 'DashboardComponent', 'selector': 'app-dashboard'},{'name': 'DeviceDataComponent', 'selector': 'app-device-data'},{'name': 'DevicesComponent', 'selector': 'app-devices'},{'name': 'DevicesDefaultComponent', 'selector': 'app-devices-default'},{'name': 'DocsComponent', 'selector': 'app-docs'},{'name': 'EditBatteryPackComponent', 'selector': 'app-edit-battery-pack'},{'name': 'EditCellsComponent', 'selector': 'app-edit-cells'},{'name': 'EditTestChamberComponent', 'selector': 'app-edit-test-chamber'},{'name': 'FootNavComponent', 'selector': 'app-foot-nav'},{'name': 'HeadNavComponent', 'selector': 'app-head-nav'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'NoResultComponent', 'selector': 'app-no-result'},{'name': 'ShowAllTestsResultComponent', 'selector': 'app-show-all-tests-result'},{'name': 'ShowTestResultComponent', 'selector': 'app-show-test-result'},{'name': 'TestChambersComponent', 'selector': 'app-test-chambers'},{'name': 'ViewBatteryPacksComponent', 'selector': 'app-view-battery-packs'},{'name': 'ViewCellsComponent', 'selector': 'app-view-cells'},{'name': 'ViewTestChambersComponent', 'selector': 'app-view-test-chambers'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'DocsComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Dot.html":{"url":"classes/Dot.html","title":"class - Dot","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Dot\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/components/body/home/home.component.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                sprite\n                            \n                            \n                                    Public\n                                track\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                move\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(sprite: any, track: any)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/body/home/home.component.ts:4\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        sprite\n                                                  \n                                                        \n                                                                        any\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        track\n                                                  \n                                                        \n                                                                        any\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        sprite\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                    \n                        \n                                Defined in src/app/components/body/home/home.component.ts:6\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        track\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                    \n                        \n                                Defined in src/app/components/body/home/home.component.ts:6\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        move\n                        \n                    \n                \n            \n            \n                \nmove(u: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/body/home/home.component.ts:12\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    u\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Location } from '@angular/common';\nimport { Component, OnInit } from '@angular/core';\n\nclass Dot {\n  // Initialize the dot: connect sprite and track properties with supplied SVG elements\n  constructor(public sprite: any, public track: any) {\n    this.sprite = document.getElementById(sprite);\n    this.track = document.getElementById(track);\n  }\n\n  // Put the dot on its spot\n  move(u: any) {\n    let p = this.track.getPointAtLength(u * this.track.getTotalLength());\n    this.sprite.setAttribute('transform', `translate(${p.x}, ${p.y})`);\n  }\n}\nclass Anim {\n  public duration: any;\n  public tZero: any;\n\n  constructor(public dot: any) {\n    this.dot = dot;\n  }\n  start(duration: any) {\n    this.duration = duration;\n    this.tZero = Date.now();\n    requestAnimationFrame(() => this.run());\n  }\n\n  run() {\n    let u = Math.min((Date.now() - this.tZero) / this.duration, 1);\n\n    if (u  this.run());\n    } else {\n      this.onFinish();\n    }\n\n    this.dot.move(u);\n  }\n\n  onFinish() {\n    // Schedule the animation to restart\n    setTimeout(() => this.start(this.duration), 10);\n  }\n}\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css'],\n})\nexport class HomeComponent implements OnInit {\n  constructor(private location: Location) {}\n\n  ngOnInit(): void {\n    let anim_time = 4000;\n    let dot1 = new Dot('Dot_1', 'Path_1');\n    let anim_gen_1 = new Anim(dot1);\n    anim_gen_1.start(anim_time);\n\n    let dot2 = new Dot('Dot_2', 'Path_2');\n    let anim_gen_2 = new Anim(dot2);\n    anim_gen_2.start(anim_time);\n\n    let dot3 = new Dot('Dot_3', 'Path_3');\n    let anim_gen_3 = new Anim(dot3);\n    anim_gen_3.start(anim_time);\n\n    let dot4 = new Dot('Dot_4', 'Path_4');\n    let anim_gen_4 = new Anim(dot4);\n    anim_gen_4.start(anim_time);\n\n    //change the location from /home to home just to keep the location static through out the app\n    if (window.location.hostname != 'localhost') {\n      console.log(window.location.hostname);\n      this.location.replaceState('./'); //on prod\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/DriveCycle.html":{"url":"interfaces/DriveCycle.html","title":"interface - DriveCycle","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  DriveCycle\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/DriveCycle.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            current\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            power\n                                        \n                                \n                                \n                                        \n                                            time\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        current\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        current:     number[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        power\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        power:     number[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        time\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        time:     number[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface DriveCycle{\n    time:number[];\n    current?:number[];\n    power?:number[];\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/EditBatteryPackComponent.html":{"url":"components/EditBatteryPackComponent.html","title":"component - EditBatteryPackComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  EditBatteryPackComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/body/devices/battery-packs/edit-battery-pack/edit-battery-pack.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-edit-battery-pack\n            \n\n            \n                styleUrls\n                ./edit-battery-pack.component.css\n            \n\n\n\n            \n                templateUrl\n                ./edit-battery-pack.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-edit-battery-pack',\n  templateUrl: './edit-battery-pack.component.html',\n  styleUrls: ['./edit-battery-pack.component.css']\n})\nexport class EditBatteryPackComponent {\n\n}\n\n    \n\n    \n        comming soon!\n\n    \n\n    \n                \n                    ./edit-battery-pack.component.css\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = 'comming soon!'\n    var COMPONENTS = [{'name': 'AddBatteryPackComponent', 'selector': 'app-add-battery-pack'},{'name': 'AddCellsComponent', 'selector': 'app-add-cells'},{'name': 'AddTestChamberComponent', 'selector': 'app-add-test-chamber'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BatteryPacksComponent', 'selector': 'app-battery-packs'},{'name': 'BatteryTestComponent', 'selector': 'app-battery-test'},{'name': 'CellsComponent', 'selector': 'app-cells'},{'name': 'CreateNewTestComponent', 'selector': 'app-create-new-test'},{'name': 'DashboardComponent', 'selector': 'app-dashboard'},{'name': 'DeviceDataComponent', 'selector': 'app-device-data'},{'name': 'DevicesComponent', 'selector': 'app-devices'},{'name': 'DevicesDefaultComponent', 'selector': 'app-devices-default'},{'name': 'DocsComponent', 'selector': 'app-docs'},{'name': 'EditBatteryPackComponent', 'selector': 'app-edit-battery-pack'},{'name': 'EditCellsComponent', 'selector': 'app-edit-cells'},{'name': 'EditTestChamberComponent', 'selector': 'app-edit-test-chamber'},{'name': 'FootNavComponent', 'selector': 'app-foot-nav'},{'name': 'HeadNavComponent', 'selector': 'app-head-nav'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'NoResultComponent', 'selector': 'app-no-result'},{'name': 'ShowAllTestsResultComponent', 'selector': 'app-show-all-tests-result'},{'name': 'ShowTestResultComponent', 'selector': 'app-show-test-result'},{'name': 'TestChambersComponent', 'selector': 'app-test-chambers'},{'name': 'ViewBatteryPacksComponent', 'selector': 'app-view-battery-packs'},{'name': 'ViewCellsComponent', 'selector': 'app-view-cells'},{'name': 'ViewTestChambersComponent', 'selector': 'app-view-test-chambers'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'EditBatteryPackComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/EditCellsComponent.html":{"url":"components/EditCellsComponent.html","title":"component - EditCellsComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  EditCellsComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/body/devices/cells/edit-cells/edit-cells.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n                    OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-edit-cells\n            \n\n            \n                styleUrls\n                ./edit-cells.component.css\n            \n\n\n\n            \n                templateUrl\n                ./edit-cells.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                cell\n                            \n                            \n                                    Optional\n                                cellId\n                            \n                            \n                                    Optional\n                                cellTemplates\n                            \n                            \n                                isSaveDisabled\n                            \n                            \n                                modal\n                            \n                            \n                                    Optional\n                                modalBody\n                            \n                            \n                                    Optional\n                                modalTitle\n                            \n                            \n                                    Optional\n                                selectedCellTemplate\n                            \n                            \n                                    Optional\n                                selectedUser\n                            \n                            \n                                selectedUsersRead\n                            \n                            \n                                selectedUsersWrite\n                            \n                            \n                                showSpinnerButton\n                            \n                            \n                                subs\n                            \n                            \n                                users\n                            \n                            \n                                userSub\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                deleteChannel\n                            \n                            \n                                getUsers\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                populate\n                            \n                            \n                                save\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(_cellService: CellService, _userService: UserService, _componentStoreService: ComponentStoreService, route: ActivatedRoute, router: Router, modalService: NgbModal)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/body/devices/cells/edit-cells/edit-cells.component.ts:34\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        _cellService\n                                                  \n                                                        \n                                                                        CellService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        _userService\n                                                  \n                                                        \n                                                                        UserService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        _componentStoreService\n                                                  \n                                                        \n                                                                        ComponentStoreService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        route\n                                                  \n                                                        \n                                                                        ActivatedRoute\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        modalService\n                                                  \n                                                        \n                                                                    NgbModal\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        deleteChannel\n                        \n                    \n                \n            \n            \n                \ndeleteChannel()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/body/devices/cells/edit-cells/edit-cells.component.ts:123\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getUsers\n                        \n                    \n                \n            \n            \n                \ngetUsers(searchStr: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/body/devices/cells/edit-cells/edit-cells.component.ts:160\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    searchStr\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        ''\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnDestroy\n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/body/devices/cells/edit-cells/edit-cells.component.ts:184\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/body/devices/cells/edit-cells/edit-cells.component.ts:46\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        populate\n                        \n                    \n                \n            \n            \n                \npopulate()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/body/devices/cells/edit-cells/edit-cells.component.ts:74\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        save\n                        \n                    \n                \n            \n            \n                \nsave()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/body/devices/cells/edit-cells/edit-cells.component.ts:87\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        cell\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Cell\n\n                    \n                \n                \n                    \n                        Default value : new CellClass()\n                    \n                \n                    \n                        \n                                Defined in src/app/components/body/devices/cells/edit-cells/edit-cells.component.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        cellId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                    \n                        \n                                Defined in src/app/components/body/devices/cells/edit-cells/edit-cells.component.ts:30\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        cellTemplates\n                        \n                    \n                \n            \n                \n                    \n                        Type :     CellTemplate[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/components/body/devices/cells/edit-cells/edit-cells.component.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isSaveDisabled\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/components/body/devices/cells/edit-cells/edit-cells.component.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        modal\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ViewChild('myModal')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/components/body/devices/cells/edit-cells/edit-cells.component.ts:44\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        modalBody\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/components/body/devices/cells/edit-cells/edit-cells.component.ts:33\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        modalTitle\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/components/body/devices/cells/edit-cells/edit-cells.component.ts:34\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        selectedCellTemplate\n                        \n                    \n                \n            \n                \n                    \n                        Type :         CellTemplate\n\n                    \n                \n                \n                    \n                        Default value : undefined\n                    \n                \n                    \n                        \n                                Defined in src/app/components/body/devices/cells/edit-cells/edit-cells.component.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        selectedUser\n                        \n                    \n                \n            \n                \n                    \n                        Type :         _User[]\n\n                    \n                \n                    \n                        \n                                Defined in src/app/components/body/devices/cells/edit-cells/edit-cells.component.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        selectedUsersRead\n                        \n                    \n                \n            \n                \n                    \n                        Type :         _User[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/components/body/devices/cells/edit-cells/edit-cells.component.ts:31\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        selectedUsersWrite\n                        \n                    \n                \n            \n                \n                    \n                        Type :         _User[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/components/body/devices/cells/edit-cells/edit-cells.component.ts:32\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        showSpinnerButton\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/components/body/devices/cells/edit-cells/edit-cells.component.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        subs\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Subscription[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/components/body/devices/cells/edit-cells/edit-cells.component.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        users\n                        \n                    \n                \n            \n                \n                    \n                        Type :         _User[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/components/body/devices/cells/edit-cells/edit-cells.component.ts:28\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        userSub\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Subscription | undefined\n\n                    \n                \n                \n                    \n                        Default value : undefined\n                    \n                \n                    \n                        \n                                Defined in src/app/components/body/devices/cells/edit-cells/edit-cells.component.ts:29\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { NgbModal } from '@ng-bootstrap/ng-bootstrap';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { ComponentStoreService } from './../../../../../services/component-store.service';\nimport {\n  UserService,\n  _User,\n  _UserLight,\n} from './../../../../../services/user.service';\nimport { CellService } from './../../../../../services/cell.service';\nimport { CellTemplate } from './../../../../../models/CellTemplate';\nimport { Subscription, switchMap } from 'rxjs';\nimport { Component, OnInit, OnDestroy, ViewChild } from '@angular/core';\nimport { Cell, CellClass } from 'src/app/models/Cell';\n\n@Component({\n  selector: 'app-edit-cells',\n  templateUrl: './edit-cells.component.html',\n  styleUrls: ['./edit-cells.component.css'],\n})\nexport class EditCellsComponent implements OnInit, OnDestroy {\n  showSpinnerButton: boolean = false;\n  isSaveDisabled: boolean = false;\n  subs: Subscription[] = [];\n  cellTemplates?: CellTemplate[] = [];\n  selectedCellTemplate?: CellTemplate = undefined;\n  cell: Cell = new CellClass();\n  selectedUser?: _User[];\n  users: _User[] = [];\n  userSub: Subscription | undefined = undefined;\n  cellId?: any;\n  selectedUsersRead: _User[] = [];\n  selectedUsersWrite: _User[] = [];\n  modalBody?: string;\n  modalTitle?: string;\n\n  constructor(\n    private _cellService: CellService,\n    private _userService: UserService,\n    private _componentStoreService: ComponentStoreService,\n    private route: ActivatedRoute,\n    private router: Router,\n    private modalService: NgbModal\n  ) {}\n  @ViewChild('myModal') modal: any;\n\n  ngOnInit(): void {\n    let sub: Subscription = this._cellService\n      .getTemplates()\n      .subscribe((d: any) => {\n        this.cellTemplates = d;\n      });\n    this.subs.push(sub);\n    const os$ = this.route.paramMap.pipe(\n      switchMap((params) => {\n        this.cellId = params.get('cellId');\n        return this._cellService.getCells(this.cellId);\n      })\n    );\n    sub = os$.subscribe((cell_: any) => {\n      this.cell = cell_;\n      this.selectedUsersRead = [];\n      this.selectedUsersWrite = [];\n      this.cell.assignedUsers?.forEach((user: _UserLight) => {\n        if (user.accessType === 'read') {\n          this.selectedUsersRead.push({ _id: user._id, name: user.name });\n        } else if (user.accessType === 'write') {\n          this.selectedUsersWrite.push({ _id: user._id, name: user.name });\n        }\n      });\n    });\n    this.subs.push(sub);\n  }\n\n  populate() {\n    console.log(this.selectedCellTemplate);\n    this.cell.manufacturer = this.selectedCellTemplate?.manufacturer;\n    this.cell.type = this.selectedCellTemplate?.type;\n    this.cell.formFactor = this.selectedCellTemplate?.formFactor;\n    this.cell.cellChemistry = this.selectedCellTemplate?.cellChemistry;\n    this.cell.nomVolt = this.selectedCellTemplate?.nomVoltage;\n    this.cell.nomCap = this.selectedCellTemplate?.nomCapacity;\n    this.cell.nomCurr = this.selectedCellTemplate?.nomCurrent;\n    this.cell.maxVolt = this.selectedCellTemplate?.maxVoltage;\n    this.cell.minVolt = this.selectedCellTemplate?.minVoltage;\n  }\n\n  save() {\n    this.showSpinnerButton = true;\n    let assignedUsers: _UserLight[] = [];\n    this.selectedUsersRead.forEach((user: _User) => {\n      assignedUsers.push({ _id: user._id, accessType: 'read' });\n    });\n    this.selectedUsersWrite.forEach((user: _User) => {\n      assignedUsers.push({ _id: user._id, accessType: 'write' });\n    });\n\n    this.cell.assignedUsers = assignedUsers;\n    const sub = this._cellService.updateCell(this.cell).subscribe({\n      next: (v) => {\n        console.log(v);\n        this.showSpinnerButton = false;\n        this._componentStoreService.sendToastMsg({\n          msg: 'Cell successfully updated.',\n          color: 'green',\n        });\n        this.router.navigate(['../../view'], {\n          relativeTo: this.route,\n          skipLocationChange: true,\n        });\n      },\n      error: (e) => {\n        console.error(e);\n        this.showSpinnerButton = false;\n        this._componentStoreService.sendToastMsg({\n          msg: 'Cell update failed!',\n          color: 'red',\n        });\n      },\n    });\n    this.subs.push(sub);\n  }\n\n  deleteChannel() {\n    this.modalTitle = 'Alert';\n    this.modalBody =\n      'Are you sure you want to mark this cell for deletion? Once done, no one would have access to it.';\n    this.modalService.open(this.modal, { centered: true }).result.then(\n      (result) => {\n        //console.log('accepted');\n        const sub = this._cellService\n          .markForDelete(this.cellId as any)\n          .subscribe({\n            next: (res) => {\n              this._componentStoreService.sendToastMsg({\n                msg: 'Cell marked for deleted!',\n                color: 'green',\n                timeOut: 10000,\n              });\n              this.router.navigate(['../../view'], {\n                relativeTo: this.route,\n                skipLocationChange: true,\n              });\n            },\n            error: (err) => {\n              console.log(err);\n              this._componentStoreService.sendToastMsg({\n                msg: 'Something wrong occured!',\n                color: 'red',\n                timeOut: 10000,\n              });\n            },\n          });\n      },\n      (reason) => {\n        //console.log('closed');\n      }\n    );\n  }\n\n  getUsers(searchStr: string = '') {\n    this.userSub?.unsubscribe();\n    this.users = [];\n    searchStr = searchStr.trim();\n    if (searchStr.length > 0) {\n      this.userSub = this._userService\n        .getUsers(searchStr)\n        .subscribe((users: _User[]) => {\n          //console.log(this.selectedUser)\n          if (this.selectedUser) {\n            //remove existing users from search string\n            this.selectedUser.forEach((user: _User) => {\n              let remIndex = users.findIndex((u) => u._id == user._id);\n              if (remIndex !== -1) {\n                users.splice(remIndex, 1);\n              }\n            });\n          }\n          this.users = users;\n        });\n    } else {\n      this.users = [];\n    }\n  }\n  ngOnDestroy(): void {\n    this.subs?.forEach((sub) => {\n      sub.unsubscribe();\n    });\n  }\n}\n\n    \n\n    \n        \n  \n    \n      Back\n    \n  \n\n\n  \n    \n      \n        Edit the Cell\n        \n          \n            delete_forever\n          \n        \n      \n    \n    \n      \n        \n          Use existant template?\n        \n        \n          \n            \n              {{ tem.templateName }}\n            \n          \n        \n        \n          Select any template to auto-populate some of the fields.\n        \n      \n      About the cell's physical information.\n      \n        \n          Cell Id\n          \n            \n          \n          \n            Unique identifier, generates automatically.\n          \n        \n\n        \n          \n            Cell Name\n          \n          \n            \n          \n          \n            Give a name/base-name to your cell, should be unique among the\n              cells that you have access to.\n          \n        \n\n        \n          \n            Manufacturer\n          \n          \n            \n          \n          \n            Name of the manufacturer.\n          \n        \n\n        \n          \n            Batch No.\n          \n          \n            \n          \n          \n            Batch no. for the inventory management.\n          \n        \n\n        \n          \n            Type\n          \n          \n            \n          \n          \n            Shape of the cell.\n          \n        \n\n        \n          \n            Form Factor\n          \n          \n            \n          \n          \n            Express the physical size of the cell.\n          \n        \n\n        \n          \n            Cell Chemistry\n          \n          \n            \n          \n          \n            Cell chemistry of the cell.\n          \n        \n      \n\n      About the cell's electrical information.\n      \n        \n          \n            Nominal Voltage(V)\n          \n          \n            \n          \n          \n            Manufacturer specified nominal cell voltage.\n          \n        \n\n        \n          \n            Nominal Capacity(mAh)\n          \n          \n            \n          \n          \n            Manufacturer specified nominal cell capacity.\n          \n        \n\n        \n          \n            Nominal Current(A)\n          \n          \n            \n          \n          \n            Manufacturer specified nominal cell current.\n          \n        \n\n        \n          \n            Max Voltage Rating(V)\n          \n          \n            \n          \n          \n            Manufacturer specified maximum cell voltage, might be useful\n              while perforiming test.\n          \n        \n\n        \n          \n            Min Voltage Rating(V)\n          \n          \n            \n          \n          \n            Manufacturer specified minimum cell voltage, might be useful\n              while perforiming test.\n          \n        \n\n        \n          \n            Assigned Users\n              read\n            \n          \n          \n            \n            \n          \n\n          \n            User can only view the cell information.\n          \n        \n        \n          \n            Assigned Users\n              write\n            \n          \n          \n            \n            \n          \n\n          \n            User can view the cell information as well as place an experiment\n              on this cell.\n          \n        \n\n        \n          \n            \n              Save\n              \n                Loading...\n              \n            \n          \n        \n      \n    \n  \n\n\n\n  \n    {{ modalTitle }}\n    \n      X\n    \n  \n  {{ modalBody }}\n  \n    \n      Ok\n    \n  \n\n\n    \n\n    \n                \n                    ./edit-cells.component.css\n                \n                .card {\n  margin-top: 20px;\n}\n.card-body .row {\n  margin: 10px 0px;\n}\ntextarea {\n  resize: none;\n}\n\n/* Chrome, Safari, Edge, Opera */\ninput::-webkit-outer-spin-button,\ninput::-webkit-inner-spin-button {\n  -webkit-appearance: none;\n  margin: 0;\n}\n.required-ast::after {\n  content: \" *\";\n  color: red;\n}\n.delete {\n  margin: 0px 2px;\n}\n.delete:hover {\n  color: red;\n  cursor: pointer;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            Back                          Edit the Cell                              delete_forever                                                        Use existant template?                                                    {{ tem.templateName }}                                                Select any template to auto-populate some of the fields.                    About the cell\\'s physical information.                        Cell Id                                                      Unique identifier, generates automatically.                                                Cell Name                                                                Give a name/base-name to your cell, should be unique among the              cells that you have access to.                                                Manufacturer                                                                Name of the manufacturer.                                                Batch No.                                                                Batch no. for the inventory management.                                                Type                                                                Shape of the cell.                                                Form Factor                                                                Express the physical size of the cell.                                                Cell Chemistry                                                                Cell chemistry of the cell.                              About the cell\\'s electrical information.                                    Nominal Voltage(V)                                                                Manufacturer specified nominal cell voltage.                                                Nominal Capacity(mAh)                                                                Manufacturer specified nominal cell capacity.                                                Nominal Current(A)                                                                Manufacturer specified nominal cell current.                                                Max Voltage Rating(V)                                                                Manufacturer specified maximum cell voltage, might be useful              while perforiming test.                                                Min Voltage Rating(V)                                                                Manufacturer specified minimum cell voltage, might be useful              while perforiming test.                                                Assigned Users              read                                                                                        User can only view the cell information.                                                Assigned Users              write                                                                                        User can view the cell information as well as place an experiment              on this cell.                                                              Save                              Loading...                                                              {{ modalTitle }}          X        {{ modalBody }}            Ok      '\n    var COMPONENTS = [{'name': 'AddBatteryPackComponent', 'selector': 'app-add-battery-pack'},{'name': 'AddCellsComponent', 'selector': 'app-add-cells'},{'name': 'AddTestChamberComponent', 'selector': 'app-add-test-chamber'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BatteryPacksComponent', 'selector': 'app-battery-packs'},{'name': 'BatteryTestComponent', 'selector': 'app-battery-test'},{'name': 'CellsComponent', 'selector': 'app-cells'},{'name': 'CreateNewTestComponent', 'selector': 'app-create-new-test'},{'name': 'DashboardComponent', 'selector': 'app-dashboard'},{'name': 'DeviceDataComponent', 'selector': 'app-device-data'},{'name': 'DevicesComponent', 'selector': 'app-devices'},{'name': 'DevicesDefaultComponent', 'selector': 'app-devices-default'},{'name': 'DocsComponent', 'selector': 'app-docs'},{'name': 'EditBatteryPackComponent', 'selector': 'app-edit-battery-pack'},{'name': 'EditCellsComponent', 'selector': 'app-edit-cells'},{'name': 'EditTestChamberComponent', 'selector': 'app-edit-test-chamber'},{'name': 'FootNavComponent', 'selector': 'app-foot-nav'},{'name': 'HeadNavComponent', 'selector': 'app-head-nav'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'NoResultComponent', 'selector': 'app-no-result'},{'name': 'ShowAllTestsResultComponent', 'selector': 'app-show-all-tests-result'},{'name': 'ShowTestResultComponent', 'selector': 'app-show-test-result'},{'name': 'TestChambersComponent', 'selector': 'app-test-chambers'},{'name': 'ViewBatteryPacksComponent', 'selector': 'app-view-battery-packs'},{'name': 'ViewCellsComponent', 'selector': 'app-view-cells'},{'name': 'ViewTestChambersComponent', 'selector': 'app-view-test-chambers'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'EditCellsComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/EditTestChamberComponent.html":{"url":"components/EditTestChamberComponent.html","title":"component - EditTestChamberComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  EditTestChamberComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/body/devices/test-chambers/edit-test-chamber/edit-test-chamber.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n                    OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-edit-test-chamber\n            \n\n            \n                styleUrls\n                ./edit-test-chamber.component.css\n            \n\n\n\n            \n                templateUrl\n                ./edit-test-chamber.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                chamber\n                            \n                            \n                                    Optional\n                                chamberId\n                            \n                            \n                                isSaveDisabled\n                            \n                            \n                                modal\n                            \n                            \n                                    Optional\n                                modalBody\n                            \n                            \n                                    Optional\n                                modalTitle\n                            \n                            \n                                selectedUsersRead\n                            \n                            \n                                selectedUsersWrite\n                            \n                            \n                                showSpinnerButton\n                            \n                            \n                                subs\n                            \n                            \n                                users\n                            \n                            \n                                userSub\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                deleteChannel\n                            \n                            \n                                getUsers\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                save\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(_userService: UserService, _testChamberService: TestChamberService, _componentStoreService: ComponentStoreService, route: ActivatedRoute, router: Router, modalService: NgbModal)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/body/devices/test-chambers/edit-test-chamber/edit-test-chamber.component.ts:32\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        _userService\n                                                  \n                                                        \n                                                                        UserService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        _testChamberService\n                                                  \n                                                        \n                                                                        TestChamberService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        _componentStoreService\n                                                  \n                                                        \n                                                                        ComponentStoreService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        route\n                                                  \n                                                        \n                                                                        ActivatedRoute\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        modalService\n                                                  \n                                                        \n                                                                    NgbModal\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        deleteChannel\n                        \n                    \n                \n            \n            \n                \ndeleteChannel()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/body/devices/test-chambers/edit-test-chamber/edit-test-chamber.component.ts:127\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getUsers\n                        \n                    \n                \n            \n            \n                \ngetUsers(searchStr: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/body/devices/test-chambers/edit-test-chamber/edit-test-chamber.component.ts:62\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    searchStr\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        ''\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnDestroy\n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/body/devices/test-chambers/edit-test-chamber/edit-test-chamber.component.ts:163\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/body/devices/test-chambers/edit-test-chamber/edit-test-chamber.component.ts:41\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        save\n                        \n                    \n                \n            \n            \n                \nsave()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/body/devices/test-chambers/edit-test-chamber/edit-test-chamber.component.ts:90\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        chamber\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new TestChamber()\n                    \n                \n                    \n                        \n                                Defined in src/app/components/body/devices/test-chambers/edit-test-chamber/edit-test-chamber.component.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        chamberId\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string | null\n\n                    \n                \n                    \n                        \n                                Defined in src/app/components/body/devices/test-chambers/edit-test-chamber/edit-test-chamber.component.ts:28\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isSaveDisabled\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/components/body/devices/test-chambers/edit-test-chamber/edit-test-chamber.component.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        modal\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ViewChild('myModal')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/components/body/devices/test-chambers/edit-test-chamber/edit-test-chamber.component.ts:32\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        modalBody\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/components/body/devices/test-chambers/edit-test-chamber/edit-test-chamber.component.ts:29\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        modalTitle\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/components/body/devices/test-chambers/edit-test-chamber/edit-test-chamber.component.ts:30\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        selectedUsersRead\n                        \n                    \n                \n            \n                \n                    \n                        Type :         _User[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/components/body/devices/test-chambers/edit-test-chamber/edit-test-chamber.component.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        selectedUsersWrite\n                        \n                    \n                \n            \n                \n                    \n                        Type :         _User[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/components/body/devices/test-chambers/edit-test-chamber/edit-test-chamber.component.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        showSpinnerButton\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/components/body/devices/test-chambers/edit-test-chamber/edit-test-chamber.component.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        subs\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Subscription[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/components/body/devices/test-chambers/edit-test-chamber/edit-test-chamber.component.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        users\n                        \n                    \n                \n            \n                \n                    \n                        Type :         _User[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/components/body/devices/test-chambers/edit-test-chamber/edit-test-chamber.component.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        userSub\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Subscription | undefined\n\n                    \n                \n                \n                    \n                        Default value : undefined\n                    \n                \n                    \n                        \n                                Defined in src/app/components/body/devices/test-chambers/edit-test-chamber/edit-test-chamber.component.ts:24\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { ActivatedRoute, Router } from '@angular/router';\nimport { ComponentStoreService } from './../../../../../services/component-store.service';\nimport { TestChamberService } from 'src/app/services/test-chamber.service';\nimport { Subscription, switchMap } from 'rxjs';\nimport {\n  _User,\n  UserService,\n  _UserLight,\n} from './../../../../../services/user.service';\nimport { TestChamber, _TestChamber } from './../../../../../models/TestChamber';\nimport { Component, OnDestroy, OnInit, ViewChild } from '@angular/core';\nimport { NgbModal } from '@ng-bootstrap/ng-bootstrap';\n\n@Component({\n  selector: 'app-edit-test-chamber',\n  templateUrl: './edit-test-chamber.component.html',\n  styleUrls: ['./edit-test-chamber.component.css'],\n})\nexport class EditTestChamberComponent implements OnInit, OnDestroy {\n  chamber = new TestChamber();\n  selectedUsersRead: _User[] = [];\n  selectedUsersWrite: _User[] = [];\n  users: _User[] = [];\n  userSub: Subscription | undefined = undefined;\n  isSaveDisabled: boolean = false;\n  showSpinnerButton: boolean = false;\n  subs: Subscription[] = [];\n  chamberId?: string | null;\n  modalBody?: string;\n  modalTitle?: string;\n\n  @ViewChild('myModal') modal: any;\n  constructor(\n    private _userService: UserService,\n    private _testChamberService: TestChamberService,\n    private _componentStoreService: ComponentStoreService,\n    private route: ActivatedRoute,\n    private router: Router,\n    private modalService: NgbModal\n  ) {}\n  ngOnInit(): void {\n    const os$ = this.route.paramMap.pipe(\n      switchMap((params) => {\n        this.chamberId = params.get('chamberId');\n        return this._testChamberService.getChambers(this.chamberId);\n      })\n    );\n    const sub = os$.subscribe((chambers: any) => {\n      this.chamber = chambers[0];\n      this.selectedUsersRead = [];\n      this.selectedUsersWrite = [];\n      this.chamber.assignedUsers?.forEach((user: _UserLight) => {\n        if (user.accessType === 'read') {\n          this.selectedUsersRead.push({ _id: user._id, name: user.name });\n        } else if (user.accessType === 'write') {\n          this.selectedUsersWrite.push({ _id: user._id, name: user.name });\n        }\n      });\n    });\n    this.subs.push(sub);\n  }\n  getUsers(searchStr: string = '') {\n    this.userSub?.unsubscribe();\n    this.users = [];\n    searchStr = searchStr.trim();\n    if (searchStr.length > 0) {\n      this.userSub = this._userService\n        .getUsers(searchStr)\n        .subscribe((users: _User[]) => {\n          //console.log(this.selectedUser)\n          //remove existing users from search string\n          this.selectedUsersRead?.forEach((user: _User) => {\n            let remIndex = users.findIndex((u) => u._id == user._id);\n            if (remIndex !== -1) {\n              users.splice(remIndex, 1);\n            }\n          });\n          this.selectedUsersWrite?.forEach((user: _User) => {\n            let remIndex = users.findIndex((u) => u._id == user._id);\n            if (remIndex !== -1) {\n              users.splice(remIndex, 1);\n            }\n          });\n          this.users = users;\n        });\n    } else {\n      this.users = [];\n    }\n  }\n  save() {\n    this.showSpinnerButton = true;\n    let assignedUsers: _UserLight[] = [];\n    this.selectedUsersRead.forEach((user: _User) => {\n      assignedUsers.push({ _id: user._id, accessType: 'read' });\n    });\n    this.selectedUsersWrite.forEach((user: _User) => {\n      assignedUsers.push({ _id: user._id, accessType: 'write' });\n    });\n\n    this.chamber.assignedUsers = assignedUsers;\n    const sub = this._testChamberService\n      .updateTestChamber(this.chamber)\n      .subscribe({\n        next: (v) => {\n          console.log(v);\n          this.showSpinnerButton = false;\n          this._componentStoreService.sendToastMsg({\n            msg: 'Chamber successfully updated.',\n            color: 'green',\n          });\n          this.router.navigate(['../../view'], {\n            relativeTo: this.route,\n            skipLocationChange: true,\n          });\n        },\n        error: (e) => {\n          console.error(e);\n          this.showSpinnerButton = false;\n          this._componentStoreService.sendToastMsg({\n            msg: 'Chamber update failed!',\n            color: 'red',\n          });\n        },\n      });\n    this.subs.push(sub);\n  }\n  deleteChannel() {\n    this.modalTitle = 'Alert';\n    this.modalBody =\n      'Are you sure you want to mark this chamber for deletion? Once done, no one would have access to it.';\n    this.modalService.open(this.modal, { centered: true }).result.then(\n      (result) => {\n        //console.log('accepted');\n        const sub = this._testChamberService\n          .deleteTestChamber(this.chamberId as any)\n          .subscribe({\n            next: (res) => {\n              this._componentStoreService.sendToastMsg({\n                msg: 'Chamber successfully deleted!',\n                color: 'green',\n                timeOut: 10000,\n              });\n              this.router.navigate(['../../view'], {\n                relativeTo: this.route,\n                skipLocationChange: true,\n              });\n            },\n            error: (err) => {\n              console.log(err);\n              this._componentStoreService.sendToastMsg({\n                msg: 'Something wrong occured!',\n                color: 'red',\n                timeOut: 10000,\n              });\n            },\n          });\n      },\n      (reason) => {\n        //console.log('closed');\n      }\n    );\n  }\n  ngOnDestroy(): void {\n    this.subs.forEach((sub) => sub.unsubscribe());\n    this.userSub?.unsubscribe();\n  }\n}\n\n    \n\n    \n        \n  \n    \n      Back\n    \n  \n\n\n  \n    \n      \n        Edit the Test Chamber\n        \n          \n          delete_forever\n          \n      \n    \n    \n      \n        \n          \n            Chmaber Id\n          \n          \n            \n          \n          \n            Unique identifier, generates automatically.\n          \n        \n\n        \n          \n            Chamber Name\n          \n          \n            \n          \n          \n            Give a name to your chamber, should be unique among the chambers\n              that you have access to.\n          \n        \n\n        \n          \n            Chamber controller\n          \n          \n            \n          \n          \n            About the electronic controller that is used to control the\n              chamber.\n          \n        \n\n        \n          \n            Version of Chamber/Controller\n          \n          \n            \n          \n          \n            If you want to maintain a track record of you chamber or\n              controoler's version.\n          \n        \n\n        \n          \n            About\n          \n          \n            \n          \n        \n        \n          \n            Maximum Temperature\n          \n          \n            \n          \n          \n            in °C. It gives the idea on how much max temperature your chamber\n              can produce or withstand.\n          \n        \n        \n          \n            Minimum Temperature\n          \n          \n            \n          \n          \n            in °C. It gives the idea on how much min temperature your chamber\n              can produce or withstand.\n          \n        \n\n        \n          \n            Location\n          \n          \n            \n          \n          \n            \n              Gives an idea about the physical location of your chamber.\n          \n        \n\n        \n          \n            Max no. of Channels\n          \n          \n            \n          \n          \n            \n              How many independent channels that your chamber support. Each\n              channel can hold a different set of experiment.\n          \n        \n\n        \n          \n            Assigned Users\n              read\n            \n          \n          \n            \n            \n          \n\n          \n            User can only view it's experiment results.\n          \n        \n        \n          \n            Assigned Users\n              write\n            \n          \n          \n            \n            \n          \n\n          \n            User can view it's experiment results and also can set up an\n              experiment on it.\n          \n        \n\n        \n          \n            \n              Save\n              \n                Loading...\n              \n            \n          \n        \n      \n    \n  \n\n\n  \n    {{ modalTitle }}\n    \n      X\n    \n  \n  {{ modalBody }}\n  \n    \n      Ok\n    \n  \n\n    \n\n    \n                \n                    ./edit-test-chamber.component.css\n                \n                .card {\n  margin-top: 20px;\n}\n.card-body .row {\n  margin: 10px 0px;\n}\ntextarea {\n  resize: none;\n}\n\n/* Chrome, Safari, Edge, Opera */\ninput::-webkit-outer-spin-button,\ninput::-webkit-inner-spin-button {\n  -webkit-appearance: none;\n  margin: 0;\n}\n.required-ast::after {\n  content: \" *\";\n  color: red;\n}\n.delete {\n  margin: 0px 2px;\n}\n.delete:hover {\n  color: red;\n  cursor: pointer;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            Back                          Edit the Test Chamber                            delete_forever                                                            Chmaber Id                                                                Unique identifier, generates automatically.                                                Chamber Name                                                                Give a name to your chamber, should be unique among the chambers              that you have access to.                                                Chamber controller                                                                About the electronic controller that is used to control the              chamber.                                                Version of Chamber/Controller                                                                If you want to maintain a track record of you chamber or              controoler\\'s version.                                                About                                                                                Maximum Temperature                                                                in °C. It gives the idea on how much max temperature your chamber              can produce or withstand.                                                Minimum Temperature                                                                in °C. It gives the idea on how much min temperature your chamber              can produce or withstand.                                                Location                                                                              Gives an idea about the physical location of your chamber.                                                Max no. of Channels                                                                              How many independent channels that your chamber support. Each              channel can hold a different set of experiment.                                                Assigned Users              read                                                                                        User can only view it\\'s experiment results.                                                Assigned Users              write                                                                                        User can view it\\'s experiment results and also can set up an              experiment on it.                                                              Save                              Loading...                                                              {{ modalTitle }}          X        {{ modalBody }}            Ok      '\n    var COMPONENTS = [{'name': 'AddBatteryPackComponent', 'selector': 'app-add-battery-pack'},{'name': 'AddCellsComponent', 'selector': 'app-add-cells'},{'name': 'AddTestChamberComponent', 'selector': 'app-add-test-chamber'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BatteryPacksComponent', 'selector': 'app-battery-packs'},{'name': 'BatteryTestComponent', 'selector': 'app-battery-test'},{'name': 'CellsComponent', 'selector': 'app-cells'},{'name': 'CreateNewTestComponent', 'selector': 'app-create-new-test'},{'name': 'DashboardComponent', 'selector': 'app-dashboard'},{'name': 'DeviceDataComponent', 'selector': 'app-device-data'},{'name': 'DevicesComponent', 'selector': 'app-devices'},{'name': 'DevicesDefaultComponent', 'selector': 'app-devices-default'},{'name': 'DocsComponent', 'selector': 'app-docs'},{'name': 'EditBatteryPackComponent', 'selector': 'app-edit-battery-pack'},{'name': 'EditCellsComponent', 'selector': 'app-edit-cells'},{'name': 'EditTestChamberComponent', 'selector': 'app-edit-test-chamber'},{'name': 'FootNavComponent', 'selector': 'app-foot-nav'},{'name': 'HeadNavComponent', 'selector': 'app-head-nav'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'NoResultComponent', 'selector': 'app-no-result'},{'name': 'ShowAllTestsResultComponent', 'selector': 'app-show-all-tests-result'},{'name': 'ShowTestResultComponent', 'selector': 'app-show-test-result'},{'name': 'TestChambersComponent', 'selector': 'app-test-chambers'},{'name': 'ViewBatteryPacksComponent', 'selector': 'app-view-battery-packs'},{'name': 'ViewCellsComponent', 'selector': 'app-view-cells'},{'name': 'ViewTestChambersComponent', 'selector': 'app-view-test-chambers'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'EditTestChamberComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/FileField.html":{"url":"interfaces/FileField.html","title":"interface - FileField","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  FileField\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/FormFields.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            template_width\n                                        \n                                \n                                \n                                        \n                                            type\n                                        \n                                \n                                \n                                        \n                                            value\n                                        \n                                \n                                \n                                        \n                                            visibility\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        template_width\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        template_width:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        type:     \n\n                                    \n                                \n\n\n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        value\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        value:         DriveCycle | null\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         DriveCycle | null\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        visibility\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        visibility:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { DriveCycle } from 'src/app/models/DriveCycle';\nexport interface SelectField {\n  value: any;\n  type: string;\n  id: number;\n  options: string[];\n  visibility: boolean;\n  template_width: number;\n}\nexport interface TextField {\n  type: 'text';\n  id: number;\n  value: 'at' | 'for' | 'Run' | 'until' | 'volt.' | 'seconds.';\n  visibility: boolean;\n  template_width: number;\n}\nexport interface InputField {\n  type: 'input';\n  id: number;\n  value: any;\n  visibility: boolean;\n  template_width: number;\n}\n\nexport interface FileField {\n  type: 'file';\n  id: number;\n  value: DriveCycle | null;\n  visibility: boolean;\n  template_width: number;\n}\n\nexport interface TestFormat {\n  fields: (SelectField | TextField | InputField | FileField)[];\n  name: string;\n  value: number;\n  multiplier: number;\n  ambTemp: number;\n}\n\nconst testFormats: TestFormat[] = [\n  {\n    name: 'Do this for this long.',\n    value: 1,\n    fields: [\n      {\n        id: 1,\n        type: 'select',\n        options: ['Charge', 'Discharge', 'Rest', 'Hold'],\n        value: 'Charge',\n        visibility: true,\n        template_width: 2,\n      } as SelectField,\n      {\n        id: 2,\n        type: 'text',\n        value: 'at',\n        visibility: true,\n        template_width: 1,\n      } as TextField,\n      {\n        id: 3,\n        type: 'input',\n        value: null,\n        visibility: true,\n        template_width: 2,\n      } as InputField,\n      {\n        id: 4,\n        type: 'select',\n        options: ['C', 'A', 'W'],\n        value: 'C',\n        visibility: true,\n        template_width: 2,\n      } as SelectField,\n      {\n        id: 5,\n        type: 'text',\n        value: 'for',\n        visibility: true,\n        template_width: 1,\n      } as TextField,\n      {\n        id: 6,\n        type: 'input',\n        value: null,\n        visibility: true,\n        template_width: 2,\n      } as InputField,\n      {\n        id: 7,\n        type: 'select',\n        options: ['hours.', 'minutes.', 'seconds.'],\n        value: 'hours.',\n        visibility: true,\n        template_width: 2,\n      } as SelectField,\n    ],\n    multiplier: 1,\n    ambTemp: 25,\n  },\n  {\n    name: 'Do this until this happen.',\n    value: 2,\n    fields: [\n      {\n        id: 1,\n        type: 'select',\n        options: ['Charge', 'Discharge'],\n        value: 'Charge',\n        visibility: true,\n        template_width: 2,\n      } as SelectField,\n      {\n        id: 2,\n        type: 'text',\n        value: 'at',\n        visibility: true,\n        template_width: 1,\n      } as SelectField,\n      {\n        id: 3,\n        type: 'input',\n        value: null,\n        visibility: true,\n        template_width: 2,\n      } as InputField,\n      {\n        id: 4,\n        type: 'select',\n        options: ['C', 'A', 'W'],\n        value: 'C',\n        visibility: true,\n        template_width: 2,\n      } as SelectField,\n      {\n        id: 5,\n        type: 'text',\n        value: 'until',\n        visibility: true,\n        template_width: 1,\n      } as TextField,\n      {\n        id: 6,\n        type: 'input',\n        value: null,\n        visibility: true,\n        template_width: 2,\n      } as InputField,\n      {\n        id: 7,\n        type: 'text',\n        value: 'volt.',\n        visibility: true,\n        template_width: 2,\n      } as TextField,\n    ],\n    multiplier: 1,\n    ambTemp: 25,\n  },\n  {\n    name: 'Run X.',\n    value: 3,\n    fields: [\n      {\n        id: 1,\n        type: 'text',\n        value: 'Run',\n        visibility: true,\n        template_width: 1,\n      } as TextField,\n      {\n        id: 2,\n        type: 'file',\n        value: null,\n        visibility: true,\n        template_width: 4,\n      } as FileField,\n      {\n        id: 3,\n        type: 'text',\n        value: 'for',\n        visibility: true,\n        template_width: 1,\n      } as TextField,\n      {\n        id: 4,\n        type: 'input',\n        value: null,\n        visibility: true,\n        template_width: 3,\n      } as InputField,\n      {\n        id: 3,\n        type: 'select',\n        options: ['hours.', 'minutes.', 'seconds.'],\n        value: 'hours.',\n        visibility: true,\n        template_width: 2,\n      } as SelectField,\n    ],\n    multiplier: 1,\n    ambTemp: 25,\n  },\n];\nexport interface ChannelFields {\n  channelNumber: number | undefined;\n  cellID: string | undefined;\n  testFormats: TestFormat[];\n  allTestFormat: TestFormat[][];\n  isRemoveRowButtonDisabled: boolean;\n  isAddRowButtonDisabled: boolean;\n  overallRowMultiplier: number;\n  availableChannels: number[] | undefined;\n}\nexport interface PayLoad {\n  channels: ChannelFields[] | undefined;\n  isConAmTe: boolean;\n  ambTemp: number;\n}\n\nexport { testFormats };\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/FootNavComponent.html":{"url":"components/FootNavComponent.html","title":"component - FootNavComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  FootNavComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/footer/foot-nav/foot-nav.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-foot-nav\n            \n\n            \n                styleUrls\n                ./foot-nav.component.css\n            \n\n\n\n            \n                templateUrl\n                ./foot-nav.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                developer\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/components/footer/foot-nav/foot-nav.component.ts:14\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/footer/foot-nav/foot-nav.component.ts:17\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        developer\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n    image: 'https://github.com/infinity-engine.png',\n    url: 'https://github.com/infinity-engine',\n    role: 'Developer',\n    name: 'Koushik Samanta',\n  }\n                    \n                \n                    \n                        \n                                Defined in src/app/components/footer/foot-nav/foot-nav.component.ts:9\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-foot-nav',\n  templateUrl: './foot-nav.component.html',\n  styleUrls: ['./foot-nav.component.css'],\n})\nexport class FootNavComponent implements OnInit {\n  developer = {\n    image: 'https://github.com/infinity-engine.png',\n    url: 'https://github.com/infinity-engine',\n    role: 'Developer',\n    name: 'Koushik Samanta',\n  };\n  constructor() {}\n\n  ngOnInit(): void {\n  }\n}\n\n    \n\n    \n        \n  \n    \n      \n        \n          \n            \n          \n        \n        \n          \n            Intelligent Battery Management System, which is self learning,\n              cloud integrated and data driven. Additional platform for\n              performing and monitering batteries with cloud computations.\n            \n          \n        \n      \n      \n        \n          Useful links\n        \n        \n          \n            \n              Home \n            \n          \n        \n        \n          \n            \n              \n                Dashboard\n              \n            \n          \n        \n        \n          \n            \n              Devices\n              \n            \n          \n        \n        \n          \n            \n              Battery Test\n              \n            \n          \n        \n        \n          \n            \n              Documentation\n              \n            \n          \n        \n      \n      \n        \n          Social handlers\n        \n        \n          \n            \n          \n          \n            \n          \n          \n            \n          \n        \n        \n          \n            e_mobilty@iitg.ac.in\n          \n        \n        \n          \n            \n          \n          \n            \n              \n                {{ developer.name }},\n              \n            \n            \n              \n                {{ developer.role }}\n              \n            \n          \n        \n      \n    \n    \n      &copy; IIT Guwahati, E-Mobility Laboratory\n    \n  \n\n\n    \n\n    \n                \n                    ./foot-nav.component.css\n                \n                .footer {\n  background-color: rgba(119, 136, 153, 0.238);\n  font-family: ui-monospace, SFMono-Regular, SF Mono, Menlo, Consolas,\n    Liberation Mono;\n}\n.head {\n  margin-bottom: 20px;\n  color: rgb(6, 20, 45);\n  padding-left: 0px;\n  margin-top: 20px;\n}\n\n.active-link {\n  color: gray !important;\n}\n\n.row a {\n  padding-left: 2px;\n  text-decoration: none;\n  font-size: small;\n  color: rgb(63, 53, 53);\n}\n.item {\n  position: relative;\n}\n.bottom-line {\n  position: absolute;\n  left: 0;\n  bottom: 0;\n  border-bottom: 1px solid rgb(7, 127, 213);\n  transform: scale(0);\n  transition: transform 150ms linear;\n  transform-origin: center;\n  width: 100%;\n}\n.row a:hover .bottom-line {\n  transform: scale(1);\n}\n.copyright {\n  padding-top: 20px;\n  text-align: center;\n}\n.social-container a {\n  font-size: 20px;\n}\n.social-container a:hover {\n  color: rgb(38, 49, 146);\n}\n#logo {\n  height: 50px;\n  width: auto;\n}\n#description {\n  font-size: 10px;\n  text-align: justify;\n}\n.logo {\n  text-align: center;\n}\n\n.user-picture {\n  display: inline-block;\n  width: 30px;\n  height: 30px;\n  border-radius: 50%;\n  background-repeat: no-repeat;\n  background-position: center center;\n  background-size: cover;\n  vertical-align: middle;\n}\n\n.developer-info:hover small {\n  color: brown;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                                                          Intelligent Battery Management System, which is self learning,              cloud integrated and data driven. Additional platform for              performing and monitering batteries with cloud computations.                                                            Useful links                                                    Home                                                                                           Dashboard                                                                                        Devices                                                                                        Battery Test                                                                                        Documentation                                                                          Social handlers                                                                                                                                                      e_mobilty@iitg.ac.in                                                                                                              {{ developer.name }},                                                                    {{ developer.role }}                                                                © IIT Guwahati, E-Mobility Laboratory      '\n    var COMPONENTS = [{'name': 'AddBatteryPackComponent', 'selector': 'app-add-battery-pack'},{'name': 'AddCellsComponent', 'selector': 'app-add-cells'},{'name': 'AddTestChamberComponent', 'selector': 'app-add-test-chamber'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BatteryPacksComponent', 'selector': 'app-battery-packs'},{'name': 'BatteryTestComponent', 'selector': 'app-battery-test'},{'name': 'CellsComponent', 'selector': 'app-cells'},{'name': 'CreateNewTestComponent', 'selector': 'app-create-new-test'},{'name': 'DashboardComponent', 'selector': 'app-dashboard'},{'name': 'DeviceDataComponent', 'selector': 'app-device-data'},{'name': 'DevicesComponent', 'selector': 'app-devices'},{'name': 'DevicesDefaultComponent', 'selector': 'app-devices-default'},{'name': 'DocsComponent', 'selector': 'app-docs'},{'name': 'EditBatteryPackComponent', 'selector': 'app-edit-battery-pack'},{'name': 'EditCellsComponent', 'selector': 'app-edit-cells'},{'name': 'EditTestChamberComponent', 'selector': 'app-edit-test-chamber'},{'name': 'FootNavComponent', 'selector': 'app-foot-nav'},{'name': 'HeadNavComponent', 'selector': 'app-head-nav'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'NoResultComponent', 'selector': 'app-no-result'},{'name': 'ShowAllTestsResultComponent', 'selector': 'app-show-all-tests-result'},{'name': 'ShowTestResultComponent', 'selector': 'app-show-test-result'},{'name': 'TestChambersComponent', 'selector': 'app-test-chambers'},{'name': 'ViewBatteryPacksComponent', 'selector': 'app-view-battery-packs'},{'name': 'ViewCellsComponent', 'selector': 'app-view-cells'},{'name': 'ViewTestChambersComponent', 'selector': 'app-view-test-chambers'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'FootNavComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/HeadNavComponent.html":{"url":"components/HeadNavComponent.html","title":"component - HeadNavComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  HeadNavComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/header/head-nav/head-nav.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n                    OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-head-nav\n            \n\n            \n                styleUrls\n                ./head-nav.component.css\n            \n\n\n\n            \n                templateUrl\n                ./head-nav.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                authUser\n                            \n                            \n                                    Optional\n                                sub\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                logIn\n                            \n                            \n                                logOut\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(auth: AuthService, location: Location, _user: UserService)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/header/head-nav/head-nav.component.ts:15\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        auth\n                                                  \n                                                        \n                                                                    AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        location\n                                                  \n                                                        \n                                                                        Location\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        _user\n                                                  \n                                                        \n                                                                        UserService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        logIn\n                        \n                    \n                \n            \n            \n                \nlogIn()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/header/head-nav/head-nav.component.ts:51\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        logOut\n                        \n                    \n                \n            \n            \n                \nlogOut()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/header/head-nav/head-nav.component.ts:54\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnDestroy\n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/header/head-nav/head-nav.component.ts:57\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/header/head-nav/head-nav.component.ts:22\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        authUser\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                    \n                        \n                                Defined in src/app/components/header/head-nav/head-nav.component.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        sub\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Subscription\n\n                    \n                \n                    \n                        \n                                Defined in src/app/components/header/head-nav/head-nav.component.ts:14\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { UserService } from './../../../services/user.service';\nimport { of, Subscription, switchMap, Observable } from 'rxjs';\nimport { Location } from '@angular/common';\nimport { Component, OnInit, OnDestroy } from '@angular/core';\nimport { AuthService } from '@auth0/auth0-angular';\nimport { User } from '@auth0/auth0-angular';\n\n@Component({\n  selector: 'app-head-nav',\n  templateUrl: './head-nav.component.html',\n  styleUrls: ['./head-nav.component.css'],\n})\nexport class HeadNavComponent implements OnInit, OnDestroy {\n  sub?: Subscription;\n  authUser?: any;\n  constructor(\n    private auth: AuthService,\n    private location: Location,\n    private _user: UserService\n  ) {}\n\n  ngOnInit(): void {\n    const os$:Observable = this.auth.user$.pipe(\n      switchMap((firstResponse: any) => {\n        this.authUser = firstResponse;\n        if (this.authUser) {\n          return this._user.verifyUser(this.authUser as any).pipe(\n            switchMap((secondResponse: any) => {\n              if (secondResponse) {\n                return of('Exists on API DB');\n              } else {\n                return this._user.createUser(this.authUser as any).pipe(switchMap((thirdResponse:any)=>{\n                  if (thirdResponse){\n                    return of(\"Inserted in API DB\")\n                  }else{\n                    return of(\"Inset failed of API DB\")\n                  }\n                }))\n              }\n            })\n          );\n        } else {\n          return of(null);\n        }\n      })\n    );\n    this.sub = os$.subscribe(msg =>{\n      console.log(\"User: \",msg)\n    })\n  }\n  logIn(){\n    this.auth.loginWithRedirect({redirect_uri:\"https://www.iitg.ac.in/e_mobility/i-bms/\"});\n  }\n  logOut() {\n    this.auth.logout({returnTo:\"https://www.iitg.ac.in/e_mobility/i-bms/\"});\n  }\n  ngOnDestroy(): void {\n    this.sub?.unsubscribe();\n  }\n}\n\n    \n\n    \n        \n  \n    \n      \n        \n          \n            \n              \n              \n              \n              \n              \n              \n            \n            \n              \n              \n              \n              \n            \n          \n        \n      \n      \n        \n      \n      \n        \n          \n            Dashboard\n          \n          \n            Devices\n            \n              \n                Test Chambers\n              \n              \n                Cells\n              \n              \n                Battery Packs\n              \n            \n          \n          \n            Battery Test\n          \n          \n            Documentation\n          \n          \n            \n              \n            \n            \n              \n                {{ user.name }}\n                {{ user.email }}\n              \n              \n                \n              \n              \n                Your profile\n              \n\n              \n                Log out\n              \n            \n          \n          \n            \n              \n                Log in\n              \n            \n          \n        \n      \n    \n  \n\n\n    \n\n    \n                \n                    ./head-nav.component.css\n                \n                #swoosh {\n  animation: rotation 1s ease-in-out alternate 2;\n  transform-origin: center;\n}\n\n@keyframes rotation {\n  from {\n    transform: rotate(0deg);\n  }\n\n  to {\n    transform: rotate(360deg);\n  }\n}\n\n.nav-link {\n  color: rgb(36, 41, 47);\n}\n\n.nav-link:hover {\n  color: rgba(36, 41, 47, 0.651);\n}\n\n.active-link {\n  color: rgb(46, 109, 185);\n}\n\n.dropdown-toggle::after {\n  content: none;\n}\n\n.user-picture {\n  display: inline-block;\n  width: 30px;\n  height: 30px;\n  border-radius: 50%;\n  background-repeat: no-repeat;\n  background-position: center center;\n  background-size: cover;\n  vertical-align: middle;\n}\n.user-picture:hover {\n  box-shadow: 0 4px 8px 0 rgba(0, 0, 0, 0.2), 0 6px 20px 0 rgba(0, 0, 0, 0.19);\n}\n.dropdown-menu {\n  box-shadow: 0 4px 8px 0 rgba(0, 0, 0, 0.2), 0 6px 20px 0 rgba(0, 0, 0, 0.19);\n}\n.user-info:hover,\n.user-info:active {\n  background-color: transparent;\n}\n.dropdown-profile:active {\n  border: none;\n}\n#log-out-btn {\n  cursor: pointer;\n}\n#device-dropdown-nav-item:hover > #device-dropdown-menu {\n  display: block;\n}\n#device-dropdown-menu > li:hover {\n  cursor: pointer;\n}\n\n.navbar-container {\n  position: sticky;\n  top: 0px;\n  width: 100%;\n  z-index: 4;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                                                                                                                                                                                                                                                                          Dashboard                                Devices                                          Test Chambers                                            Cells                                            Battery Packs                                                          Battery Test                                Documentation                                                                                                    {{ user.name }}                {{ user.email }}                                                                                        Your profile                                            Log out                                                                                        Log in                                                        '\n    var COMPONENTS = [{'name': 'AddBatteryPackComponent', 'selector': 'app-add-battery-pack'},{'name': 'AddCellsComponent', 'selector': 'app-add-cells'},{'name': 'AddTestChamberComponent', 'selector': 'app-add-test-chamber'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BatteryPacksComponent', 'selector': 'app-battery-packs'},{'name': 'BatteryTestComponent', 'selector': 'app-battery-test'},{'name': 'CellsComponent', 'selector': 'app-cells'},{'name': 'CreateNewTestComponent', 'selector': 'app-create-new-test'},{'name': 'DashboardComponent', 'selector': 'app-dashboard'},{'name': 'DeviceDataComponent', 'selector': 'app-device-data'},{'name': 'DevicesComponent', 'selector': 'app-devices'},{'name': 'DevicesDefaultComponent', 'selector': 'app-devices-default'},{'name': 'DocsComponent', 'selector': 'app-docs'},{'name': 'EditBatteryPackComponent', 'selector': 'app-edit-battery-pack'},{'name': 'EditCellsComponent', 'selector': 'app-edit-cells'},{'name': 'EditTestChamberComponent', 'selector': 'app-edit-test-chamber'},{'name': 'FootNavComponent', 'selector': 'app-foot-nav'},{'name': 'HeadNavComponent', 'selector': 'app-head-nav'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'NoResultComponent', 'selector': 'app-no-result'},{'name': 'ShowAllTestsResultComponent', 'selector': 'app-show-all-tests-result'},{'name': 'ShowTestResultComponent', 'selector': 'app-show-test-result'},{'name': 'TestChambersComponent', 'selector': 'app-test-chambers'},{'name': 'ViewBatteryPacksComponent', 'selector': 'app-view-battery-packs'},{'name': 'ViewCellsComponent', 'selector': 'app-view-cells'},{'name': 'ViewTestChambersComponent', 'selector': 'app-view-test-chambers'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'HeadNavComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/HomeComponent.html":{"url":"components/HomeComponent.html","title":"component - HomeComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  HomeComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/body/home/home.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-home\n            \n\n            \n                styleUrls\n                ./home.component.css\n            \n\n\n\n            \n                templateUrl\n                ./home.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(location: Location)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/body/home/home.component.ts:54\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        location\n                                                  \n                                                        \n                                                                        Location\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/body/home/home.component.ts:57\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Location } from '@angular/common';\nimport { Component, OnInit } from '@angular/core';\n\nclass Dot {\n  // Initialize the dot: connect sprite and track properties with supplied SVG elements\n  constructor(public sprite: any, public track: any) {\n    this.sprite = document.getElementById(sprite);\n    this.track = document.getElementById(track);\n  }\n\n  // Put the dot on its spot\n  move(u: any) {\n    let p = this.track.getPointAtLength(u * this.track.getTotalLength());\n    this.sprite.setAttribute('transform', `translate(${p.x}, ${p.y})`);\n  }\n}\nclass Anim {\n  public duration: any;\n  public tZero: any;\n\n  constructor(public dot: any) {\n    this.dot = dot;\n  }\n  start(duration: any) {\n    this.duration = duration;\n    this.tZero = Date.now();\n    requestAnimationFrame(() => this.run());\n  }\n\n  run() {\n    let u = Math.min((Date.now() - this.tZero) / this.duration, 1);\n\n    if (u  this.run());\n    } else {\n      this.onFinish();\n    }\n\n    this.dot.move(u);\n  }\n\n  onFinish() {\n    // Schedule the animation to restart\n    setTimeout(() => this.start(this.duration), 10);\n  }\n}\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css'],\n})\nexport class HomeComponent implements OnInit {\n  constructor(private location: Location) {}\n\n  ngOnInit(): void {\n    let anim_time = 4000;\n    let dot1 = new Dot('Dot_1', 'Path_1');\n    let anim_gen_1 = new Anim(dot1);\n    anim_gen_1.start(anim_time);\n\n    let dot2 = new Dot('Dot_2', 'Path_2');\n    let anim_gen_2 = new Anim(dot2);\n    anim_gen_2.start(anim_time);\n\n    let dot3 = new Dot('Dot_3', 'Path_3');\n    let anim_gen_3 = new Anim(dot3);\n    anim_gen_3.start(anim_time);\n\n    let dot4 = new Dot('Dot_4', 'Path_4');\n    let anim_gen_4 = new Anim(dot4);\n    anim_gen_4.start(anim_time);\n\n    //change the location from /home to home just to keep the location static through out the app\n    if (window.location.hostname != 'localhost') {\n      console.log(window.location.hostname);\n      this.location.replaceState('./'); //on prod\n    }\n  }\n}\n\n    \n\n    \n        \n    \n        \n            \n                Intelligent Battery Management System\n                Connect your device's BMS to leverage the power and speed of cloud based AI/ML.\n                Connect a device\n            \n\n        \n        \n            \n                \n                    \n                        \n                        \n\n\n\n\n                        \n                        \n\n\n\n\n                        \n                        \n                        \n                        \n                            \n                            \n                            \n                        \n                        \n                            \n                            \n                        \n                        \n                            \n                            \n                            \n                            \n                            \n                        \n\n\n\n\n                        \n                        \n\n\n\n\n                        \n                        \n                        \n                        \n                        \n                        \n                        \n\n\n\n\n                        \n                        \n\n\n\n\n                        \n                        \n                        \n\n\n\n\n                        \n                        \n\n\n\n                        \n                        \n                    \n                \n                \n                    \n                        \n                    \n                    \n                        \n                    \n                    \n                        \n                    \n                    \n                        \n                    \n                    \n                        \n                    \n                    \n                        \n                    \n                    \n                        \n                    \n                    \n                    \n                    \n                    \n                \n            \n\n        \n    \n    \n        \n        \n        \n            \n                Monitor crucial parameters of the battery pack on the go\n                \n                    Voltage\n                    Current\n                    Temperature\n                    State of Charge\n                    State of Health\n                \n            \n        \n    \n    \n        \n            \n                Carry out experiments\n                If you have a testing facility then connect to perform different type of tests on you batteries.\n                    Analyze the date using state of the art algorithms.\n                \n                    Pulse Charging\n                    Cyclic Charge/Discharge\n                    Drive cycle analysis\n                \n            \n        \n        \n        \n    \n\n\n    \n\n    \n                \n                    ./home.component.css\n                \n                h2,h3{\n    font-family: Helvetica,sans-serif;\n}\n.title>.intro-img{\n    text-align: center;\n}\n.intro-text{\n    display: flex;\n    align-items: center;\n}\n.row{\n    padding-top: 10%;\n}\n.subtitle-1>.intro-img{\n    height: 300px;\n    background-image: url('/e_mobility/i-bms/assets/dashboard_img.png');\n    background-repeat: no-repeat;\n    background-size: contain;\n    background-position: center;\n}\n.ad-list{\n    list-style-type: none;\n    text-align: left;\n    padding: 0px;\n}\n.ad-list>li{\n    padding: 10px;\n    font-size: 20px;\n}\n.ad-list li::before{\n    content: '✓';\n    font-weight: bold;\n    color: red;\n    padding: 5px;\n}\n\n.subtitle-2>.intro-img{\n    height: 300px;\n    background-image: url('/e_mobility/i-bms/assets/test_chamber_current_img.png');\n    background-repeat: no-repeat;\n    background-size: contain;\n    background-position: center;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                        Intelligent Battery Management System                Connect your device\\'s BMS to leverage the power and speed of cloud based AI/ML.                Connect a deviceonitor crucial parameters of the battery pack on the go                                    Voltage                    Current                    Temperature                    State of Charge                    State of Health                                                                                Carry out experiments                If you have a testing facility then connect to perform different type of tests on you batteries.                    Analyze the date using state of the art algorithms.                                    Pulse Charging                    Cyclic Charge/Discharge                    Drive cycle analysis                                                        '\n    var COMPONENTS = [{'name': 'AddBatteryPackComponent', 'selector': 'app-add-battery-pack'},{'name': 'AddCellsComponent', 'selector': 'app-add-cells'},{'name': 'AddTestChamberComponent', 'selector': 'app-add-test-chamber'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BatteryPacksComponent', 'selector': 'app-battery-packs'},{'name': 'BatteryTestComponent', 'selector': 'app-battery-test'},{'name': 'CellsComponent', 'selector': 'app-cells'},{'name': 'CreateNewTestComponent', 'selector': 'app-create-new-test'},{'name': 'DashboardComponent', 'selector': 'app-dashboard'},{'name': 'DeviceDataComponent', 'selector': 'app-device-data'},{'name': 'DevicesComponent', 'selector': 'app-devices'},{'name': 'DevicesDefaultComponent', 'selector': 'app-devices-default'},{'name': 'DocsComponent', 'selector': 'app-docs'},{'name': 'EditBatteryPackComponent', 'selector': 'app-edit-battery-pack'},{'name': 'EditCellsComponent', 'selector': 'app-edit-cells'},{'name': 'EditTestChamberComponent', 'selector': 'app-edit-test-chamber'},{'name': 'FootNavComponent', 'selector': 'app-foot-nav'},{'name': 'HeadNavComponent', 'selector': 'app-head-nav'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'NoResultComponent', 'selector': 'app-no-result'},{'name': 'ShowAllTestsResultComponent', 'selector': 'app-show-all-tests-result'},{'name': 'ShowTestResultComponent', 'selector': 'app-show-test-result'},{'name': 'TestChambersComponent', 'selector': 'app-test-chambers'},{'name': 'ViewBatteryPacksComponent', 'selector': 'app-view-battery-packs'},{'name': 'ViewCellsComponent', 'selector': 'app-view-cells'},{'name': 'ViewTestChambersComponent', 'selector': 'app-view-test-chambers'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'HomeComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/InputField.html":{"url":"interfaces/InputField.html","title":"interface - InputField","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  InputField\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/FormFields.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            template_width\n                                        \n                                \n                                \n                                        \n                                            type\n                                        \n                                \n                                \n                                        \n                                            value\n                                        \n                                \n                                \n                                        \n                                            visibility\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        template_width\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        template_width:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        type:     \n\n                                    \n                                \n\n\n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        value\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        value:         any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         any\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        visibility\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        visibility:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { DriveCycle } from 'src/app/models/DriveCycle';\nexport interface SelectField {\n  value: any;\n  type: string;\n  id: number;\n  options: string[];\n  visibility: boolean;\n  template_width: number;\n}\nexport interface TextField {\n  type: 'text';\n  id: number;\n  value: 'at' | 'for' | 'Run' | 'until' | 'volt.' | 'seconds.';\n  visibility: boolean;\n  template_width: number;\n}\nexport interface InputField {\n  type: 'input';\n  id: number;\n  value: any;\n  visibility: boolean;\n  template_width: number;\n}\n\nexport interface FileField {\n  type: 'file';\n  id: number;\n  value: DriveCycle | null;\n  visibility: boolean;\n  template_width: number;\n}\n\nexport interface TestFormat {\n  fields: (SelectField | TextField | InputField | FileField)[];\n  name: string;\n  value: number;\n  multiplier: number;\n  ambTemp: number;\n}\n\nconst testFormats: TestFormat[] = [\n  {\n    name: 'Do this for this long.',\n    value: 1,\n    fields: [\n      {\n        id: 1,\n        type: 'select',\n        options: ['Charge', 'Discharge', 'Rest', 'Hold'],\n        value: 'Charge',\n        visibility: true,\n        template_width: 2,\n      } as SelectField,\n      {\n        id: 2,\n        type: 'text',\n        value: 'at',\n        visibility: true,\n        template_width: 1,\n      } as TextField,\n      {\n        id: 3,\n        type: 'input',\n        value: null,\n        visibility: true,\n        template_width: 2,\n      } as InputField,\n      {\n        id: 4,\n        type: 'select',\n        options: ['C', 'A', 'W'],\n        value: 'C',\n        visibility: true,\n        template_width: 2,\n      } as SelectField,\n      {\n        id: 5,\n        type: 'text',\n        value: 'for',\n        visibility: true,\n        template_width: 1,\n      } as TextField,\n      {\n        id: 6,\n        type: 'input',\n        value: null,\n        visibility: true,\n        template_width: 2,\n      } as InputField,\n      {\n        id: 7,\n        type: 'select',\n        options: ['hours.', 'minutes.', 'seconds.'],\n        value: 'hours.',\n        visibility: true,\n        template_width: 2,\n      } as SelectField,\n    ],\n    multiplier: 1,\n    ambTemp: 25,\n  },\n  {\n    name: 'Do this until this happen.',\n    value: 2,\n    fields: [\n      {\n        id: 1,\n        type: 'select',\n        options: ['Charge', 'Discharge'],\n        value: 'Charge',\n        visibility: true,\n        template_width: 2,\n      } as SelectField,\n      {\n        id: 2,\n        type: 'text',\n        value: 'at',\n        visibility: true,\n        template_width: 1,\n      } as SelectField,\n      {\n        id: 3,\n        type: 'input',\n        value: null,\n        visibility: true,\n        template_width: 2,\n      } as InputField,\n      {\n        id: 4,\n        type: 'select',\n        options: ['C', 'A', 'W'],\n        value: 'C',\n        visibility: true,\n        template_width: 2,\n      } as SelectField,\n      {\n        id: 5,\n        type: 'text',\n        value: 'until',\n        visibility: true,\n        template_width: 1,\n      } as TextField,\n      {\n        id: 6,\n        type: 'input',\n        value: null,\n        visibility: true,\n        template_width: 2,\n      } as InputField,\n      {\n        id: 7,\n        type: 'text',\n        value: 'volt.',\n        visibility: true,\n        template_width: 2,\n      } as TextField,\n    ],\n    multiplier: 1,\n    ambTemp: 25,\n  },\n  {\n    name: 'Run X.',\n    value: 3,\n    fields: [\n      {\n        id: 1,\n        type: 'text',\n        value: 'Run',\n        visibility: true,\n        template_width: 1,\n      } as TextField,\n      {\n        id: 2,\n        type: 'file',\n        value: null,\n        visibility: true,\n        template_width: 4,\n      } as FileField,\n      {\n        id: 3,\n        type: 'text',\n        value: 'for',\n        visibility: true,\n        template_width: 1,\n      } as TextField,\n      {\n        id: 4,\n        type: 'input',\n        value: null,\n        visibility: true,\n        template_width: 3,\n      } as InputField,\n      {\n        id: 3,\n        type: 'select',\n        options: ['hours.', 'minutes.', 'seconds.'],\n        value: 'hours.',\n        visibility: true,\n        template_width: 2,\n      } as SelectField,\n    ],\n    multiplier: 1,\n    ambTemp: 25,\n  },\n];\nexport interface ChannelFields {\n  channelNumber: number | undefined;\n  cellID: string | undefined;\n  testFormats: TestFormat[];\n  allTestFormat: TestFormat[][];\n  isRemoveRowButtonDisabled: boolean;\n  isAddRowButtonDisabled: boolean;\n  overallRowMultiplier: number;\n  availableChannels: number[] | undefined;\n}\nexport interface PayLoad {\n  channels: ChannelFields[] | undefined;\n  isConAmTe: boolean;\n  ambTemp: number;\n}\n\nexport { testFormats };\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/MeasuredParameters.html":{"url":"interfaces/MeasuredParameters.html","title":"interface - MeasuredParameters","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  MeasuredParameters\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/TestResult.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            cellTemp\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            chamberHum\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            chamberTemp\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            current\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            time\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            voltage\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        cellTemp\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        cellTemp:         SensorObj[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         SensorObj[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        chamberHum\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        chamberHum:     number[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        chamberTemp\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        chamberTemp:     number[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        current\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        current:     number[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        time\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        time:     number[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        voltage\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        voltage:     number[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { PayLoad, TestFormat } from './FormFields';\n\nexport interface _TestResultLight {\n  _id?: string;\n  createdOnChamber?: string;\n  chamberName?: string;\n  testName?: string;\n  testDescription?: string;\n  status?: 'Running' | 'Paused' | 'Stopped' | 'Scheduled' | 'Completed';\n  channels?: TestChannel[];\n  createdOn?: Date;\n}\n\nexport interface TestChannel {\n  channelNo: number;\n  statusCh: 'Running' | 'Paused' | 'Stopped' | 'Scheduled' | 'Completed';\n  chMultiplierIndex: number;\n  chMultiplier: number;\n  onRows?: number;\n  totalRows?: number;\n  statusRow?: 'Running' | 'Paused' | 'Stopped' | 'Scheduled' | 'Completed';\n  rowMultiplierIndex?: number;\n  rowMultiplier?: number;\n}\nexport interface TestChannelDeepChannel {\n  channelNumber: number;\n  status: 'Running' | 'Paused' | 'Stopped' | 'Scheduled' | 'Completed';\n  currentMultiplierIndex: number;\n  multiplier: number;\n  testFormats: TestFormat[];\n  rows?: RowInfo[];\n  chStartDate?: Date;\n  chEndDate?: Date;\n}\nexport interface _TestResultDeep {\n  _id?: string;\n  chamberName?: string;\n  createdOnChamber?: string;\n  testName?: string;\n  testDesc?: string;\n  status?: 'Running' | 'Paused' | 'Stopped' | 'Scheduled' | 'Completed';\n  channels: TestChannelDeepChannel[];\n  accessType: 'admin' | 'read' | 'write';\n  testStartDate?: Date;\n  testEndDate?: Date;\n  testScheduleDate?: Date;\n}\n\nexport interface MeasuredParameters {\n  current?: number[];\n  voltage?: number[];\n  chamberTemp?: number[];\n  chamberHum?: number[];\n  cellTemp?: SensorObj[];\n  time?: number[];\n}\nexport interface SensorObj {\n  sensorId: number;\n  values: number[];\n}\n\nexport interface RowInfo {\n  rowNo: number;\n  measuredParameters?: MeasuredParameters;\n  derivedParameters?: any;\n  status: 'Completed' | 'Running' | 'Scheduled' | 'Stopped' | 'Paused';\n  currentMultiplierIndex: number;\n  multiplier: number;\n  rowStartDate?: Date;\n  rowEndDate?: Date;\n}\n\nexport interface Channel {\n  rows?: RowInfo[];\n  channelNo: number;\n  status: 'Completed' | 'Running' | 'Scheduled' | 'Stopped' | 'Paused';\n  currentMultiplierIndex?: number;\n  multiplier?: number;\n}\n\nexport interface TestResultDocument {\n  channels: Channel[];\n}\n\nexport interface QuickResponseMeasurement {\n  channelNo: Number;\n  statusCh: 'Running' | 'Paused' | 'Stopped' | 'Scheduled' | 'Completed';\n  measuredParameters: MeasuredParameters;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/NoResultComponent.html":{"url":"components/NoResultComponent.html","title":"component - NoResultComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  NoResultComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/body/battery-test/no-result/no-result.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-no-result\n            \n\n            \n                styleUrls\n                ./no-result.component.css\n            \n\n\n\n            \n                templateUrl\n                ./no-result.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/components/body/battery-test/no-result/no-result.component.ts:8\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/body/battery-test/no-result/no-result.component.ts:12\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-no-result',\n  templateUrl: './no-result.component.html',\n  styleUrls: ['./no-result.component.css']\n})\nexport class NoResultComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n\n    \n\n    \n        \n  \n    All the experiments on Battery Cell through\n    Test Chamber appears here.\n  \n\n\n    \n\n    \n                \n                    ./no-result.component.css\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      All the experiments on Battery Cell through    Test Chamber appears here.  '\n    var COMPONENTS = [{'name': 'AddBatteryPackComponent', 'selector': 'app-add-battery-pack'},{'name': 'AddCellsComponent', 'selector': 'app-add-cells'},{'name': 'AddTestChamberComponent', 'selector': 'app-add-test-chamber'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BatteryPacksComponent', 'selector': 'app-battery-packs'},{'name': 'BatteryTestComponent', 'selector': 'app-battery-test'},{'name': 'CellsComponent', 'selector': 'app-cells'},{'name': 'CreateNewTestComponent', 'selector': 'app-create-new-test'},{'name': 'DashboardComponent', 'selector': 'app-dashboard'},{'name': 'DeviceDataComponent', 'selector': 'app-device-data'},{'name': 'DevicesComponent', 'selector': 'app-devices'},{'name': 'DevicesDefaultComponent', 'selector': 'app-devices-default'},{'name': 'DocsComponent', 'selector': 'app-docs'},{'name': 'EditBatteryPackComponent', 'selector': 'app-edit-battery-pack'},{'name': 'EditCellsComponent', 'selector': 'app-edit-cells'},{'name': 'EditTestChamberComponent', 'selector': 'app-edit-test-chamber'},{'name': 'FootNavComponent', 'selector': 'app-foot-nav'},{'name': 'HeadNavComponent', 'selector': 'app-head-nav'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'NoResultComponent', 'selector': 'app-no-result'},{'name': 'ShowAllTestsResultComponent', 'selector': 'app-show-all-tests-result'},{'name': 'ShowTestResultComponent', 'selector': 'app-show-test-result'},{'name': 'TestChambersComponent', 'selector': 'app-test-chambers'},{'name': 'ViewBatteryPacksComponent', 'selector': 'app-view-battery-packs'},{'name': 'ViewCellsComponent', 'selector': 'app-view-cells'},{'name': 'ViewTestChambersComponent', 'selector': 'app-view-test-chambers'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'NoResultComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/PayLoad.html":{"url":"interfaces/PayLoad.html","title":"interface - PayLoad","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  PayLoad\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/FormFields.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            ambTemp\n                                        \n                                \n                                \n                                        \n                                            channels\n                                        \n                                \n                                \n                                        \n                                            isConAmTe\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        ambTemp\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        ambTemp:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        channels\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        channels:     ChannelFields[] | undefined\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     ChannelFields[] | undefined\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        isConAmTe\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        isConAmTe:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { DriveCycle } from 'src/app/models/DriveCycle';\nexport interface SelectField {\n  value: any;\n  type: string;\n  id: number;\n  options: string[];\n  visibility: boolean;\n  template_width: number;\n}\nexport interface TextField {\n  type: 'text';\n  id: number;\n  value: 'at' | 'for' | 'Run' | 'until' | 'volt.' | 'seconds.';\n  visibility: boolean;\n  template_width: number;\n}\nexport interface InputField {\n  type: 'input';\n  id: number;\n  value: any;\n  visibility: boolean;\n  template_width: number;\n}\n\nexport interface FileField {\n  type: 'file';\n  id: number;\n  value: DriveCycle | null;\n  visibility: boolean;\n  template_width: number;\n}\n\nexport interface TestFormat {\n  fields: (SelectField | TextField | InputField | FileField)[];\n  name: string;\n  value: number;\n  multiplier: number;\n  ambTemp: number;\n}\n\nconst testFormats: TestFormat[] = [\n  {\n    name: 'Do this for this long.',\n    value: 1,\n    fields: [\n      {\n        id: 1,\n        type: 'select',\n        options: ['Charge', 'Discharge', 'Rest', 'Hold'],\n        value: 'Charge',\n        visibility: true,\n        template_width: 2,\n      } as SelectField,\n      {\n        id: 2,\n        type: 'text',\n        value: 'at',\n        visibility: true,\n        template_width: 1,\n      } as TextField,\n      {\n        id: 3,\n        type: 'input',\n        value: null,\n        visibility: true,\n        template_width: 2,\n      } as InputField,\n      {\n        id: 4,\n        type: 'select',\n        options: ['C', 'A', 'W'],\n        value: 'C',\n        visibility: true,\n        template_width: 2,\n      } as SelectField,\n      {\n        id: 5,\n        type: 'text',\n        value: 'for',\n        visibility: true,\n        template_width: 1,\n      } as TextField,\n      {\n        id: 6,\n        type: 'input',\n        value: null,\n        visibility: true,\n        template_width: 2,\n      } as InputField,\n      {\n        id: 7,\n        type: 'select',\n        options: ['hours.', 'minutes.', 'seconds.'],\n        value: 'hours.',\n        visibility: true,\n        template_width: 2,\n      } as SelectField,\n    ],\n    multiplier: 1,\n    ambTemp: 25,\n  },\n  {\n    name: 'Do this until this happen.',\n    value: 2,\n    fields: [\n      {\n        id: 1,\n        type: 'select',\n        options: ['Charge', 'Discharge'],\n        value: 'Charge',\n        visibility: true,\n        template_width: 2,\n      } as SelectField,\n      {\n        id: 2,\n        type: 'text',\n        value: 'at',\n        visibility: true,\n        template_width: 1,\n      } as SelectField,\n      {\n        id: 3,\n        type: 'input',\n        value: null,\n        visibility: true,\n        template_width: 2,\n      } as InputField,\n      {\n        id: 4,\n        type: 'select',\n        options: ['C', 'A', 'W'],\n        value: 'C',\n        visibility: true,\n        template_width: 2,\n      } as SelectField,\n      {\n        id: 5,\n        type: 'text',\n        value: 'until',\n        visibility: true,\n        template_width: 1,\n      } as TextField,\n      {\n        id: 6,\n        type: 'input',\n        value: null,\n        visibility: true,\n        template_width: 2,\n      } as InputField,\n      {\n        id: 7,\n        type: 'text',\n        value: 'volt.',\n        visibility: true,\n        template_width: 2,\n      } as TextField,\n    ],\n    multiplier: 1,\n    ambTemp: 25,\n  },\n  {\n    name: 'Run X.',\n    value: 3,\n    fields: [\n      {\n        id: 1,\n        type: 'text',\n        value: 'Run',\n        visibility: true,\n        template_width: 1,\n      } as TextField,\n      {\n        id: 2,\n        type: 'file',\n        value: null,\n        visibility: true,\n        template_width: 4,\n      } as FileField,\n      {\n        id: 3,\n        type: 'text',\n        value: 'for',\n        visibility: true,\n        template_width: 1,\n      } as TextField,\n      {\n        id: 4,\n        type: 'input',\n        value: null,\n        visibility: true,\n        template_width: 3,\n      } as InputField,\n      {\n        id: 3,\n        type: 'select',\n        options: ['hours.', 'minutes.', 'seconds.'],\n        value: 'hours.',\n        visibility: true,\n        template_width: 2,\n      } as SelectField,\n    ],\n    multiplier: 1,\n    ambTemp: 25,\n  },\n];\nexport interface ChannelFields {\n  channelNumber: number | undefined;\n  cellID: string | undefined;\n  testFormats: TestFormat[];\n  allTestFormat: TestFormat[][];\n  isRemoveRowButtonDisabled: boolean;\n  isAddRowButtonDisabled: boolean;\n  overallRowMultiplier: number;\n  availableChannels: number[] | undefined;\n}\nexport interface PayLoad {\n  channels: ChannelFields[] | undefined;\n  isConAmTe: boolean;\n  ambTemp: number;\n}\n\nexport { testFormats };\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/QuickResponseMeasurement.html":{"url":"interfaces/QuickResponseMeasurement.html","title":"interface - QuickResponseMeasurement","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  QuickResponseMeasurement\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/TestResult.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            channelNo\n                                        \n                                \n                                \n                                        \n                                            measuredParameters\n                                        \n                                \n                                \n                                        \n                                            statusCh\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        channelNo\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        channelNo:         Number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        measuredParameters\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        measuredParameters:         MeasuredParameters\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         MeasuredParameters\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        statusCh\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        statusCh:     \"Running\" | \"Paused\" | \"Stopped\" | \"Scheduled\" | \"Completed\"\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     \"Running\" | \"Paused\" | \"Stopped\" | \"Scheduled\" | \"Completed\"\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { PayLoad, TestFormat } from './FormFields';\n\nexport interface _TestResultLight {\n  _id?: string;\n  createdOnChamber?: string;\n  chamberName?: string;\n  testName?: string;\n  testDescription?: string;\n  status?: 'Running' | 'Paused' | 'Stopped' | 'Scheduled' | 'Completed';\n  channels?: TestChannel[];\n  createdOn?: Date;\n}\n\nexport interface TestChannel {\n  channelNo: number;\n  statusCh: 'Running' | 'Paused' | 'Stopped' | 'Scheduled' | 'Completed';\n  chMultiplierIndex: number;\n  chMultiplier: number;\n  onRows?: number;\n  totalRows?: number;\n  statusRow?: 'Running' | 'Paused' | 'Stopped' | 'Scheduled' | 'Completed';\n  rowMultiplierIndex?: number;\n  rowMultiplier?: number;\n}\nexport interface TestChannelDeepChannel {\n  channelNumber: number;\n  status: 'Running' | 'Paused' | 'Stopped' | 'Scheduled' | 'Completed';\n  currentMultiplierIndex: number;\n  multiplier: number;\n  testFormats: TestFormat[];\n  rows?: RowInfo[];\n  chStartDate?: Date;\n  chEndDate?: Date;\n}\nexport interface _TestResultDeep {\n  _id?: string;\n  chamberName?: string;\n  createdOnChamber?: string;\n  testName?: string;\n  testDesc?: string;\n  status?: 'Running' | 'Paused' | 'Stopped' | 'Scheduled' | 'Completed';\n  channels: TestChannelDeepChannel[];\n  accessType: 'admin' | 'read' | 'write';\n  testStartDate?: Date;\n  testEndDate?: Date;\n  testScheduleDate?: Date;\n}\n\nexport interface MeasuredParameters {\n  current?: number[];\n  voltage?: number[];\n  chamberTemp?: number[];\n  chamberHum?: number[];\n  cellTemp?: SensorObj[];\n  time?: number[];\n}\nexport interface SensorObj {\n  sensorId: number;\n  values: number[];\n}\n\nexport interface RowInfo {\n  rowNo: number;\n  measuredParameters?: MeasuredParameters;\n  derivedParameters?: any;\n  status: 'Completed' | 'Running' | 'Scheduled' | 'Stopped' | 'Paused';\n  currentMultiplierIndex: number;\n  multiplier: number;\n  rowStartDate?: Date;\n  rowEndDate?: Date;\n}\n\nexport interface Channel {\n  rows?: RowInfo[];\n  channelNo: number;\n  status: 'Completed' | 'Running' | 'Scheduled' | 'Stopped' | 'Paused';\n  currentMultiplierIndex?: number;\n  multiplier?: number;\n}\n\nexport interface TestResultDocument {\n  channels: Channel[];\n}\n\nexport interface QuickResponseMeasurement {\n  channelNo: Number;\n  statusCh: 'Running' | 'Paused' | 'Stopped' | 'Scheduled' | 'Completed';\n  measuredParameters: MeasuredParameters;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/RowInfo.html":{"url":"interfaces/RowInfo.html","title":"interface - RowInfo","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  RowInfo\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/TestResult.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            currentMultiplierIndex\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            derivedParameters\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            measuredParameters\n                                        \n                                \n                                \n                                        \n                                            multiplier\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            rowEndDate\n                                        \n                                \n                                \n                                        \n                                            rowNo\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            rowStartDate\n                                        \n                                \n                                \n                                        \n                                            status\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        currentMultiplierIndex\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        currentMultiplierIndex:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        derivedParameters\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        derivedParameters:         any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         any\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        measuredParameters\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        measuredParameters:         MeasuredParameters\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         MeasuredParameters\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        multiplier\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        multiplier:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        rowEndDate\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        rowEndDate:         Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Date\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        rowNo\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        rowNo:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        rowStartDate\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        rowStartDate:         Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Date\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        status\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        status:     \"Completed\" | \"Running\" | \"Scheduled\" | \"Stopped\" | \"Paused\"\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     \"Completed\" | \"Running\" | \"Scheduled\" | \"Stopped\" | \"Paused\"\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { PayLoad, TestFormat } from './FormFields';\n\nexport interface _TestResultLight {\n  _id?: string;\n  createdOnChamber?: string;\n  chamberName?: string;\n  testName?: string;\n  testDescription?: string;\n  status?: 'Running' | 'Paused' | 'Stopped' | 'Scheduled' | 'Completed';\n  channels?: TestChannel[];\n  createdOn?: Date;\n}\n\nexport interface TestChannel {\n  channelNo: number;\n  statusCh: 'Running' | 'Paused' | 'Stopped' | 'Scheduled' | 'Completed';\n  chMultiplierIndex: number;\n  chMultiplier: number;\n  onRows?: number;\n  totalRows?: number;\n  statusRow?: 'Running' | 'Paused' | 'Stopped' | 'Scheduled' | 'Completed';\n  rowMultiplierIndex?: number;\n  rowMultiplier?: number;\n}\nexport interface TestChannelDeepChannel {\n  channelNumber: number;\n  status: 'Running' | 'Paused' | 'Stopped' | 'Scheduled' | 'Completed';\n  currentMultiplierIndex: number;\n  multiplier: number;\n  testFormats: TestFormat[];\n  rows?: RowInfo[];\n  chStartDate?: Date;\n  chEndDate?: Date;\n}\nexport interface _TestResultDeep {\n  _id?: string;\n  chamberName?: string;\n  createdOnChamber?: string;\n  testName?: string;\n  testDesc?: string;\n  status?: 'Running' | 'Paused' | 'Stopped' | 'Scheduled' | 'Completed';\n  channels: TestChannelDeepChannel[];\n  accessType: 'admin' | 'read' | 'write';\n  testStartDate?: Date;\n  testEndDate?: Date;\n  testScheduleDate?: Date;\n}\n\nexport interface MeasuredParameters {\n  current?: number[];\n  voltage?: number[];\n  chamberTemp?: number[];\n  chamberHum?: number[];\n  cellTemp?: SensorObj[];\n  time?: number[];\n}\nexport interface SensorObj {\n  sensorId: number;\n  values: number[];\n}\n\nexport interface RowInfo {\n  rowNo: number;\n  measuredParameters?: MeasuredParameters;\n  derivedParameters?: any;\n  status: 'Completed' | 'Running' | 'Scheduled' | 'Stopped' | 'Paused';\n  currentMultiplierIndex: number;\n  multiplier: number;\n  rowStartDate?: Date;\n  rowEndDate?: Date;\n}\n\nexport interface Channel {\n  rows?: RowInfo[];\n  channelNo: number;\n  status: 'Completed' | 'Running' | 'Scheduled' | 'Stopped' | 'Paused';\n  currentMultiplierIndex?: number;\n  multiplier?: number;\n}\n\nexport interface TestResultDocument {\n  channels: Channel[];\n}\n\nexport interface QuickResponseMeasurement {\n  channelNo: Number;\n  statusCh: 'Running' | 'Paused' | 'Stopped' | 'Scheduled' | 'Completed';\n  measuredParameters: MeasuredParameters;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/SelectField.html":{"url":"interfaces/SelectField.html","title":"interface - SelectField","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  SelectField\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/FormFields.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            options\n                                        \n                                \n                                \n                                        \n                                            template_width\n                                        \n                                \n                                \n                                        \n                                            type\n                                        \n                                \n                                \n                                        \n                                            value\n                                        \n                                \n                                \n                                        \n                                            visibility\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        options\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        options:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        template_width\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        template_width:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        type:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        value\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        value:         any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         any\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        visibility\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        visibility:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { DriveCycle } from 'src/app/models/DriveCycle';\nexport interface SelectField {\n  value: any;\n  type: string;\n  id: number;\n  options: string[];\n  visibility: boolean;\n  template_width: number;\n}\nexport interface TextField {\n  type: 'text';\n  id: number;\n  value: 'at' | 'for' | 'Run' | 'until' | 'volt.' | 'seconds.';\n  visibility: boolean;\n  template_width: number;\n}\nexport interface InputField {\n  type: 'input';\n  id: number;\n  value: any;\n  visibility: boolean;\n  template_width: number;\n}\n\nexport interface FileField {\n  type: 'file';\n  id: number;\n  value: DriveCycle | null;\n  visibility: boolean;\n  template_width: number;\n}\n\nexport interface TestFormat {\n  fields: (SelectField | TextField | InputField | FileField)[];\n  name: string;\n  value: number;\n  multiplier: number;\n  ambTemp: number;\n}\n\nconst testFormats: TestFormat[] = [\n  {\n    name: 'Do this for this long.',\n    value: 1,\n    fields: [\n      {\n        id: 1,\n        type: 'select',\n        options: ['Charge', 'Discharge', 'Rest', 'Hold'],\n        value: 'Charge',\n        visibility: true,\n        template_width: 2,\n      } as SelectField,\n      {\n        id: 2,\n        type: 'text',\n        value: 'at',\n        visibility: true,\n        template_width: 1,\n      } as TextField,\n      {\n        id: 3,\n        type: 'input',\n        value: null,\n        visibility: true,\n        template_width: 2,\n      } as InputField,\n      {\n        id: 4,\n        type: 'select',\n        options: ['C', 'A', 'W'],\n        value: 'C',\n        visibility: true,\n        template_width: 2,\n      } as SelectField,\n      {\n        id: 5,\n        type: 'text',\n        value: 'for',\n        visibility: true,\n        template_width: 1,\n      } as TextField,\n      {\n        id: 6,\n        type: 'input',\n        value: null,\n        visibility: true,\n        template_width: 2,\n      } as InputField,\n      {\n        id: 7,\n        type: 'select',\n        options: ['hours.', 'minutes.', 'seconds.'],\n        value: 'hours.',\n        visibility: true,\n        template_width: 2,\n      } as SelectField,\n    ],\n    multiplier: 1,\n    ambTemp: 25,\n  },\n  {\n    name: 'Do this until this happen.',\n    value: 2,\n    fields: [\n      {\n        id: 1,\n        type: 'select',\n        options: ['Charge', 'Discharge'],\n        value: 'Charge',\n        visibility: true,\n        template_width: 2,\n      } as SelectField,\n      {\n        id: 2,\n        type: 'text',\n        value: 'at',\n        visibility: true,\n        template_width: 1,\n      } as SelectField,\n      {\n        id: 3,\n        type: 'input',\n        value: null,\n        visibility: true,\n        template_width: 2,\n      } as InputField,\n      {\n        id: 4,\n        type: 'select',\n        options: ['C', 'A', 'W'],\n        value: 'C',\n        visibility: true,\n        template_width: 2,\n      } as SelectField,\n      {\n        id: 5,\n        type: 'text',\n        value: 'until',\n        visibility: true,\n        template_width: 1,\n      } as TextField,\n      {\n        id: 6,\n        type: 'input',\n        value: null,\n        visibility: true,\n        template_width: 2,\n      } as InputField,\n      {\n        id: 7,\n        type: 'text',\n        value: 'volt.',\n        visibility: true,\n        template_width: 2,\n      } as TextField,\n    ],\n    multiplier: 1,\n    ambTemp: 25,\n  },\n  {\n    name: 'Run X.',\n    value: 3,\n    fields: [\n      {\n        id: 1,\n        type: 'text',\n        value: 'Run',\n        visibility: true,\n        template_width: 1,\n      } as TextField,\n      {\n        id: 2,\n        type: 'file',\n        value: null,\n        visibility: true,\n        template_width: 4,\n      } as FileField,\n      {\n        id: 3,\n        type: 'text',\n        value: 'for',\n        visibility: true,\n        template_width: 1,\n      } as TextField,\n      {\n        id: 4,\n        type: 'input',\n        value: null,\n        visibility: true,\n        template_width: 3,\n      } as InputField,\n      {\n        id: 3,\n        type: 'select',\n        options: ['hours.', 'minutes.', 'seconds.'],\n        value: 'hours.',\n        visibility: true,\n        template_width: 2,\n      } as SelectField,\n    ],\n    multiplier: 1,\n    ambTemp: 25,\n  },\n];\nexport interface ChannelFields {\n  channelNumber: number | undefined;\n  cellID: string | undefined;\n  testFormats: TestFormat[];\n  allTestFormat: TestFormat[][];\n  isRemoveRowButtonDisabled: boolean;\n  isAddRowButtonDisabled: boolean;\n  overallRowMultiplier: number;\n  availableChannels: number[] | undefined;\n}\nexport interface PayLoad {\n  channels: ChannelFields[] | undefined;\n  isConAmTe: boolean;\n  ambTemp: number;\n}\n\nexport { testFormats };\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/SensorObj.html":{"url":"interfaces/SensorObj.html","title":"interface - SensorObj","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  SensorObj\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/TestResult.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            sensorId\n                                        \n                                \n                                \n                                        \n                                            values\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        sensorId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        sensorId:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        values\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        values:     number[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { PayLoad, TestFormat } from './FormFields';\n\nexport interface _TestResultLight {\n  _id?: string;\n  createdOnChamber?: string;\n  chamberName?: string;\n  testName?: string;\n  testDescription?: string;\n  status?: 'Running' | 'Paused' | 'Stopped' | 'Scheduled' | 'Completed';\n  channels?: TestChannel[];\n  createdOn?: Date;\n}\n\nexport interface TestChannel {\n  channelNo: number;\n  statusCh: 'Running' | 'Paused' | 'Stopped' | 'Scheduled' | 'Completed';\n  chMultiplierIndex: number;\n  chMultiplier: number;\n  onRows?: number;\n  totalRows?: number;\n  statusRow?: 'Running' | 'Paused' | 'Stopped' | 'Scheduled' | 'Completed';\n  rowMultiplierIndex?: number;\n  rowMultiplier?: number;\n}\nexport interface TestChannelDeepChannel {\n  channelNumber: number;\n  status: 'Running' | 'Paused' | 'Stopped' | 'Scheduled' | 'Completed';\n  currentMultiplierIndex: number;\n  multiplier: number;\n  testFormats: TestFormat[];\n  rows?: RowInfo[];\n  chStartDate?: Date;\n  chEndDate?: Date;\n}\nexport interface _TestResultDeep {\n  _id?: string;\n  chamberName?: string;\n  createdOnChamber?: string;\n  testName?: string;\n  testDesc?: string;\n  status?: 'Running' | 'Paused' | 'Stopped' | 'Scheduled' | 'Completed';\n  channels: TestChannelDeepChannel[];\n  accessType: 'admin' | 'read' | 'write';\n  testStartDate?: Date;\n  testEndDate?: Date;\n  testScheduleDate?: Date;\n}\n\nexport interface MeasuredParameters {\n  current?: number[];\n  voltage?: number[];\n  chamberTemp?: number[];\n  chamberHum?: number[];\n  cellTemp?: SensorObj[];\n  time?: number[];\n}\nexport interface SensorObj {\n  sensorId: number;\n  values: number[];\n}\n\nexport interface RowInfo {\n  rowNo: number;\n  measuredParameters?: MeasuredParameters;\n  derivedParameters?: any;\n  status: 'Completed' | 'Running' | 'Scheduled' | 'Stopped' | 'Paused';\n  currentMultiplierIndex: number;\n  multiplier: number;\n  rowStartDate?: Date;\n  rowEndDate?: Date;\n}\n\nexport interface Channel {\n  rows?: RowInfo[];\n  channelNo: number;\n  status: 'Completed' | 'Running' | 'Scheduled' | 'Stopped' | 'Paused';\n  currentMultiplierIndex?: number;\n  multiplier?: number;\n}\n\nexport interface TestResultDocument {\n  channels: Channel[];\n}\n\nexport interface QuickResponseMeasurement {\n  channelNo: Number;\n  statusCh: 'Running' | 'Paused' | 'Stopped' | 'Scheduled' | 'Completed';\n  measuredParameters: MeasuredParameters;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/SharedModule.html":{"url":"modules/SharedModule.html","title":"module - SharedModule","body":"\n                   \n\n\n\n\n    Modules\n    SharedModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/shared/shared.module.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { FormsModule } from '@angular/forms';\nimport { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\n\n\n@NgModule({\n  declarations: [],\n  imports: [\n    CommonModule,\n    FormsModule\n  ],\n  exports:[\n    CommonModule,\n    FormsModule\n  ]\n})\nexport class SharedModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ShowAllTestsResultComponent.html":{"url":"components/ShowAllTestsResultComponent.html","title":"component - ShowAllTestsResultComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  ShowAllTestsResultComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/body/battery-test/show-all-tests-result/show-all-tests-result.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n                    OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-show-all-tests-result\n            \n\n            \n                styleUrls\n                ./show-all-tests-result.component.css\n            \n\n\n\n            \n                templateUrl\n                ./show-all-tests-result.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                allTestIntervalId\n                            \n                            \n                                allTests\n                            \n                            \n                                allTestsSource\n                            \n                            \n                                    Optional\n                                allTestSub\n                            \n                            \n                                isTestInfoViewEnabled\n                            \n                            \n                                page\n                            \n                            \n                                pageSize\n                            \n                            \n                                searchId\n                            \n                            \n                                subs\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                changeView\n                            \n                            \n                                filter\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(_testChamberService: TestChamberService, location: Location)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/body/battery-test/show-all-tests-result/show-all-tests-result.component.ts:21\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        _testChamberService\n                                                  \n                                                        \n                                                                        TestChamberService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        location\n                                                  \n                                                        \n                                                                        Location\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        changeView\n                        \n                    \n                \n            \n            \n                \nchangeView()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/body/battery-test/show-all-tests-result/show-all-tests-result.component.ts:74\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        filter\n                        \n                    \n                \n            \n            \n                \nfilter()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/body/battery-test/show-all-tests-result/show-all-tests-result.component.ts:50\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnDestroy\n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/body/battery-test/show-all-tests-result/show-all-tests-result.component.ts:67\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/body/battery-test/show-all-tests-result/show-all-tests-result.component.ts:28\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        allTestIntervalId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                    \n                        \n                                Defined in src/app/components/body/battery-test/show-all-tests-result/show-all-tests-result.component.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        allTests\n                        \n                    \n                \n            \n                \n                    \n                        Type :     _TestResultLight[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/components/body/battery-test/show-all-tests-result/show-all-tests-result.component.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        allTestsSource\n                        \n                    \n                \n            \n                \n                    \n                        Type :     _TestResultLight[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/components/body/battery-test/show-all-tests-result/show-all-tests-result.component.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        allTestSub\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Subscription\n\n                    \n                \n                    \n                        \n                                Defined in src/app/components/body/battery-test/show-all-tests-result/show-all-tests-result.component.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isTestInfoViewEnabled\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/components/body/battery-test/show-all-tests-result/show-all-tests-result.component.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        page\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 1\n                    \n                \n                    \n                        \n                                Defined in src/app/components/body/battery-test/show-all-tests-result/show-all-tests-result.component.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        pageSize\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 10\n                    \n                \n                    \n                        \n                                Defined in src/app/components/body/battery-test/show-all-tests-result/show-all-tests-result.component.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        searchId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/app/components/body/battery-test/show-all-tests-result/show-all-tests-result.component.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        subs\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Subscription[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/components/body/battery-test/show-all-tests-result/show-all-tests-result.component.ts:13\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { TestChamberService } from 'src/app/services/test-chamber.service';\nimport { _TestResultLight } from './../../../../models/TestResult';\nimport { Subscription } from 'rxjs';\nimport { Component, OnInit, OnDestroy } from '@angular/core';\nimport { Location } from '@angular/common';\n\n@Component({\n  selector: 'app-show-all-tests-result',\n  templateUrl: './show-all-tests-result.component.html',\n  styleUrls: ['./show-all-tests-result.component.css'],\n})\nexport class ShowAllTestsResultComponent implements OnInit, OnDestroy {\n  subs: Subscription[] = [];\n  allTestsSource: _TestResultLight[] = [];\n  allTests: _TestResultLight[] = [];\n  pageSize = 10;\n  page = 1;\n  searchId: string = '';\n  isTestInfoViewEnabled: boolean = false;\n  allTestIntervalId: any;\n  allTestSub?: Subscription;\n\n  constructor(\n    private _testChamberService: TestChamberService,\n    private location: Location\n  ) {}\n\n  ngOnInit(): void {\n    if (window.location.hostname != 'localhost') {\n      this.location.replaceState('./'); //on prod\n    }\n    const sub = this._testChamberService\n      .getAllTests()\n      .subscribe((tests: any) => {\n        this.allTestsSource = tests;\n        this.filter();\n      });\n    this.subs.push(sub);\n    this.allTestIntervalId = setInterval(() => {\n      this.allTestSub?.unsubscribe();\n      this.allTestSub = this._testChamberService\n        .getAllTests()\n        .subscribe((tests: any) => {\n          this.allTestsSource = tests;\n          this.filter();\n        });\n    }, 15000);\n  }\n\n  filter() {\n    if (this.allTestsSource.length > 0 && this.searchId.length > 0) {\n      this.allTests = this.allTestsSource.filter((item: _TestResultLight) => {\n        if (item._id) {\n          return item._id\n            .toLowerCase()\n            .trim()\n            .includes(this.searchId.toLowerCase().trim());\n        } else {\n          return false;\n        }\n      });\n    } else {\n      this.allTests = [...this.allTestsSource];\n    }\n  }\n\n  ngOnDestroy(): void {\n    this.subs?.forEach((subs) => {\n      subs.unsubscribe();\n    });\n    this.allTestSub?.unsubscribe();\n    clearInterval(this.allTestIntervalId);\n  }\n  changeView() {\n    this.isTestInfoViewEnabled = !this.isTestInfoViewEnabled;\n    const sub = this._testChamberService\n      .getAllTests()\n      .subscribe((tests: any) => {\n        this.allTestsSource = tests;\n        this.filter();\n      });\n    this.subs.push(sub);\n  }\n}\n\n    \n\n    \n        \n  \n    \n      \n        Back\n      \n    \n    \n      \n        Create new test\n      \n    \n  \n  \n    \n      \n        All Tests\n        \n          \n        \n      \n    \n    \n      \n        \n          \n            \n              No tests found.\n            \n          \n          \n            \n              List of tests assigned to you.\n            \n            \n              \n                Test Id\n                Test Name\n                Chamber Name\n                Status\n                Created On\n              \n            \n            \n              \n                \n                  {{ test._id }}\n                  {{ test.testName }}\n                  {{ test.chamberName }}\n                  {{ test.status }}\n                  {{ test.createdOn | date : \"MMM d, y, h:mm a\" }}\n                \n              \n            \n          \n        \n      \n      \n        \n          \n        \n      \n    \n  \n\n\n\n  \n    \n      \n        Back\n      \n    \n    \n      \n        \n          \n            Create new test\n          \n        \n      \n    \n  \n  \n\n\n    \n\n    \n                \n                    ./show-all-tests-result.component.css\n                \n                .all-test tr:hover {\n  cursor: pointer;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                    Back                            Create new test                                All Tests                                                                                          No tests found.                                                          List of tests assigned to you.                                                      Test Id                Test Name                Chamber Name                Status                Created On                                                                                      {{ test._id }}                  {{ test.testName }}                  {{ test.chamberName }}                  {{ test.status }}                  {{ test.createdOn | date : \"MMM d, y, h:mm a\" }}                                                                                                                                  Back                                                  Create new test                                '\n    var COMPONENTS = [{'name': 'AddBatteryPackComponent', 'selector': 'app-add-battery-pack'},{'name': 'AddCellsComponent', 'selector': 'app-add-cells'},{'name': 'AddTestChamberComponent', 'selector': 'app-add-test-chamber'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BatteryPacksComponent', 'selector': 'app-battery-packs'},{'name': 'BatteryTestComponent', 'selector': 'app-battery-test'},{'name': 'CellsComponent', 'selector': 'app-cells'},{'name': 'CreateNewTestComponent', 'selector': 'app-create-new-test'},{'name': 'DashboardComponent', 'selector': 'app-dashboard'},{'name': 'DeviceDataComponent', 'selector': 'app-device-data'},{'name': 'DevicesComponent', 'selector': 'app-devices'},{'name': 'DevicesDefaultComponent', 'selector': 'app-devices-default'},{'name': 'DocsComponent', 'selector': 'app-docs'},{'name': 'EditBatteryPackComponent', 'selector': 'app-edit-battery-pack'},{'name': 'EditCellsComponent', 'selector': 'app-edit-cells'},{'name': 'EditTestChamberComponent', 'selector': 'app-edit-test-chamber'},{'name': 'FootNavComponent', 'selector': 'app-foot-nav'},{'name': 'HeadNavComponent', 'selector': 'app-head-nav'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'NoResultComponent', 'selector': 'app-no-result'},{'name': 'ShowAllTestsResultComponent', 'selector': 'app-show-all-tests-result'},{'name': 'ShowTestResultComponent', 'selector': 'app-show-test-result'},{'name': 'TestChambersComponent', 'selector': 'app-test-chambers'},{'name': 'ViewBatteryPacksComponent', 'selector': 'app-view-battery-packs'},{'name': 'ViewCellsComponent', 'selector': 'app-view-cells'},{'name': 'ViewTestChambersComponent', 'selector': 'app-view-test-chambers'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ShowAllTestsResultComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Test.html":{"url":"interfaces/Test.html","title":"interface - Test","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Test\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/Test.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            _id\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            createdByUser\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            createdOn\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            createdOnChamber\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            forcedStatus\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            isComplete\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            status\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            testConfig\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            testDesc\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            testEndDate\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            testName\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            testResult\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            testScheduleDate\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            testStartDate\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        _id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        _id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        createdByUser\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        createdByUser:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        createdOn\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        createdOn:         Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Date\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        createdOnChamber\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        createdOnChamber:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        forcedStatus\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        forcedStatus:     \"Completed\" | \"Running\" | \"Scheduled\" | \"Stopped\" | \"Paused\" | null\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     \"Completed\" | \"Running\" | \"Scheduled\" | \"Stopped\" | \"Paused\" | null\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        isComplete\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        isComplete:         Boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        status\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        status:     \"Completed\" | \"Running\" | \"Scheduled\" | \"Stopped\" | \"Paused\"\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     \"Completed\" | \"Running\" | \"Scheduled\" | \"Stopped\" | \"Paused\"\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        testConfig\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        testConfig:         any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         any\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        testDesc\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        testDesc:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        testEndDate\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        testEndDate:         Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Date\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        testName\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        testName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        testResult\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        testResult:         any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         any\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        testScheduleDate\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        testScheduleDate:         Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Date\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        testStartDate\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        testStartDate:         Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Date\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { PayLoad } from './FormFields';\n\nexport interface Test {\n  _id?: string;\n  testName?: string;\n  testDesc?: string;\n  testConfig?: any;\n  testResult?: any;\n  isComplete?: Boolean;\n  testScheduleDate?: Date;\n  testStartDate?: Date; //actual date on which chamber starts to execute the exp\n  testEndDate?: Date;\n  createdOn?: Date;\n  status?: 'Completed' | 'Running' | 'Scheduled' | 'Stopped' | 'Paused';\n  forcedStatus?:\n    | 'Completed'\n    | 'Running'\n    | 'Scheduled'\n    | 'Stopped'\n    | 'Paused'\n    | null;\n  createdOnChamber?: string; //mongoose object id\n  createdByUser?: string; //mongoose object id\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/TestChamber.html":{"url":"classes/TestChamber.html","title":"class - TestChamber","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  TestChamber\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/TestChamber.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Optional\n                                _id\n                            \n                            \n                                    Public\n                                    Optional\n                                about\n                            \n                            \n                                    Public\n                                    Optional\n                                assignedUsers\n                            \n                            \n                                    Public\n                                    Optional\n                                controller\n                            \n                            \n                                    Public\n                                    Optional\n                                location\n                            \n                            \n                                    Public\n                                    Optional\n                                maxNoOfChannels\n                            \n                            \n                                    Public\n                                    Optional\n                                maxTemp\n                            \n                            \n                                    Public\n                                    Optional\n                                minTemp\n                            \n                            \n                                    Public\n                                    Optional\n                                name\n                            \n                            \n                                    Public\n                                    Optional\n                                version\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(_id?: string, name?: string, controller?: string, version?: string, about?: string, maxTemp?: number, minTemp?: number, location?: string, assignedUsers?: any, maxNoOfChannels?: number)\n                    \n                \n                        \n                            \n                                Defined in src/app/models/TestChamber.ts:24\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        _id\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        name\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        controller\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        version\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        about\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        maxTemp\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        minTemp\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        location\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        assignedUsers\n                                                  \n                                                        \n                                                                        any\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        maxNoOfChannels\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Optional\n                        _id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/models/TestChamber.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Optional\n                        about\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/models/TestChamber.ts:30\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Optional\n                        assignedUsers\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                    \n                        \n                                Defined in src/app/models/TestChamber.ts:34\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Optional\n                        controller\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/models/TestChamber.ts:28\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Optional\n                        location\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/models/TestChamber.ts:33\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Optional\n                        maxNoOfChannels\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/app/models/TestChamber.ts:35\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Optional\n                        maxTemp\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/app/models/TestChamber.ts:31\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Optional\n                        minTemp\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/app/models/TestChamber.ts:32\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Optional\n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/models/TestChamber.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Optional\n                        version\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/models/TestChamber.ts:29\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { _UserLight } from './../services/user.service';\n\n//what you get from the back end\nexport interface _TestChamber {\n  _id?: string; //ObjectId from mongodb gets parsed as string\n  name?: string;\n  controller?: string;\n  version?: string;\n  about?: string;\n  maxTemp?: number; //in °C\n  minTemp?: number; //in °C\n  location?: string;\n  assignedUsers?: _UserLight[]; //could be present if the user is admin to this chamber, otherwise this won't be present\n  testPerformed?: { testId: string }[];\n  createdOn?: Date;\n  maxNoOfChannels?: number;\n  isConnected?: Boolean;\n  lastSeen?: Date;\n  accessType?: 'admin' | 'write' | 'read'; //only specific to front end\n  apiKey?:string;\n}\n\n//what you need to send while creating a new chamber\nexport class TestChamber {\n  constructor(\n    public _id?: string,\n    public name?: string,\n    public controller?: string,\n    public version?: string,\n    public about?: string,\n    public maxTemp?: number,\n    public minTemp?: number,\n    public location?: string,\n    public assignedUsers?: any,\n    public maxNoOfChannels?: number\n  ) {\n    this.maxNoOfChannels = 1;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/TestChamberService.html":{"url":"injectables/TestChamberService.html","title":"injectable - TestChamberService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  TestChamberService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/test-chamber.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                createNewTestChamber\n                            \n                            \n                                createTest\n                            \n                            \n                                deleteTest\n                            \n                            \n                                deleteTestChamber\n                            \n                            \n                                downloadTestResult\n                            \n                            \n                                    Private\n                                errorHandler\n                            \n                            \n                                forceStatus\n                            \n                            \n                                getAllTests\n                            \n                            \n                                getAPIKey\n                            \n                            \n                                getChambers\n                            \n                            \n                                getConnectionStatus\n                            \n                            \n                                getLiveTests\n                            \n                            \n                                getQuickResponse\n                            \n                            \n                                getTestData\n                            \n                            \n                                updateTestChamber\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/test-chamber.service.ts:17\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        createNewTestChamber\n                        \n                    \n                \n            \n            \n                \ncreateNewTestChamber(chamberConfig: _TestChamber)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/test-chamber.service.ts:31\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    chamberConfig\n                                    \n                                                _TestChamber\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createTest\n                        \n                    \n                \n            \n            \n                \ncreateTest(chamberId: string, testConfig: Test)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/test-chamber.service.ts:55\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    chamberId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    testConfig\n                                    \n                                                Test\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        deleteTest\n                        \n                    \n                \n            \n            \n                \ndeleteTest(chamberId: string, testId: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/test-chamber.service.ts:84\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    chamberId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    testId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        deleteTestChamber\n                        \n                    \n                \n            \n            \n                \ndeleteTestChamber(chamberId: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/test-chamber.service.ts:39\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    chamberId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        downloadTestResult\n                        \n                    \n                \n            \n            \n                \ndownloadTestResult(chamberId: string, testId: string, channelNo: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/test-chamber.service.ts:155\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    chamberId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    testId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    channelNo\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        errorHandler\n                        \n                    \n                \n            \n            \n                \n                    \n                    errorHandler(error: HttpErrorResponse)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/test-chamber.service.ts:181\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    error\n                                    \n                                                HttpErrorResponse\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        forceStatus\n                        \n                    \n                \n            \n            \n                \nforceStatus(chamberId: string, testId: string, forceStatus: string | null)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/test-chamber.service.ts:141\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    chamberId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    testId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    forceStatus\n                                    \n                                            string | null\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getAllTests\n                        \n                    \n                \n            \n            \n                \ngetAllTests()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/test-chamber.service.ts:69\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getAPIKey\n                        \n                    \n                \n            \n            \n                \ngetAPIKey(chamberId: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/test-chamber.service.ts:110\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    chamberId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getChambers\n                        \n                    \n                \n            \n            \n                \ngetChambers(chamberId: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/test-chamber.service.ts:20\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    chamberId\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        undefined\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getConnectionStatus\n                        \n                    \n                \n            \n            \n                \ngetConnectionStatus(chamberId: string, delay: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/test-chamber.service.ts:95\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    chamberId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    delay\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        10000\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getLiveTests\n                        \n                    \n                \n            \n            \n                \ngetLiveTests()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/test-chamber.service.ts:64\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getQuickResponse\n                        \n                    \n                \n            \n            \n                \ngetQuickResponse(chamberId: string, testId: string, channelNo: number, indexAfter: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/test-chamber.service.ts:122\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    chamberId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    testId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    channelNo\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    indexAfter\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        0\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getTestData\n                        \n                    \n                \n            \n            \n                \ngetTestData(chamberId: string, testId: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/test-chamber.service.ts:75\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    chamberId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    testId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateTestChamber\n                        \n                    \n                \n            \n            \n                \nupdateTestChamber(chamberConfig: _TestChamber)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/test-chamber.service.ts:48\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    chamberConfig\n                                    \n                                                _TestChamber\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Test } from 'src/app/models/Test';\nimport { _TestChamber } from './../models/TestChamber';\nimport {\n  HttpClient,\n  HttpErrorResponse,\n  HttpHeaders,\n  HttpParams,\n} from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { throwError, Observable } from 'rxjs';\nimport { retry, catchError, share } from 'rxjs/operators';\nimport { environment } from 'src/environments/environment';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class TestChamberService {\n  constructor(private http: HttpClient) {}\n\n  getChambers(chamberId: any = undefined) {\n    let params = new HttpParams();\n    if (chamberId) {\n      params = params.set('chamberId', chamberId);\n    }\n    return this.http\n      .get(`${environment.apiUri}/api/protected/test-chamber`, {\n        params: params,\n      })\n      .pipe(share(), retry(3), catchError(this.errorHandler));\n  }\n  createNewTestChamber(chamberConfig: _TestChamber) {\n    //angular stripped out the key which has the value undefined.\n    return this.http\n      .post(`${environment.apiUri}/api/protected/test-chamber`, {\n        ...chamberConfig,\n      })\n      .pipe(retry(3), catchError(this.errorHandler));\n  }\n  deleteTestChamber(chamberId: string) {\n    let params = new HttpParams();\n    params = params.set('chamberId', chamberId);\n    return this.http\n      .delete(`${environment.apiUri}/api/protected/test-chamber`, {\n        params: params,\n      })\n      .pipe(retry(3), catchError(this.errorHandler));\n  }\n  updateTestChamber(chamberConfig: _TestChamber) {\n    return this.http\n      .put(`${environment.apiUri}/api/protected/test-chamber`, {\n        ...chamberConfig,\n      })\n      .pipe(retry(3), catchError(this.errorHandler));\n  }\n  createTest(chamberId: string, testConfig: Test) {\n    //console.log(testConfig);\n    return this.http\n      .post(`${environment.apiUri}/api/protected/test-chamber/create-test`, {\n        chamberId: chamberId,\n        testConfig: testConfig,\n      })\n      .pipe(retry(3), catchError(this.errorHandler));\n  }\n  getLiveTests() {\n    return this.http\n      .get(`${environment.apiUri}/api/protected/test-chamber/live-tests`)\n      .pipe(retry(3), catchError(this.errorHandler));\n  }\n  getAllTests() {\n    return this.http\n      .get(`${environment.apiUri}/api/protected/test-chamber/all-tests`)\n      .pipe(retry(3), catchError(this.errorHandler));\n  }\n\n  getTestData(chamberId: string, testId: string): Observable {\n    return this.http\n      .post(`${environment.apiUri}/api/protected/test-chamber/get-test-data`, {\n        chamberId: chamberId,\n        testId: testId,\n      })\n      .pipe(retry(3), catchError(this.errorHandler));\n  }\n\n  deleteTest(chamberId: string, testId: string): Observable {\n    let params = new HttpParams();\n    params = params.set('chamberId', chamberId);\n    params = params.set('testId', testId);\n    return this.http\n      .delete(`${environment.apiUri}/api/protected/test-chamber/delete-test`, {\n        params: params,\n      })\n      .pipe(retry(3), catchError(this.errorHandler));\n  }\n\n  getConnectionStatus(chamberId: string, delay: number = 10000) {\n    let params = new HttpParams();\n    if (chamberId) {\n      params = params.set('chamberId', chamberId);\n    }\n    if (delay) {\n      params = params.set('delay', delay);\n    }\n    return this.http\n      .get(`${environment.apiUri}/api/protected/test-chamber/is-connected`, {\n        params: params,\n      })\n      .pipe(retry(3), catchError(this.errorHandler));\n  }\n\n  getAPIKey(chamberId: string) {\n    let params = new HttpParams();\n    if (chamberId) {\n      params = params.set('chamberId', chamberId);\n    }\n    return this.http\n      .get(`${environment.apiUri}/api/protected/test-chamber/api-key`, {\n        params: params,\n      })\n      .pipe(retry(3), catchError(this.errorHandler));\n  }\n\n  getQuickResponse(\n    chamberId: string,\n    testId: string,\n    channelNo: number,\n    indexAfter: number = 0\n  ): Observable {\n    return this.http\n      .post(\n        `${environment.apiUri}/api/protected/test-chamber/get-test-result`,\n        {\n          chamberId: chamberId,\n          testId: testId,\n          channelNo: channelNo,\n          indexAfter: indexAfter,\n        }\n      )\n      .pipe(retry(3), catchError(this.errorHandler));\n  }\n\n  forceStatus(\n    chamberId: string,\n    testId: string,\n    forceStatus: string | null\n  ): Observable {\n    return this.http\n      .post(`${environment.apiUri}/api/protected/test-chamber/force-status`, {\n        chamberId: chamberId,\n        testId: testId,\n        forcedStatus: forceStatus,\n      })\n      .pipe(retry(3), catchError(this.errorHandler));\n  }\n\n  downloadTestResult(\n    chamberId: string,\n    testId: string,\n    channelNo: number\n  ): Observable {\n    const option = {\n      headers: new HttpHeaders({\n        'Content-Type': 'text/csv',\n      }),\n      responseType: 'blob' as const,\n      observe: 'response' as const,\n    };\n    const body = {\n      chamberId: chamberId,\n      testId: testId,\n      channelNo: channelNo,\n    };\n    return this.http\n      .post(\n        `${environment.apiUri}/api/protected/test-chamber/download-test-result`,\n        body,\n        option\n      )\n      .pipe(catchError(this.errorHandler));\n  }\n\n  private errorHandler(error: HttpErrorResponse) {\n    if (error.status === 0) {\n      console.error(\n        `Something went wrong with the network. Error status : ${error.status}`\n      );\n    } else {\n      console.error(`Backed has rejected the request. ${error.error}`);\n    }\n    return throwError(() => new Error(error.error));\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/TestChambersComponent.html":{"url":"components/TestChambersComponent.html","title":"component - TestChambersComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  TestChambersComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/body/devices/test-chambers/test-chambers.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n                    OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-test-chambers\n            \n\n            \n                styleUrls\n                ./test-chambers.component.css\n            \n\n\n\n            \n                templateUrl\n                ./test-chambers.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                isAnyTestChamberAvailable\n                            \n                            \n                                subs\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(_testChamber: TestChamberService)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/body/devices/test-chambers/test-chambers.component.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        _testChamber\n                                                  \n                                                        \n                                                                        TestChamberService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnDestroy\n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/body/devices/test-chambers/test-chambers.component.ts:25\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/body/devices/test-chambers/test-chambers.component.ts:15\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        isAnyTestChamberAvailable\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/components/body/devices/test-chambers/test-chambers.component.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        subs\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Subscription[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/components/body/devices/test-chambers/test-chambers.component.ts:11\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Subscription } from 'rxjs';\nimport { TestChamberService } from './../../../../services/test-chamber.service';\nimport { Component, OnInit, OnDestroy } from '@angular/core';\n\n@Component({\n  selector: 'app-test-chambers',\n  templateUrl: './test-chambers.component.html',\n  styleUrls: ['./test-chambers.component.css'],\n})\nexport class TestChambersComponent implements OnInit, OnDestroy {\n  subs: Subscription[] = [];\n  isAnyTestChamberAvailable: boolean = false;\n  constructor(private _testChamber: TestChamberService) {}\n\n  ngOnInit(): void {\n    const sub = this._testChamber.getChambers().subscribe({\n      next: (data:any) => {\n        if(data.length>0){\n          this.isAnyTestChamberAvailable = true;\n        }\n      },\n    });\n    this.subs.push(sub);\n  }\n  ngOnDestroy(): void {\n    this.subs.forEach((sub) => {\n      sub.unsubscribe();\n    });\n  }\n}\n\n    \n\n    \n        \n  \n    \n       lab_panel \n    \n  \n  \n    \n      Test Chamber\n      \n        Our cutting-edge test chamber is designed to provide a comprehensive\n        solution for testing battery cells. With the ability to control the test\n        process through our website, store data in the cloud, and perform\n        computations on that data, our test chamber offers unparalleled\n        efficiency and accuracy.\n      \n    \n  \n  \n    \n      \n        \n          Create a new chamber\n        \n      \n      \n        \n          Existing chambers\n        \n      \n    \n  \n\n\n  \n    See Features\n  \n\n\n  \n    \n      \n        \n          \n            \n              \n                Remote control: Our test chamber can be\n                controlled from anywhere in the world through our website,\n                allowing you to start and stop tests, adjust parameters, and\n                monitor progress without needing to be on site.\n              \n              \n                Cloud storage: Data from each test is\n                automatically uploaded to the cloud, where it can be securely\n                stored and accessed from anywhere. You'll never have to worry\n                about losing important data or struggling to access it later.\n              \n              \n                Powerful computation: Our test chamber comes\n                equipped with advanced software that can perform complex\n                computations on the data gathered during each test. This allows\n                you to gain insights into the performance of the battery cells\n                and make informed decisions about future testing or product\n                development.\n              \n              \n                Versatile testing: Our test chamber is capable\n                of testing a wide range of battery cells, including those used\n                in electric vehicles, medical devices, and consumer electronics.\n                With adjustable testing parameters, you can customize each test\n                to your specific needs.\n              \n              \n                User-friendly interface: Our website offers a\n                user-friendly interface that makes it easy to control the test\n                chamber, monitor progress, and analyze data. You don't need to\n                be a technical expert to use our test chamber effectively.\n              \n            \n          \n        \n      \n      \n        \n      \n    \n  \n\n\n    \n\n    \n                \n                    ./test-chambers.component.css\n                \n                #test-chamber-image {\n  background-image: url(\"/e_mobility/i-bms/assets/test_chamber.png\");\n}\n.image-container {\n  height: 300px;\n  background-attachment: scroll;\n  background-repeat: no-repeat;\n  background-size: contain;\n  background-position: center;\n}\n.text-center span {\n  font-size: 200px;\n  color: #19151540;\n}\n\n.about {\n  color: rgba(33, 37, 41, 0.75);\n}\n.test-chamber-features {\n  margin-top: 40px;\n}\n\n.test-chamber-features h2 {\n  font-size: 28px;\n  font-weight: bold;\n  margin-bottom: 20px;\n}\n\n.test-chamber-features ul {\n  list-style: none;\n  margin: 0;\n  padding: 0;\n}\n.btn-primary {\n  background-color: rgb(0, 113, 184);\n}\n\n.test-chamber-features li {\n  margin-bottom: 10px;\n  line-height: 1.5;\n  color: rgba(33, 37, 41, 0.75);\n}\n\n.test-chamber-features strong {\n  font-weight: bold;\n}\n.intro-container {\n  padding-top: 20px;\n  padding-bottom: 50px;\n}\n.control div {\n  padding: 10px;\n}\n#collapse-btn {\n  height: 50px;\n}\n\nbutton {\n  background-color: white;\n  border: none;\n  padding: 10px 20px;\n  font-size: 18px;\n  color: #333;\n  text-transform: uppercase;\n  letter-spacing: 2px;\n  position: relative;\n  overflow: hidden;\n  z-index: 0;\n}\n\nbutton::before {\n  content: \"\";\n  position: absolute;\n  top: -20px;\n  left: -20px;\n  right: -20px;\n  bottom: -20px;\n  background: linear-gradient(\n    45deg,\n    rgba(255, 255, 255, 0.4),\n    rgba(0, 0, 0, 0.2)\n  );\n  filter: blur(30px);\n  z-index: -1;\n}\n\nbutton:hover::before {\n  filter: blur(10px);\n}\n\n.control button {\n  height: 100%;\n  width: 100%;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '             lab_panel                   Test Chamber              Our cutting-edge test chamber is designed to provide a comprehensive        solution for testing battery cells. With the ability to control the test        process through our website, store data in the cloud, and perform        computations on that data, our test chamber offers unparalleled        efficiency and accuracy.                                          Create a new chamber                                      Existing chambers                          See Features                                                                          Remote control: Our test chamber can be                controlled from anywhere in the world through our website,                allowing you to start and stop tests, adjust parameters, and                monitor progress without needing to be on site.                                            Cloud storage: Data from each test is                automatically uploaded to the cloud, where it can be securely                stored and accessed from anywhere. You\\'ll never have to worry                about losing important data or struggling to access it later.                                            Powerful computation: Our test chamber comes                equipped with advanced software that can perform complex                computations on the data gathered during each test. This allows                you to gain insights into the performance of the battery cells                and make informed decisions about future testing or product                development.                                            Versatile testing: Our test chamber is capable                of testing a wide range of battery cells, including those used                in electric vehicles, medical devices, and consumer electronics.                With adjustable testing parameters, you can customize each test                to your specific needs.                                            User-friendly interface: Our website offers a                user-friendly interface that makes it easy to control the test                chamber, monitor progress, and analyze data. You don\\'t need to                be a technical expert to use our test chamber effectively.                                                                            '\n    var COMPONENTS = [{'name': 'AddBatteryPackComponent', 'selector': 'app-add-battery-pack'},{'name': 'AddCellsComponent', 'selector': 'app-add-cells'},{'name': 'AddTestChamberComponent', 'selector': 'app-add-test-chamber'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BatteryPacksComponent', 'selector': 'app-battery-packs'},{'name': 'BatteryTestComponent', 'selector': 'app-battery-test'},{'name': 'CellsComponent', 'selector': 'app-cells'},{'name': 'CreateNewTestComponent', 'selector': 'app-create-new-test'},{'name': 'DashboardComponent', 'selector': 'app-dashboard'},{'name': 'DeviceDataComponent', 'selector': 'app-device-data'},{'name': 'DevicesComponent', 'selector': 'app-devices'},{'name': 'DevicesDefaultComponent', 'selector': 'app-devices-default'},{'name': 'DocsComponent', 'selector': 'app-docs'},{'name': 'EditBatteryPackComponent', 'selector': 'app-edit-battery-pack'},{'name': 'EditCellsComponent', 'selector': 'app-edit-cells'},{'name': 'EditTestChamberComponent', 'selector': 'app-edit-test-chamber'},{'name': 'FootNavComponent', 'selector': 'app-foot-nav'},{'name': 'HeadNavComponent', 'selector': 'app-head-nav'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'NoResultComponent', 'selector': 'app-no-result'},{'name': 'ShowAllTestsResultComponent', 'selector': 'app-show-all-tests-result'},{'name': 'ShowTestResultComponent', 'selector': 'app-show-test-result'},{'name': 'TestChambersComponent', 'selector': 'app-test-chambers'},{'name': 'ViewBatteryPacksComponent', 'selector': 'app-view-battery-packs'},{'name': 'ViewCellsComponent', 'selector': 'app-view-cells'},{'name': 'ViewTestChambersComponent', 'selector': 'app-view-test-chambers'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'TestChambersComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/TestChambersModule.html":{"url":"modules/TestChambersModule.html","title":"module - TestChambersModule","body":"\n                   \n\n\n\n\n    Modules\n    TestChambersModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_TestChambersModule\n\n\n\ncluster_TestChambersModule_imports\n\n\n\ncluster_TestChambersModule_declarations\n\n\n\n\nAddTestChamberComponent\n\nAddTestChamberComponent\n\n\n\nTestChambersModule\n\nTestChambersModule\n\nTestChambersModule -->\n\nAddTestChamberComponent->TestChambersModule\n\n\n\n\n\nEditTestChamberComponent\n\nEditTestChamberComponent\n\nTestChambersModule -->\n\nEditTestChamberComponent->TestChambersModule\n\n\n\n\n\nTestChambersComponent\n\nTestChambersComponent\n\nTestChambersModule -->\n\nTestChambersComponent->TestChambersModule\n\n\n\n\n\nViewTestChambersComponent\n\nViewTestChambersComponent\n\nTestChambersModule -->\n\nViewTestChambersComponent->TestChambersModule\n\n\n\n\n\nNgbPagination\n\nNgbPagination\n\nTestChambersModule -->\n\nNgbPagination->TestChambersModule\n\n\n\n\n\nSharedModule\n\nSharedModule\n\nTestChambersModule -->\n\nSharedModule->TestChambersModule\n\n\n\n\n\nTestChambersRoutingModule\n\nTestChambersRoutingModule\n\nTestChambersModule -->\n\nTestChambersRoutingModule->TestChambersModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/test-chambers/test-chambers.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            AddTestChamberComponent\n                        \n                        \n                            EditTestChamberComponent\n                        \n                        \n                            TestChambersComponent\n                        \n                        \n                            ViewTestChambersComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            NgbPagination\n                        \n                        \n                            SharedModule\n                        \n                        \n                            TestChambersRoutingModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgSelectModule } from '@ng-select/ng-select';\nimport { SharedModule } from './../shared/shared.module';\nimport { NgModule } from '@angular/core';\n\nimport { TestChambersRoutingModule } from './test-chambers-routing.module';\nimport { TestChambersComponent } from '../components/body/devices/test-chambers/test-chambers.component';\nimport { AddTestChamberComponent } from '../components/body/devices/test-chambers/add-test-chamber/add-test-chamber.component';\nimport { ViewTestChambersComponent } from '../components/body/devices/test-chambers/view-test-chambers/view-test-chambers.component';\nimport { EditTestChamberComponent } from '../components/body/devices/test-chambers/edit-test-chamber/edit-test-chamber.component';\nimport { NgbPagination } from '@ng-bootstrap/ng-bootstrap';\n\n\n@NgModule({\n  declarations: [\n    TestChambersComponent,\n    AddTestChamberComponent,\n    ViewTestChambersComponent,\n    EditTestChamberComponent\n  ],\n  imports: [\n    TestChambersRoutingModule,\n    SharedModule,\n    NgSelectModule,\n    NgbPagination\n  ]\n})\nexport class TestChambersModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/TestChambersRoutingModule.html":{"url":"modules/TestChambersRoutingModule.html","title":"module - TestChambersRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    TestChambersRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/test-chambers/test-chambers-routing.module.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { AddTestChamberComponent } from './../components/body/devices/test-chambers/add-test-chamber/add-test-chamber.component';\nimport { EditTestChamberComponent } from './../components/body/devices/test-chambers/edit-test-chamber/edit-test-chamber.component';\nimport { ViewTestChambersComponent } from './../components/body/devices/test-chambers/view-test-chambers/view-test-chambers.component';\nimport { TestChambersComponent } from './../components/body/devices/test-chambers/test-chambers.component';\nimport { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\n\nconst routes: Routes = [\n  { path: 'view', component: ViewTestChambersComponent },\n  { path: 'edit/:chamberId', component: EditTestChamberComponent },\n  { path: 'add', component: AddTestChamberComponent },\n  { path: '', component: TestChambersComponent },\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class TestChambersRoutingModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/TestChannel.html":{"url":"interfaces/TestChannel.html","title":"interface - TestChannel","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  TestChannel\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/TestResult.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            channelNo\n                                        \n                                \n                                \n                                        \n                                            chMultiplier\n                                        \n                                \n                                \n                                        \n                                            chMultiplierIndex\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            onRows\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            rowMultiplier\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            rowMultiplierIndex\n                                        \n                                \n                                \n                                        \n                                            statusCh\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            statusRow\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            totalRows\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        channelNo\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        channelNo:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        chMultiplier\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        chMultiplier:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        chMultiplierIndex\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        chMultiplierIndex:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        onRows\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        onRows:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        rowMultiplier\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        rowMultiplier:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        rowMultiplierIndex\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        rowMultiplierIndex:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        statusCh\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        statusCh:     \"Running\" | \"Paused\" | \"Stopped\" | \"Scheduled\" | \"Completed\"\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     \"Running\" | \"Paused\" | \"Stopped\" | \"Scheduled\" | \"Completed\"\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        statusRow\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        statusRow:     \"Running\" | \"Paused\" | \"Stopped\" | \"Scheduled\" | \"Completed\"\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     \"Running\" | \"Paused\" | \"Stopped\" | \"Scheduled\" | \"Completed\"\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        totalRows\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        totalRows:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { PayLoad, TestFormat } from './FormFields';\n\nexport interface _TestResultLight {\n  _id?: string;\n  createdOnChamber?: string;\n  chamberName?: string;\n  testName?: string;\n  testDescription?: string;\n  status?: 'Running' | 'Paused' | 'Stopped' | 'Scheduled' | 'Completed';\n  channels?: TestChannel[];\n  createdOn?: Date;\n}\n\nexport interface TestChannel {\n  channelNo: number;\n  statusCh: 'Running' | 'Paused' | 'Stopped' | 'Scheduled' | 'Completed';\n  chMultiplierIndex: number;\n  chMultiplier: number;\n  onRows?: number;\n  totalRows?: number;\n  statusRow?: 'Running' | 'Paused' | 'Stopped' | 'Scheduled' | 'Completed';\n  rowMultiplierIndex?: number;\n  rowMultiplier?: number;\n}\nexport interface TestChannelDeepChannel {\n  channelNumber: number;\n  status: 'Running' | 'Paused' | 'Stopped' | 'Scheduled' | 'Completed';\n  currentMultiplierIndex: number;\n  multiplier: number;\n  testFormats: TestFormat[];\n  rows?: RowInfo[];\n  chStartDate?: Date;\n  chEndDate?: Date;\n}\nexport interface _TestResultDeep {\n  _id?: string;\n  chamberName?: string;\n  createdOnChamber?: string;\n  testName?: string;\n  testDesc?: string;\n  status?: 'Running' | 'Paused' | 'Stopped' | 'Scheduled' | 'Completed';\n  channels: TestChannelDeepChannel[];\n  accessType: 'admin' | 'read' | 'write';\n  testStartDate?: Date;\n  testEndDate?: Date;\n  testScheduleDate?: Date;\n}\n\nexport interface MeasuredParameters {\n  current?: number[];\n  voltage?: number[];\n  chamberTemp?: number[];\n  chamberHum?: number[];\n  cellTemp?: SensorObj[];\n  time?: number[];\n}\nexport interface SensorObj {\n  sensorId: number;\n  values: number[];\n}\n\nexport interface RowInfo {\n  rowNo: number;\n  measuredParameters?: MeasuredParameters;\n  derivedParameters?: any;\n  status: 'Completed' | 'Running' | 'Scheduled' | 'Stopped' | 'Paused';\n  currentMultiplierIndex: number;\n  multiplier: number;\n  rowStartDate?: Date;\n  rowEndDate?: Date;\n}\n\nexport interface Channel {\n  rows?: RowInfo[];\n  channelNo: number;\n  status: 'Completed' | 'Running' | 'Scheduled' | 'Stopped' | 'Paused';\n  currentMultiplierIndex?: number;\n  multiplier?: number;\n}\n\nexport interface TestResultDocument {\n  channels: Channel[];\n}\n\nexport interface QuickResponseMeasurement {\n  channelNo: Number;\n  statusCh: 'Running' | 'Paused' | 'Stopped' | 'Scheduled' | 'Completed';\n  measuredParameters: MeasuredParameters;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/TestChannelDeepChannel.html":{"url":"interfaces/TestChannelDeepChannel.html","title":"interface - TestChannelDeepChannel","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  TestChannelDeepChannel\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/TestResult.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            channelNumber\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            chEndDate\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            chStartDate\n                                        \n                                \n                                \n                                        \n                                            currentMultiplierIndex\n                                        \n                                \n                                \n                                        \n                                            multiplier\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            rows\n                                        \n                                \n                                \n                                        \n                                            status\n                                        \n                                \n                                \n                                        \n                                            testFormats\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        channelNumber\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        channelNumber:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        chEndDate\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        chEndDate:         Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Date\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        chStartDate\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        chStartDate:         Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Date\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        currentMultiplierIndex\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        currentMultiplierIndex:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        multiplier\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        multiplier:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        rows\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        rows:         RowInfo[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         RowInfo[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        status\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        status:     \"Running\" | \"Paused\" | \"Stopped\" | \"Scheduled\" | \"Completed\"\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     \"Running\" | \"Paused\" | \"Stopped\" | \"Scheduled\" | \"Completed\"\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        testFormats\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        testFormats:     TestFormat[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     TestFormat[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { PayLoad, TestFormat } from './FormFields';\n\nexport interface _TestResultLight {\n  _id?: string;\n  createdOnChamber?: string;\n  chamberName?: string;\n  testName?: string;\n  testDescription?: string;\n  status?: 'Running' | 'Paused' | 'Stopped' | 'Scheduled' | 'Completed';\n  channels?: TestChannel[];\n  createdOn?: Date;\n}\n\nexport interface TestChannel {\n  channelNo: number;\n  statusCh: 'Running' | 'Paused' | 'Stopped' | 'Scheduled' | 'Completed';\n  chMultiplierIndex: number;\n  chMultiplier: number;\n  onRows?: number;\n  totalRows?: number;\n  statusRow?: 'Running' | 'Paused' | 'Stopped' | 'Scheduled' | 'Completed';\n  rowMultiplierIndex?: number;\n  rowMultiplier?: number;\n}\nexport interface TestChannelDeepChannel {\n  channelNumber: number;\n  status: 'Running' | 'Paused' | 'Stopped' | 'Scheduled' | 'Completed';\n  currentMultiplierIndex: number;\n  multiplier: number;\n  testFormats: TestFormat[];\n  rows?: RowInfo[];\n  chStartDate?: Date;\n  chEndDate?: Date;\n}\nexport interface _TestResultDeep {\n  _id?: string;\n  chamberName?: string;\n  createdOnChamber?: string;\n  testName?: string;\n  testDesc?: string;\n  status?: 'Running' | 'Paused' | 'Stopped' | 'Scheduled' | 'Completed';\n  channels: TestChannelDeepChannel[];\n  accessType: 'admin' | 'read' | 'write';\n  testStartDate?: Date;\n  testEndDate?: Date;\n  testScheduleDate?: Date;\n}\n\nexport interface MeasuredParameters {\n  current?: number[];\n  voltage?: number[];\n  chamberTemp?: number[];\n  chamberHum?: number[];\n  cellTemp?: SensorObj[];\n  time?: number[];\n}\nexport interface SensorObj {\n  sensorId: number;\n  values: number[];\n}\n\nexport interface RowInfo {\n  rowNo: number;\n  measuredParameters?: MeasuredParameters;\n  derivedParameters?: any;\n  status: 'Completed' | 'Running' | 'Scheduled' | 'Stopped' | 'Paused';\n  currentMultiplierIndex: number;\n  multiplier: number;\n  rowStartDate?: Date;\n  rowEndDate?: Date;\n}\n\nexport interface Channel {\n  rows?: RowInfo[];\n  channelNo: number;\n  status: 'Completed' | 'Running' | 'Scheduled' | 'Stopped' | 'Paused';\n  currentMultiplierIndex?: number;\n  multiplier?: number;\n}\n\nexport interface TestResultDocument {\n  channels: Channel[];\n}\n\nexport interface QuickResponseMeasurement {\n  channelNo: Number;\n  statusCh: 'Running' | 'Paused' | 'Stopped' | 'Scheduled' | 'Completed';\n  measuredParameters: MeasuredParameters;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/TestDataService.html":{"url":"injectables/TestDataService.html","title":"injectable - TestDataService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  TestDataService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/test-data.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                errorHandler\n                            \n                            \n                                getTestDataDeep\n                            \n                            \n                                getTestDataLight\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/test-data.service.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        errorHandler\n                        \n                    \n                \n            \n            \n                \n                    \n                    errorHandler(error: HttpErrorResponse)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/test-data.service.ts:22\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    error\n                                    \n                                                HttpErrorResponse\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getTestDataDeep\n                        \n                    \n                \n            \n            \n                \ngetTestDataDeep()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/test-data.service.ts:18\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getTestDataLight\n                        \n                    \n                \n            \n            \n                \ngetTestDataLight()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/test-data.service.ts:14\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { TestResultDeep, TestResultLight } from './../models/TestResult';\nimport { catchError,retry } from 'rxjs/operators';\nimport { throwError } from 'rxjs';\nimport { HttpClient, HttpErrorResponse } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class TestDataService {\n\n  constructor(private http:HttpClient) { }\n\n  getTestDataLight(){\n    return this.http.get('/e_mobility/i-bms/assets/TestDataLight.json').pipe(retry(3),catchError(this.errorHandler));\n  }\n\n  getTestDataDeep(){\n    return this.http.get('/e_mobility/i-bms/assets/TestDataDeep.json').pipe(retry(3),catchError(this.errorHandler));\n  }\n\n  private errorHandler(error:HttpErrorResponse){\n    if(error.status === 0){\n      console.error(`Something went wrong with the network. Error status : ${error.status}`);\n    }else{\n      console.error(`Backed has rejected the request. ${error.error}`);\n    }\n    return throwError(() => new Error(error.error));\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/TestFormat.html":{"url":"interfaces/TestFormat.html","title":"interface - TestFormat","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  TestFormat\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/FormFields.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            ambTemp\n                                        \n                                \n                                \n                                        \n                                            fields\n                                        \n                                \n                                \n                                        \n                                            multiplier\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                                \n                                        \n                                            value\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        ambTemp\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        ambTemp:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        fields\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        fields:     (SelectField | TextField | InputField | FileField)[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     (SelectField | TextField | InputField | FileField)[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        multiplier\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        multiplier:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        value\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        value:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { DriveCycle } from 'src/app/models/DriveCycle';\nexport interface SelectField {\n  value: any;\n  type: string;\n  id: number;\n  options: string[];\n  visibility: boolean;\n  template_width: number;\n}\nexport interface TextField {\n  type: 'text';\n  id: number;\n  value: 'at' | 'for' | 'Run' | 'until' | 'volt.' | 'seconds.';\n  visibility: boolean;\n  template_width: number;\n}\nexport interface InputField {\n  type: 'input';\n  id: number;\n  value: any;\n  visibility: boolean;\n  template_width: number;\n}\n\nexport interface FileField {\n  type: 'file';\n  id: number;\n  value: DriveCycle | null;\n  visibility: boolean;\n  template_width: number;\n}\n\nexport interface TestFormat {\n  fields: (SelectField | TextField | InputField | FileField)[];\n  name: string;\n  value: number;\n  multiplier: number;\n  ambTemp: number;\n}\n\nconst testFormats: TestFormat[] = [\n  {\n    name: 'Do this for this long.',\n    value: 1,\n    fields: [\n      {\n        id: 1,\n        type: 'select',\n        options: ['Charge', 'Discharge', 'Rest', 'Hold'],\n        value: 'Charge',\n        visibility: true,\n        template_width: 2,\n      } as SelectField,\n      {\n        id: 2,\n        type: 'text',\n        value: 'at',\n        visibility: true,\n        template_width: 1,\n      } as TextField,\n      {\n        id: 3,\n        type: 'input',\n        value: null,\n        visibility: true,\n        template_width: 2,\n      } as InputField,\n      {\n        id: 4,\n        type: 'select',\n        options: ['C', 'A', 'W'],\n        value: 'C',\n        visibility: true,\n        template_width: 2,\n      } as SelectField,\n      {\n        id: 5,\n        type: 'text',\n        value: 'for',\n        visibility: true,\n        template_width: 1,\n      } as TextField,\n      {\n        id: 6,\n        type: 'input',\n        value: null,\n        visibility: true,\n        template_width: 2,\n      } as InputField,\n      {\n        id: 7,\n        type: 'select',\n        options: ['hours.', 'minutes.', 'seconds.'],\n        value: 'hours.',\n        visibility: true,\n        template_width: 2,\n      } as SelectField,\n    ],\n    multiplier: 1,\n    ambTemp: 25,\n  },\n  {\n    name: 'Do this until this happen.',\n    value: 2,\n    fields: [\n      {\n        id: 1,\n        type: 'select',\n        options: ['Charge', 'Discharge'],\n        value: 'Charge',\n        visibility: true,\n        template_width: 2,\n      } as SelectField,\n      {\n        id: 2,\n        type: 'text',\n        value: 'at',\n        visibility: true,\n        template_width: 1,\n      } as SelectField,\n      {\n        id: 3,\n        type: 'input',\n        value: null,\n        visibility: true,\n        template_width: 2,\n      } as InputField,\n      {\n        id: 4,\n        type: 'select',\n        options: ['C', 'A', 'W'],\n        value: 'C',\n        visibility: true,\n        template_width: 2,\n      } as SelectField,\n      {\n        id: 5,\n        type: 'text',\n        value: 'until',\n        visibility: true,\n        template_width: 1,\n      } as TextField,\n      {\n        id: 6,\n        type: 'input',\n        value: null,\n        visibility: true,\n        template_width: 2,\n      } as InputField,\n      {\n        id: 7,\n        type: 'text',\n        value: 'volt.',\n        visibility: true,\n        template_width: 2,\n      } as TextField,\n    ],\n    multiplier: 1,\n    ambTemp: 25,\n  },\n  {\n    name: 'Run X.',\n    value: 3,\n    fields: [\n      {\n        id: 1,\n        type: 'text',\n        value: 'Run',\n        visibility: true,\n        template_width: 1,\n      } as TextField,\n      {\n        id: 2,\n        type: 'file',\n        value: null,\n        visibility: true,\n        template_width: 4,\n      } as FileField,\n      {\n        id: 3,\n        type: 'text',\n        value: 'for',\n        visibility: true,\n        template_width: 1,\n      } as TextField,\n      {\n        id: 4,\n        type: 'input',\n        value: null,\n        visibility: true,\n        template_width: 3,\n      } as InputField,\n      {\n        id: 3,\n        type: 'select',\n        options: ['hours.', 'minutes.', 'seconds.'],\n        value: 'hours.',\n        visibility: true,\n        template_width: 2,\n      } as SelectField,\n    ],\n    multiplier: 1,\n    ambTemp: 25,\n  },\n];\nexport interface ChannelFields {\n  channelNumber: number | undefined;\n  cellID: string | undefined;\n  testFormats: TestFormat[];\n  allTestFormat: TestFormat[][];\n  isRemoveRowButtonDisabled: boolean;\n  isAddRowButtonDisabled: boolean;\n  overallRowMultiplier: number;\n  availableChannels: number[] | undefined;\n}\nexport interface PayLoad {\n  channels: ChannelFields[] | undefined;\n  isConAmTe: boolean;\n  ambTemp: number;\n}\n\nexport { testFormats };\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/TestResultDocument.html":{"url":"interfaces/TestResultDocument.html","title":"interface - TestResultDocument","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  TestResultDocument\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/TestResult.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            channels\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        channels\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        channels:         Channel[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Channel[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { PayLoad, TestFormat } from './FormFields';\n\nexport interface _TestResultLight {\n  _id?: string;\n  createdOnChamber?: string;\n  chamberName?: string;\n  testName?: string;\n  testDescription?: string;\n  status?: 'Running' | 'Paused' | 'Stopped' | 'Scheduled' | 'Completed';\n  channels?: TestChannel[];\n  createdOn?: Date;\n}\n\nexport interface TestChannel {\n  channelNo: number;\n  statusCh: 'Running' | 'Paused' | 'Stopped' | 'Scheduled' | 'Completed';\n  chMultiplierIndex: number;\n  chMultiplier: number;\n  onRows?: number;\n  totalRows?: number;\n  statusRow?: 'Running' | 'Paused' | 'Stopped' | 'Scheduled' | 'Completed';\n  rowMultiplierIndex?: number;\n  rowMultiplier?: number;\n}\nexport interface TestChannelDeepChannel {\n  channelNumber: number;\n  status: 'Running' | 'Paused' | 'Stopped' | 'Scheduled' | 'Completed';\n  currentMultiplierIndex: number;\n  multiplier: number;\n  testFormats: TestFormat[];\n  rows?: RowInfo[];\n  chStartDate?: Date;\n  chEndDate?: Date;\n}\nexport interface _TestResultDeep {\n  _id?: string;\n  chamberName?: string;\n  createdOnChamber?: string;\n  testName?: string;\n  testDesc?: string;\n  status?: 'Running' | 'Paused' | 'Stopped' | 'Scheduled' | 'Completed';\n  channels: TestChannelDeepChannel[];\n  accessType: 'admin' | 'read' | 'write';\n  testStartDate?: Date;\n  testEndDate?: Date;\n  testScheduleDate?: Date;\n}\n\nexport interface MeasuredParameters {\n  current?: number[];\n  voltage?: number[];\n  chamberTemp?: number[];\n  chamberHum?: number[];\n  cellTemp?: SensorObj[];\n  time?: number[];\n}\nexport interface SensorObj {\n  sensorId: number;\n  values: number[];\n}\n\nexport interface RowInfo {\n  rowNo: number;\n  measuredParameters?: MeasuredParameters;\n  derivedParameters?: any;\n  status: 'Completed' | 'Running' | 'Scheduled' | 'Stopped' | 'Paused';\n  currentMultiplierIndex: number;\n  multiplier: number;\n  rowStartDate?: Date;\n  rowEndDate?: Date;\n}\n\nexport interface Channel {\n  rows?: RowInfo[];\n  channelNo: number;\n  status: 'Completed' | 'Running' | 'Scheduled' | 'Stopped' | 'Paused';\n  currentMultiplierIndex?: number;\n  multiplier?: number;\n}\n\nexport interface TestResultDocument {\n  channels: Channel[];\n}\n\nexport interface QuickResponseMeasurement {\n  channelNo: Number;\n  statusCh: 'Running' | 'Paused' | 'Stopped' | 'Scheduled' | 'Completed';\n  measuredParameters: MeasuredParameters;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/TestService.html":{"url":"injectables/TestService.html","title":"injectable - TestService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  TestService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/test.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                testWithAuth\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/test.service.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        testWithAuth\n                        \n                    \n                \n            \n            \n                \ntestWithAuth()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/test.service.ts:11\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class TestService {\n\n  constructor(private http:HttpClient) { \n  }\n  testWithAuth(){\n    return this.http.get(\"http://localhost:8080/api/protected\")\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/TextField.html":{"url":"interfaces/TextField.html","title":"interface - TextField","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  TextField\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/FormFields.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            template_width\n                                        \n                                \n                                \n                                        \n                                            type\n                                        \n                                \n                                \n                                        \n                                            value\n                                        \n                                \n                                \n                                        \n                                            visibility\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        template_width\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        template_width:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        type:     \n\n                                    \n                                \n\n\n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        value\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        value:     \"at\" | \"for\" | \"Run\" | \"until\" | \"volt.\" | \"seconds.\"\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     \"at\" | \"for\" | \"Run\" | \"until\" | \"volt.\" | \"seconds.\"\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        visibility\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        visibility:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { DriveCycle } from 'src/app/models/DriveCycle';\nexport interface SelectField {\n  value: any;\n  type: string;\n  id: number;\n  options: string[];\n  visibility: boolean;\n  template_width: number;\n}\nexport interface TextField {\n  type: 'text';\n  id: number;\n  value: 'at' | 'for' | 'Run' | 'until' | 'volt.' | 'seconds.';\n  visibility: boolean;\n  template_width: number;\n}\nexport interface InputField {\n  type: 'input';\n  id: number;\n  value: any;\n  visibility: boolean;\n  template_width: number;\n}\n\nexport interface FileField {\n  type: 'file';\n  id: number;\n  value: DriveCycle | null;\n  visibility: boolean;\n  template_width: number;\n}\n\nexport interface TestFormat {\n  fields: (SelectField | TextField | InputField | FileField)[];\n  name: string;\n  value: number;\n  multiplier: number;\n  ambTemp: number;\n}\n\nconst testFormats: TestFormat[] = [\n  {\n    name: 'Do this for this long.',\n    value: 1,\n    fields: [\n      {\n        id: 1,\n        type: 'select',\n        options: ['Charge', 'Discharge', 'Rest', 'Hold'],\n        value: 'Charge',\n        visibility: true,\n        template_width: 2,\n      } as SelectField,\n      {\n        id: 2,\n        type: 'text',\n        value: 'at',\n        visibility: true,\n        template_width: 1,\n      } as TextField,\n      {\n        id: 3,\n        type: 'input',\n        value: null,\n        visibility: true,\n        template_width: 2,\n      } as InputField,\n      {\n        id: 4,\n        type: 'select',\n        options: ['C', 'A', 'W'],\n        value: 'C',\n        visibility: true,\n        template_width: 2,\n      } as SelectField,\n      {\n        id: 5,\n        type: 'text',\n        value: 'for',\n        visibility: true,\n        template_width: 1,\n      } as TextField,\n      {\n        id: 6,\n        type: 'input',\n        value: null,\n        visibility: true,\n        template_width: 2,\n      } as InputField,\n      {\n        id: 7,\n        type: 'select',\n        options: ['hours.', 'minutes.', 'seconds.'],\n        value: 'hours.',\n        visibility: true,\n        template_width: 2,\n      } as SelectField,\n    ],\n    multiplier: 1,\n    ambTemp: 25,\n  },\n  {\n    name: 'Do this until this happen.',\n    value: 2,\n    fields: [\n      {\n        id: 1,\n        type: 'select',\n        options: ['Charge', 'Discharge'],\n        value: 'Charge',\n        visibility: true,\n        template_width: 2,\n      } as SelectField,\n      {\n        id: 2,\n        type: 'text',\n        value: 'at',\n        visibility: true,\n        template_width: 1,\n      } as SelectField,\n      {\n        id: 3,\n        type: 'input',\n        value: null,\n        visibility: true,\n        template_width: 2,\n      } as InputField,\n      {\n        id: 4,\n        type: 'select',\n        options: ['C', 'A', 'W'],\n        value: 'C',\n        visibility: true,\n        template_width: 2,\n      } as SelectField,\n      {\n        id: 5,\n        type: 'text',\n        value: 'until',\n        visibility: true,\n        template_width: 1,\n      } as TextField,\n      {\n        id: 6,\n        type: 'input',\n        value: null,\n        visibility: true,\n        template_width: 2,\n      } as InputField,\n      {\n        id: 7,\n        type: 'text',\n        value: 'volt.',\n        visibility: true,\n        template_width: 2,\n      } as TextField,\n    ],\n    multiplier: 1,\n    ambTemp: 25,\n  },\n  {\n    name: 'Run X.',\n    value: 3,\n    fields: [\n      {\n        id: 1,\n        type: 'text',\n        value: 'Run',\n        visibility: true,\n        template_width: 1,\n      } as TextField,\n      {\n        id: 2,\n        type: 'file',\n        value: null,\n        visibility: true,\n        template_width: 4,\n      } as FileField,\n      {\n        id: 3,\n        type: 'text',\n        value: 'for',\n        visibility: true,\n        template_width: 1,\n      } as TextField,\n      {\n        id: 4,\n        type: 'input',\n        value: null,\n        visibility: true,\n        template_width: 3,\n      } as InputField,\n      {\n        id: 3,\n        type: 'select',\n        options: ['hours.', 'minutes.', 'seconds.'],\n        value: 'hours.',\n        visibility: true,\n        template_width: 2,\n      } as SelectField,\n    ],\n    multiplier: 1,\n    ambTemp: 25,\n  },\n];\nexport interface ChannelFields {\n  channelNumber: number | undefined;\n  cellID: string | undefined;\n  testFormats: TestFormat[];\n  allTestFormat: TestFormat[][];\n  isRemoveRowButtonDisabled: boolean;\n  isAddRowButtonDisabled: boolean;\n  overallRowMultiplier: number;\n  availableChannels: number[] | undefined;\n}\nexport interface PayLoad {\n  channels: ChannelFields[] | undefined;\n  isConAmTe: boolean;\n  ambTemp: number;\n}\n\nexport { testFormats };\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ToastMsg.html":{"url":"interfaces/ToastMsg.html","title":"interface - ToastMsg","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ToastMsg\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/ToastMsg.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            color\n                                        \n                                \n                                \n                                        \n                                            msg\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            timeOut\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            type\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        color\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        color:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        msg\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        msg:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        timeOut\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        timeOut:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        type:     \"warning\" | \"alert\" | \"notification\"\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     \"warning\" | \"alert\" | \"notification\"\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface ToastMsg{\n    msg:string,\n    type?:'warning'|'alert'|'notification',\n    timeOut?:number,\n    color?:string\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UserService.html":{"url":"injectables/UserService.html","title":"injectable - UserService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  UserService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/user.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                createUser\n                            \n                            \n                                    Private\n                                errorHandler\n                            \n                            \n                                getUsers\n                            \n                            \n                                verifyUser\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/user.service.ts:27\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        createUser\n                        \n                    \n                \n            \n            \n                \ncreateUser(user: User)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/user.service.ts:37\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                            User\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        errorHandler\n                        \n                    \n                \n            \n            \n                \n                    \n                    errorHandler(error: HttpErrorResponse)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/user.service.ts:51\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    error\n                                    \n                                                HttpErrorResponse\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getUsers\n                        \n                    \n                \n            \n            \n                \ngetUsers(searchStr: String)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/user.service.ts:43\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    searchStr\n                                    \n                                                String\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        verifyUser\n                        \n                    \n                \n            \n            \n                \nverifyUser(user: User)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/user.service.ts:30\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                            User\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import {\n  HttpClient,\n  HttpErrorResponse,\n  HttpResponse,\n  HttpParams,\n} from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable, throwError } from 'rxjs';\nimport { retry, catchError, share } from 'rxjs/operators';\nimport { User } from '@auth0/auth0-angular';\nimport { environment } from 'src/environments/environment';\n\nexport interface _User {\n  _id?: string;\n  email?: string;\n  name?: string;\n}\nexport interface _UserLight {\n  _id?: string;\n  accessType?: 'admin' | 'write' | 'read';\n  name?: string;\n}\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class UserService {\n  constructor(private http: HttpClient) {}\n\n  verifyUser(user: User) {\n    let qParrams = new HttpParams();\n    qParrams = qParrams.append('sub', user.sub as any);\n    return this.http\n      .get(`${environment.apiUri}/api/users`, { params: qParrams })\n      .pipe(share(), catchError(this.errorHandler), retry(3));\n  }\n  createUser(user: User) {\n    return this.http\n      .post(`${environment.apiUri}/api/users`, { ...user })\n      .pipe(catchError(this.errorHandler), retry(3));\n  }\n\n  getUsers(searchStr: String): Observable {\n    return this.http\n      .post(`${environment.apiUri}/api/protected/assign/users`, {\n        searchStr: searchStr,\n      })\n      .pipe(retry(3), catchError(this.errorHandler));\n  }\n\n  private errorHandler(error: HttpErrorResponse) {\n    if (error.status === 0) {\n      console.error(\n        `Something went wrong with the network. Error status : ${error.status}`\n      );\n    } else {\n      console.error(`Backed has rejected the request. ${error.error}`);\n    }\n    return throwError(() => new Error(error.error));\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ViewBatteryPacksComponent.html":{"url":"components/ViewBatteryPacksComponent.html","title":"component - ViewBatteryPacksComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  ViewBatteryPacksComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/body/devices/battery-packs/view-battery-packs/view-battery-packs.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-view-battery-packs\n            \n\n            \n                styleUrls\n                ./view-battery-packs.component.css\n            \n\n\n\n            \n                templateUrl\n                ./view-battery-packs.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-view-battery-packs',\n  templateUrl: './view-battery-packs.component.html',\n  styleUrls: ['./view-battery-packs.component.css']\n})\nexport class ViewBatteryPacksComponent {\n\n}\n\n    \n\n    \n        comming soon!\n\n    \n\n    \n                \n                    ./view-battery-packs.component.css\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = 'comming soon!'\n    var COMPONENTS = [{'name': 'AddBatteryPackComponent', 'selector': 'app-add-battery-pack'},{'name': 'AddCellsComponent', 'selector': 'app-add-cells'},{'name': 'AddTestChamberComponent', 'selector': 'app-add-test-chamber'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BatteryPacksComponent', 'selector': 'app-battery-packs'},{'name': 'BatteryTestComponent', 'selector': 'app-battery-test'},{'name': 'CellsComponent', 'selector': 'app-cells'},{'name': 'CreateNewTestComponent', 'selector': 'app-create-new-test'},{'name': 'DashboardComponent', 'selector': 'app-dashboard'},{'name': 'DeviceDataComponent', 'selector': 'app-device-data'},{'name': 'DevicesComponent', 'selector': 'app-devices'},{'name': 'DevicesDefaultComponent', 'selector': 'app-devices-default'},{'name': 'DocsComponent', 'selector': 'app-docs'},{'name': 'EditBatteryPackComponent', 'selector': 'app-edit-battery-pack'},{'name': 'EditCellsComponent', 'selector': 'app-edit-cells'},{'name': 'EditTestChamberComponent', 'selector': 'app-edit-test-chamber'},{'name': 'FootNavComponent', 'selector': 'app-foot-nav'},{'name': 'HeadNavComponent', 'selector': 'app-head-nav'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'NoResultComponent', 'selector': 'app-no-result'},{'name': 'ShowAllTestsResultComponent', 'selector': 'app-show-all-tests-result'},{'name': 'ShowTestResultComponent', 'selector': 'app-show-test-result'},{'name': 'TestChambersComponent', 'selector': 'app-test-chambers'},{'name': 'ViewBatteryPacksComponent', 'selector': 'app-view-battery-packs'},{'name': 'ViewCellsComponent', 'selector': 'app-view-cells'},{'name': 'ViewTestChambersComponent', 'selector': 'app-view-test-chambers'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ViewBatteryPacksComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ViewCellsComponent.html":{"url":"components/ViewCellsComponent.html","title":"component - ViewCellsComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  ViewCellsComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/body/devices/cells/view-cells/view-cells.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n                    OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-view-cells\n            \n\n            \n                styleUrls\n                ./view-cells.component.css\n            \n\n\n\n            \n                templateUrl\n                ./view-cells.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                availableCells\n                            \n                            \n                                availableCellsSource\n                            \n                            \n                                page\n                            \n                            \n                                pageSize\n                            \n                            \n                                placeHolderMsg\n                            \n                            \n                                searchStr\n                            \n                            \n                                selectedCell\n                            \n                            \n                                subs\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                filter\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                selectCell\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(_cellservice: CellService)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/body/devices/cells/view-cells/view-cells.component.ts:19\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        _cellservice\n                                                  \n                                                        \n                                                                        CellService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        filter\n                        \n                    \n                \n            \n            \n                \nfilter()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/body/devices/cells/view-cells/view-cells.component.ts:39\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnDestroy\n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/body/devices/cells/view-cells/view-cells.component.ts:55\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/body/devices/cells/view-cells/view-cells.component.ts:22\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        selectCell\n                        \n                    \n                \n            \n            \n                \nselectCell(chamberId: string | undefined)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/body/devices/cells/view-cells/view-cells.component.ts:60\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    chamberId\n                                    \n                                            string | undefined\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        availableCells\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Cell[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/components/body/devices/cells/view-cells/view-cells.component.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        availableCellsSource\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Cell[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/components/body/devices/cells/view-cells/view-cells.component.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        page\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 1\n                    \n                \n                    \n                        \n                                Defined in src/app/components/body/devices/cells/view-cells/view-cells.component.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        pageSize\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 10\n                    \n                \n                    \n                        \n                                Defined in src/app/components/body/devices/cells/view-cells/view-cells.component.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        placeHolderMsg\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"You don't have any cells.\"\n                    \n                \n                    \n                        \n                                Defined in src/app/components/body/devices/cells/view-cells/view-cells.component.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        searchStr\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/app/components/body/devices/cells/view-cells/view-cells.component.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        selectedCell\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Cell | undefined\n\n                    \n                \n                \n                    \n                        Default value : undefined\n                    \n                \n                    \n                        \n                                Defined in src/app/components/body/devices/cells/view-cells/view-cells.component.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        subs\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Subscription[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/components/body/devices/cells/view-cells/view-cells.component.ts:16\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { CellService } from './../../../../../services/cell.service';\nimport { Subscription } from 'rxjs';\nimport { Cell } from './../../../../../models/Cell';\nimport { Component, OnInit, OnDestroy } from '@angular/core';\n\n@Component({\n  selector: 'app-view-cells',\n  templateUrl: './view-cells.component.html',\n  styleUrls: ['./view-cells.component.css'],\n})\nexport class ViewCellsComponent implements OnInit, OnDestroy {\n  availableCellsSource: Cell[] = [];\n  availableCells: Cell[] = [];\n  pageSize = 10;\n  page = 1;\n  subs: Subscription[] = [];\n  searchStr: string = '';\n  selectedCell: Cell | undefined = undefined;\n  placeHolderMsg: string = \"You don't have any cells.\";\n\n  constructor(private _cellservice: CellService) {}\n  ngOnInit(): void {\n    this.placeHolderMsg = 'Getting the information...';\n    const sub = this._cellservice.getCells().subscribe({\n      next: (data: any) => {\n        this.availableCellsSource = data;\n        console.log(data);\n        this.filter();\n        if (this.availableCellsSource.length == 0) {\n          this.placeHolderMsg = \"You don't have any cells.\";\n        }\n      },\n      error: (err) => {\n        this.placeHolderMsg = \"It's weired, something wrong happened!\";\n      },\n    });\n    this.subs.push(sub);\n  }\n  filter() {\n    if (this.availableCellsSource.length > 0 && this.searchStr.length > 0) {\n      this.availableCells = this.availableCellsSource.filter((item: any) => {\n        if (item.cellName) {\n          return item.cellName\n            .toLowerCase()\n            .trim()\n            .includes(this.searchStr.toLowerCase().trim());\n        } else {\n          return false;\n        }\n      });\n    } else {\n      this.availableCells = [...this.availableCellsSource];\n    }\n  }\n  ngOnDestroy(): void {\n    this.subs.forEach((sub) => {\n      sub.unsubscribe();\n    });\n  }\n  selectCell(chamberId: string | undefined) {\n    try {\n      this.selectedCell = this.availableCells.find(\n        (chamber) => chamber._id == chamberId\n      );\n    } catch {\n      this.selectedCell = undefined;\n    }\n  }\n}\n\n    \n\n    \n        \n  \n    \n      Back\n    \n  \n  \n    \n  \n\n\n\n   0; else default_msg\">\n    \n      \n        \n          List of assgined test cells to you.\n        \n        \n          \n            Name\n            Nominal Voltage (V)\n            Nominal Capacity (mAh)\n            Cell Chemistry\n            Access Type\n          \n        \n        \n          \n            \n              {{ cell.cellName }}\n              {{ cell.nomVolt }}\n              {{ cell.nomCap }}\n              {{ cell.cellChemistry }}\n              {{ cell.accessType }}\n            \n          \n        \n      \n    \n    \n  \n\n\n  {{ placeHolderMsg }}\n\n\n\n  \n    \n      \n        About the Cell\n        \n          \n            \n              edit\n            \n          \n        \n      \n    \n    \n      \n        Name\n        {{ selectedCell.cellName }}\n      \n      \n        Cell Id\n        {{ selectedCell._id }}\n      \n      \n        Quantity\n        {{ selectedCell.cellQuantity }}\n      \n      \n        Manufacturer\n        {{ selectedCell.manufacturer }}\n      \n      \n        Batch Number\n        {{ selectedCell.batchNo }}\n      \n      \n        Type\n        {{ selectedCell.type }}\n      \n      \n        Form Factor\n        {{ selectedCell.formFactor }}\n      \n      \n        Cell Chemistry\n        {{ selectedCell.cellChemistry }}\n      \n      \n        Nominal Voltage\n        {{ selectedCell.nomVolt }}\n      \n      \n        Nominal Capacity\n        {{ selectedCell.nomCap }}\n      \n      \n        Nominal Current\n        {{ selectedCell.nomCurr }}\n      \n      \n        Maximum Voltage\n        {{ selectedCell.maxVolt }}\n      \n      \n        Minimum Voltage\n        {{ selectedCell.minVolt }}\n      \n      \n        \n          Assigned Users\n          \n            {{ user.name }}\n          \n        \n      \n    \n  \n\n\n    \n\n    \n                \n                    ./view-cells.component.css\n                \n                .all-cells {\n  border: 1px solid gray;\n  margin-top: 20px;\n  border-radius: 5px;\n  padding: 10px;\n}\n.all-cells > table > tbody tr {\n  cursor: pointer;\n}\n.user {\n  margin-right: 2px;\n}\n.cell-details {\n  margin-top: 10px;\n}\n.cell-details .card-body .row {\n  border-bottom: 1px solid rgba(128, 128, 128, 0.06);\n}\n.cell-details .card-body .col-md-4 {\n  font-weight: bold;\n}\n.edit:hover {\n  color: red;\n  cursor: pointer;\n}\n.edit {\n  margin: 0px 6px;\n}\n.all-cells tr:hover {\n  cursor: pointer;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            Back                 0; else default_msg\">                            List of assgined test cells to you.                                      Name            Nominal Voltage (V)            Nominal Capacity (mAh)            Cell Chemistry            Access Type                                                              {{ cell.cellName }}              {{ cell.nomVolt }}              {{ cell.nomCap }}              {{ cell.cellChemistry }}              {{ cell.accessType }}                                                {{ placeHolderMsg }}                    About the Cell                                            edit                                                          Name        {{ selectedCell.cellName }}                    Cell Id        {{ selectedCell._id }}                    Quantity        {{ selectedCell.cellQuantity }}                    Manufacturer        {{ selectedCell.manufacturer }}                    Batch Number        {{ selectedCell.batchNo }}                    Type        {{ selectedCell.type }}                    Form Factor        {{ selectedCell.formFactor }}                    Cell Chemistry        {{ selectedCell.cellChemistry }}                    Nominal Voltage        {{ selectedCell.nomVolt }}                    Nominal Capacity        {{ selectedCell.nomCap }}                    Nominal Current        {{ selectedCell.nomCurr }}                    Maximum Voltage        {{ selectedCell.maxVolt }}                    Minimum Voltage        {{ selectedCell.minVolt }}                              Assigned Users                      {{ user.name }}                              '\n    var COMPONENTS = [{'name': 'AddBatteryPackComponent', 'selector': 'app-add-battery-pack'},{'name': 'AddCellsComponent', 'selector': 'app-add-cells'},{'name': 'AddTestChamberComponent', 'selector': 'app-add-test-chamber'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BatteryPacksComponent', 'selector': 'app-battery-packs'},{'name': 'BatteryTestComponent', 'selector': 'app-battery-test'},{'name': 'CellsComponent', 'selector': 'app-cells'},{'name': 'CreateNewTestComponent', 'selector': 'app-create-new-test'},{'name': 'DashboardComponent', 'selector': 'app-dashboard'},{'name': 'DeviceDataComponent', 'selector': 'app-device-data'},{'name': 'DevicesComponent', 'selector': 'app-devices'},{'name': 'DevicesDefaultComponent', 'selector': 'app-devices-default'},{'name': 'DocsComponent', 'selector': 'app-docs'},{'name': 'EditBatteryPackComponent', 'selector': 'app-edit-battery-pack'},{'name': 'EditCellsComponent', 'selector': 'app-edit-cells'},{'name': 'EditTestChamberComponent', 'selector': 'app-edit-test-chamber'},{'name': 'FootNavComponent', 'selector': 'app-foot-nav'},{'name': 'HeadNavComponent', 'selector': 'app-head-nav'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'NoResultComponent', 'selector': 'app-no-result'},{'name': 'ShowAllTestsResultComponent', 'selector': 'app-show-all-tests-result'},{'name': 'ShowTestResultComponent', 'selector': 'app-show-test-result'},{'name': 'TestChambersComponent', 'selector': 'app-test-chambers'},{'name': 'ViewBatteryPacksComponent', 'selector': 'app-view-battery-packs'},{'name': 'ViewCellsComponent', 'selector': 'app-view-cells'},{'name': 'ViewTestChambersComponent', 'selector': 'app-view-test-chambers'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ViewCellsComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ViewTestChambersComponent.html":{"url":"components/ViewTestChambersComponent.html","title":"component - ViewTestChambersComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  ViewTestChambersComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/body/devices/test-chambers/view-test-chambers/view-test-chambers.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n                    OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-view-test-chambers\n            \n\n            \n                styleUrls\n                ./view-test-chambers.component.css\n            \n\n\n\n            \n                templateUrl\n                ./view-test-chambers.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                availableTestChambers\n                            \n                            \n                                availableTestChambersSource\n                            \n                            \n                                    Optional\n                                connSub\n                            \n                            \n                                isApiVisible\n                            \n                            \n                                isConnected\n                            \n                            \n                                isConnectedIntervalId\n                            \n                            \n                                page\n                            \n                            \n                                pageSize\n                            \n                            \n                                placeHolderMsg\n                            \n                            \n                                searchStr\n                            \n                            \n                                selectedTestChamber\n                            \n                            \n                                subs\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                changeView\n                            \n                            \n                                clipBoard\n                            \n                            \n                                filter\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                selectTestChamber\n                            \n                            \n                                updateConnection\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(_testChamberService: TestChamberService, clipboard: Clipboard, componentStoreService: ComponentStoreService)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/body/devices/test-chambers/view-test-chambers/view-test-chambers.component.ts:24\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        _testChamberService\n                                                  \n                                                        \n                                                                        TestChamberService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        clipboard\n                                                  \n                                                        \n                                                                    Clipboard\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        componentStoreService\n                                                  \n                                                        \n                                                                        ComponentStoreService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        changeView\n                        \n                    \n                \n            \n            \n                \nchangeView()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/body/devices/test-chambers/view-test-chambers/view-test-chambers.component.ts:113\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        clipBoard\n                        \n                    \n                \n            \n            \n                \nclipBoard()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/body/devices/test-chambers/view-test-chambers/view-test-chambers.component.ts:129\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        filter\n                        \n                    \n                \n            \n            \n                \nfilter()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/body/devices/test-chambers/view-test-chambers/view-test-chambers.component.ts:73\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnDestroy\n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/body/devices/test-chambers/view-test-chambers/view-test-chambers.component.ts:94\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/body/devices/test-chambers/view-test-chambers/view-test-chambers.component.ts:31\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        selectTestChamber\n                        \n                    \n                \n            \n            \n                \nselectTestChamber(chamberId: string | undefined)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/body/devices/test-chambers/view-test-chambers/view-test-chambers.component.ts:101\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    chamberId\n                                    \n                                            string | undefined\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateConnection\n                        \n                    \n                \n            \n            \n                \nupdateConnection()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/body/devices/test-chambers/view-test-chambers/view-test-chambers.component.ts:56\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        availableTestChambers\n                        \n                    \n                \n            \n                \n                    \n                        Type :         _TestChamber[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/components/body/devices/test-chambers/view-test-chambers/view-test-chambers.component.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        availableTestChambersSource\n                        \n                    \n                \n            \n                \n                    \n                        Type :         _TestChamber[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/components/body/devices/test-chambers/view-test-chambers/view-test-chambers.component.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        connSub\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Subscription\n\n                    \n                \n                    \n                        \n                                Defined in src/app/components/body/devices/test-chambers/view-test-chambers/view-test-chambers.component.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isApiVisible\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/components/body/devices/test-chambers/view-test-chambers/view-test-chambers.component.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isConnected\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/components/body/devices/test-chambers/view-test-chambers/view-test-chambers.component.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isConnectedIntervalId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                    \n                        \n                                Defined in src/app/components/body/devices/test-chambers/view-test-chambers/view-test-chambers.component.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        page\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 1\n                    \n                \n                    \n                        \n                                Defined in src/app/components/body/devices/test-chambers/view-test-chambers/view-test-chambers.component.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        pageSize\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 5\n                    \n                \n                    \n                        \n                                Defined in src/app/components/body/devices/test-chambers/view-test-chambers/view-test-chambers.component.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        placeHolderMsg\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"You don't have any Test Chambers.\"\n                    \n                \n                    \n                        \n                                Defined in src/app/components/body/devices/test-chambers/view-test-chambers/view-test-chambers.component.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        searchStr\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/app/components/body/devices/test-chambers/view-test-chambers/view-test-chambers.component.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        selectedTestChamber\n                        \n                    \n                \n            \n                \n                    \n                        Type :         _TestChamber | undefined\n\n                    \n                \n                \n                    \n                        Default value : undefined\n                    \n                \n                    \n                        \n                                Defined in src/app/components/body/devices/test-chambers/view-test-chambers/view-test-chambers.component.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        subs\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Subscription[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/components/body/devices/test-chambers/view-test-chambers/view-test-chambers.component.ts:17\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { ComponentStoreService } from './../../../../../services/component-store.service';\nimport { Subscription } from 'rxjs';\nimport { TestChamberService } from 'src/app/services/test-chamber.service';\nimport { Component, OnInit, OnDestroy } from '@angular/core';\nimport { _TestChamber } from 'src/app/models/TestChamber';\nimport { Clipboard } from '@angular/cdk/clipboard';\n@Component({\n  selector: 'app-view-test-chambers',\n  templateUrl: './view-test-chambers.component.html',\n  styleUrls: ['./view-test-chambers.component.css'],\n})\nexport class ViewTestChambersComponent implements OnInit, OnDestroy {\n  availableTestChambersSource: _TestChamber[] = [];\n  availableTestChambers: _TestChamber[] = [];\n  pageSize = 5;\n  page = 1;\n  subs: Subscription[] = [];\n  searchStr: string = '';\n  selectedTestChamber: _TestChamber | undefined = undefined;\n  placeHolderMsg: string = \"You don't have any Test Chambers.\";\n  isApiVisible: boolean = false;\n  isConnected: boolean = false;\n  isConnectedIntervalId: any;\n  connSub?: Subscription;\n\n  constructor(\n    private _testChamberService: TestChamberService,\n    private clipboard: Clipboard,\n    private componentStoreService: ComponentStoreService\n  ) {}\n  ngOnInit(): void {\n    this.placeHolderMsg = 'Getting the information...';\n    const sub = this._testChamberService.getChambers().subscribe({\n      next: (data: any) => {\n        this.availableTestChambersSource = data;\n        //console.log(data)\n        this.filter();\n        if (this.availableTestChambersSource.length == 0) {\n          this.placeHolderMsg = \"You don't have any Test Chambers.\";\n        }\n      },\n      error: (err) => {\n        this.placeHolderMsg = \"It's weired, something wrong happened!\";\n      },\n    });\n    this.subs.push(sub);\n\n    this.updateConnection();\n\n    this.isConnectedIntervalId = setInterval(\n      () => this.updateConnection(),\n      10000\n    );\n  }\n\n  updateConnection() {\n    if (this.selectedTestChamber?._id) {\n      this.connSub?.unsubscribe();\n      this.connSub = this._testChamberService\n        .getConnectionStatus(this.selectedTestChamber._id as any)\n        .subscribe({\n          next: (pay: any) => {\n            this.isConnected = pay.isConnected;\n            this.connSub?.unsubscribe();\n          },\n          error: (err) => {\n            this.isConnected = false;\n          },\n        });\n    }\n  }\n\n  filter() {\n    if (\n      this.availableTestChambersSource.length > 0 &&\n      this.searchStr.length > 0\n    ) {\n      this.availableTestChambers = this.availableTestChambersSource.filter(\n        (item: any) => {\n          if (item.name) {\n            return item.name\n              .toLowerCase()\n              .trim()\n              .includes(this.searchStr.toLowerCase().trim());\n          } else {\n            return false;\n          }\n        }\n      );\n    } else {\n      this.availableTestChambers = [...this.availableTestChambersSource];\n    }\n  }\n  ngOnDestroy(): void {\n    this.subs.forEach((sub) => {\n      sub.unsubscribe();\n    });\n    this.connSub?.unsubscribe();\n    clearInterval(this.isConnectedIntervalId);\n  }\n  selectTestChamber(chamberId: string | undefined) {\n    try {\n      this.selectedTestChamber = this.availableTestChambers.find(\n        (chamber) => chamber._id == chamberId\n      );\n      if (this.selectedTestChamber) {\n        this.selectedTestChamber.apiKey = '**********';\n      }\n    } catch {\n      this.selectedTestChamber = undefined;\n    }\n  }\n  changeView() {\n    this.isApiVisible = !this.isApiVisible;\n    if (this.isApiVisible) {\n      const sub = this._testChamberService\n        .getAPIKey(this.selectedTestChamber?._id as any)\n        .subscribe((api: any) => {\n          if (this.selectedTestChamber) {\n            this.selectedTestChamber.apiKey = api.apiKey;\n          }\n        });\n      this.subs.push(sub);\n    } else {\n      if (this.selectedTestChamber)\n        this.selectedTestChamber.apiKey = '**********';\n    }\n  }\n  clipBoard() {\n    if (this.selectedTestChamber)\n      this.clipboard.copy(this.selectedTestChamber.apiKey as any);\n    this.componentStoreService.sendToastMsg({\n      msg: 'API Key copied to clipboard',\n      timeOut: 2000,\n      color: 'black',\n    });\n  }\n}\n\n    \n\n    \n        \n  \n    \n      Back\n    \n  \n  \n    \n  \n\n\n   0; else default_msg\"\n  >\n    \n      \n        \n          List of assgined test chambers to you.\n        \n        \n          \n            Chamber Name\n            Max. Channels\n            Access Type\n            Created On\n          \n        \n        \n          \n            \n              {{ testChamber.name }}\n              {{ testChamber.maxNoOfChannels }}\n              {{ testChamber.accessType }}\n              {{ testChamber.createdOn | date : \"MMM d, y, h:mm a\" }}\n            \n          \n        \n      \n    \n    \n  \n  \n    {{ placeHolderMsg }}\n  \n\n\n  \n    \n      \n        Test Chamber\n        \n          Online\n            \n              Loading...\n            \n          \n          \n            Offline\n          \n          \n            \n              edit\n            \n          \n        \n      \n    \n    \n      \n        Name\n        {{ selectedTestChamber.name }}\n      \n      \n        Id\n        {{ selectedTestChamber._id }}\n      \n      \n        Controller\n        {{ selectedTestChamber.controller }}\n      \n      \n        Version\n        {{ selectedTestChamber.version }}\n      \n      \n        About\n        {{ selectedTestChamber.about }}\n      \n      \n        Maximum Temperature (°C)\n        {{ selectedTestChamber.maxTemp }}\n      \n      \n        Minimum Temperature (°C)\n        {{ selectedTestChamber.minTemp }}\n      \n      \n        Location\n        {{ selectedTestChamber.location }}\n      \n      \n        Created On\n        \n          {{ selectedTestChamber.createdOn | date : \"MMM d, y, h:mm a\" }}\n        \n      \n      \n        Maximum No. of Channels\n        {{ selectedTestChamber.maxNoOfChannels }}\n      \n      \n        Access Type\n        {{ selectedTestChamber.accessType }}\n      \n      \n        \n          Assigned Users\n          \n            {{ user.name }}\n          \n        \n      \n      \n        \n          API Key\n          \n            \n              \n                  content_copy\n                \n              \n              \n                  visibility\n                \n              \n                  visibility_off\n                \n            \n          \n        \n      \n    \n  \n\n\n    \n\n    \n                \n                    ./view-test-chambers.component.css\n                \n                .all-chambers {\n  border: 1px solid gray;\n  margin-top: 20px;\n  border-radius: 5px;\n  padding: 10px;\n}\n.all-chambers tr:hover {\n  cursor: pointer;\n}\n\n.user {\n  margin-right: 2px;\n}\n.chamber-details {\n  margin-top: 10px;\n}\n.chamber-details .card-body .row {\n  border-bottom: 1px solid rgba(128, 128, 128, 0.06);\n}\n.chamber-details .card-body .col-md-4 {\n  font-weight: bold;\n}\n.edit:hover {\n  color: red;\n  cursor: pointer;\n}\n.edit {\n  margin: 0px 6px;\n}\n.api-copy:hover,\n.eye:hover {\n  cursor: pointer;\n  color: rgb(48, 16, 65);\n  font-weight: bold;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            Back                 0; else default_msg\"  >                            List of assgined test chambers to you.                                      Chamber Name            Max. Channels            Access Type            Created On                                                              {{ testChamber.name }}              {{ testChamber.maxNoOfChannels }}              {{ testChamber.accessType }}              {{ testChamber.createdOn | date : \"MMM d, y, h:mm a\" }}                                                    {{ placeHolderMsg }}                      Test Chamber                  Online                          Loading...                                            Offline                                              edit                                                          Name        {{ selectedTestChamber.name }}                    Id        {{ selectedTestChamber._id }}                    Controller        {{ selectedTestChamber.controller }}                    Version        {{ selectedTestChamber.version }}                    About        {{ selectedTestChamber.about }}                    Maximum Temperature (°C)        {{ selectedTestChamber.maxTemp }}                    Minimum Temperature (°C)        {{ selectedTestChamber.minTemp }}                    Location        {{ selectedTestChamber.location }}                    Created On                  {{ selectedTestChamber.createdOn | date : \"MMM d, y, h:mm a\" }}                            Maximum No. of Channels        {{ selectedTestChamber.maxNoOfChannels }}                    Access Type        {{ selectedTestChamber.accessType }}                              Assigned Users                      {{ user.name }}                                                API Key                                                      content_copy                                                              visibility                                                visibility_off                                                          '\n    var COMPONENTS = [{'name': 'AddBatteryPackComponent', 'selector': 'app-add-battery-pack'},{'name': 'AddCellsComponent', 'selector': 'app-add-cells'},{'name': 'AddTestChamberComponent', 'selector': 'app-add-test-chamber'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BatteryPacksComponent', 'selector': 'app-battery-packs'},{'name': 'BatteryTestComponent', 'selector': 'app-battery-test'},{'name': 'CellsComponent', 'selector': 'app-cells'},{'name': 'CreateNewTestComponent', 'selector': 'app-create-new-test'},{'name': 'DashboardComponent', 'selector': 'app-dashboard'},{'name': 'DeviceDataComponent', 'selector': 'app-device-data'},{'name': 'DevicesComponent', 'selector': 'app-devices'},{'name': 'DevicesDefaultComponent', 'selector': 'app-devices-default'},{'name': 'DocsComponent', 'selector': 'app-docs'},{'name': 'EditBatteryPackComponent', 'selector': 'app-edit-battery-pack'},{'name': 'EditCellsComponent', 'selector': 'app-edit-cells'},{'name': 'EditTestChamberComponent', 'selector': 'app-edit-test-chamber'},{'name': 'FootNavComponent', 'selector': 'app-foot-nav'},{'name': 'HeadNavComponent', 'selector': 'app-head-nav'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'NoResultComponent', 'selector': 'app-no-result'},{'name': 'ShowAllTestsResultComponent', 'selector': 'app-show-all-tests-result'},{'name': 'ShowTestResultComponent', 'selector': 'app-show-test-result'},{'name': 'TestChambersComponent', 'selector': 'app-test-chambers'},{'name': 'ViewBatteryPacksComponent', 'selector': 'app-view-battery-packs'},{'name': 'ViewCellsComponent', 'selector': 'app-view-cells'},{'name': 'ViewTestChambersComponent', 'selector': 'app-view-test-chambers'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ViewTestChambersComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/_TestChamber.html":{"url":"interfaces/_TestChamber.html","title":"interface - _TestChamber","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  _TestChamber\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/TestChamber.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            _id\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            about\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            accessType\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            apiKey\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            assignedUsers\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            controller\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            createdOn\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            isConnected\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            lastSeen\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            location\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            maxNoOfChannels\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            maxTemp\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            minTemp\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            name\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            testPerformed\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            version\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        _id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        _id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        about\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        about:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        accessType\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        accessType:     \"admin\" | \"write\" | \"read\"\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     \"admin\" | \"write\" | \"read\"\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        apiKey\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        apiKey:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        assignedUsers\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        assignedUsers:     _UserLight[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     _UserLight[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        controller\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        controller:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        createdOn\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        createdOn:         Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Date\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        isConnected\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        isConnected:         Boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        lastSeen\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        lastSeen:         Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Date\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        location\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        location:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        maxNoOfChannels\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        maxNoOfChannels:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        maxTemp\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        maxTemp:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        minTemp\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        minTemp:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        testPerformed\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        testPerformed:     literal type[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        version\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        version:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { _UserLight } from './../services/user.service';\n\n//what you get from the back end\nexport interface _TestChamber {\n  _id?: string; //ObjectId from mongodb gets parsed as string\n  name?: string;\n  controller?: string;\n  version?: string;\n  about?: string;\n  maxTemp?: number; //in °C\n  minTemp?: number; //in °C\n  location?: string;\n  assignedUsers?: _UserLight[]; //could be present if the user is admin to this chamber, otherwise this won't be present\n  testPerformed?: { testId: string }[];\n  createdOn?: Date;\n  maxNoOfChannels?: number;\n  isConnected?: Boolean;\n  lastSeen?: Date;\n  accessType?: 'admin' | 'write' | 'read'; //only specific to front end\n  apiKey?:string;\n}\n\n//what you need to send while creating a new chamber\nexport class TestChamber {\n  constructor(\n    public _id?: string,\n    public name?: string,\n    public controller?: string,\n    public version?: string,\n    public about?: string,\n    public maxTemp?: number,\n    public minTemp?: number,\n    public location?: string,\n    public assignedUsers?: any,\n    public maxNoOfChannels?: number\n  ) {\n    this.maxNoOfChannels = 1;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/_TestResultDeep.html":{"url":"interfaces/_TestResultDeep.html","title":"interface - _TestResultDeep","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  _TestResultDeep\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/TestResult.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            _id\n                                        \n                                \n                                \n                                        \n                                            accessType\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            chamberName\n                                        \n                                \n                                \n                                        \n                                            channels\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            createdOnChamber\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            status\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            testDesc\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            testEndDate\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            testName\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            testScheduleDate\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            testStartDate\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        _id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        _id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        accessType\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        accessType:     \"admin\" | \"read\" | \"write\"\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     \"admin\" | \"read\" | \"write\"\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        chamberName\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        chamberName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        channels\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        channels:     TestChannelDeepChannel[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     TestChannelDeepChannel[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        createdOnChamber\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        createdOnChamber:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        status\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        status:     \"Running\" | \"Paused\" | \"Stopped\" | \"Scheduled\" | \"Completed\"\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     \"Running\" | \"Paused\" | \"Stopped\" | \"Scheduled\" | \"Completed\"\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        testDesc\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        testDesc:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        testEndDate\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        testEndDate:         Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Date\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        testName\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        testName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        testScheduleDate\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        testScheduleDate:         Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Date\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        testStartDate\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        testStartDate:         Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Date\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { PayLoad, TestFormat } from './FormFields';\n\nexport interface _TestResultLight {\n  _id?: string;\n  createdOnChamber?: string;\n  chamberName?: string;\n  testName?: string;\n  testDescription?: string;\n  status?: 'Running' | 'Paused' | 'Stopped' | 'Scheduled' | 'Completed';\n  channels?: TestChannel[];\n  createdOn?: Date;\n}\n\nexport interface TestChannel {\n  channelNo: number;\n  statusCh: 'Running' | 'Paused' | 'Stopped' | 'Scheduled' | 'Completed';\n  chMultiplierIndex: number;\n  chMultiplier: number;\n  onRows?: number;\n  totalRows?: number;\n  statusRow?: 'Running' | 'Paused' | 'Stopped' | 'Scheduled' | 'Completed';\n  rowMultiplierIndex?: number;\n  rowMultiplier?: number;\n}\nexport interface TestChannelDeepChannel {\n  channelNumber: number;\n  status: 'Running' | 'Paused' | 'Stopped' | 'Scheduled' | 'Completed';\n  currentMultiplierIndex: number;\n  multiplier: number;\n  testFormats: TestFormat[];\n  rows?: RowInfo[];\n  chStartDate?: Date;\n  chEndDate?: Date;\n}\nexport interface _TestResultDeep {\n  _id?: string;\n  chamberName?: string;\n  createdOnChamber?: string;\n  testName?: string;\n  testDesc?: string;\n  status?: 'Running' | 'Paused' | 'Stopped' | 'Scheduled' | 'Completed';\n  channels: TestChannelDeepChannel[];\n  accessType: 'admin' | 'read' | 'write';\n  testStartDate?: Date;\n  testEndDate?: Date;\n  testScheduleDate?: Date;\n}\n\nexport interface MeasuredParameters {\n  current?: number[];\n  voltage?: number[];\n  chamberTemp?: number[];\n  chamberHum?: number[];\n  cellTemp?: SensorObj[];\n  time?: number[];\n}\nexport interface SensorObj {\n  sensorId: number;\n  values: number[];\n}\n\nexport interface RowInfo {\n  rowNo: number;\n  measuredParameters?: MeasuredParameters;\n  derivedParameters?: any;\n  status: 'Completed' | 'Running' | 'Scheduled' | 'Stopped' | 'Paused';\n  currentMultiplierIndex: number;\n  multiplier: number;\n  rowStartDate?: Date;\n  rowEndDate?: Date;\n}\n\nexport interface Channel {\n  rows?: RowInfo[];\n  channelNo: number;\n  status: 'Completed' | 'Running' | 'Scheduled' | 'Stopped' | 'Paused';\n  currentMultiplierIndex?: number;\n  multiplier?: number;\n}\n\nexport interface TestResultDocument {\n  channels: Channel[];\n}\n\nexport interface QuickResponseMeasurement {\n  channelNo: Number;\n  statusCh: 'Running' | 'Paused' | 'Stopped' | 'Scheduled' | 'Completed';\n  measuredParameters: MeasuredParameters;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/_TestResultLight.html":{"url":"interfaces/_TestResultLight.html","title":"interface - _TestResultLight","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  _TestResultLight\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/TestResult.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            _id\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            chamberName\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            channels\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            createdOn\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            createdOnChamber\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            status\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            testDescription\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            testName\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        _id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        _id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        chamberName\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        chamberName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        channels\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        channels:     TestChannel[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     TestChannel[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        createdOn\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        createdOn:         Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Date\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        createdOnChamber\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        createdOnChamber:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        status\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        status:     \"Running\" | \"Paused\" | \"Stopped\" | \"Scheduled\" | \"Completed\"\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     \"Running\" | \"Paused\" | \"Stopped\" | \"Scheduled\" | \"Completed\"\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        testDescription\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        testDescription:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        testName\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        testName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { PayLoad, TestFormat } from './FormFields';\n\nexport interface _TestResultLight {\n  _id?: string;\n  createdOnChamber?: string;\n  chamberName?: string;\n  testName?: string;\n  testDescription?: string;\n  status?: 'Running' | 'Paused' | 'Stopped' | 'Scheduled' | 'Completed';\n  channels?: TestChannel[];\n  createdOn?: Date;\n}\n\nexport interface TestChannel {\n  channelNo: number;\n  statusCh: 'Running' | 'Paused' | 'Stopped' | 'Scheduled' | 'Completed';\n  chMultiplierIndex: number;\n  chMultiplier: number;\n  onRows?: number;\n  totalRows?: number;\n  statusRow?: 'Running' | 'Paused' | 'Stopped' | 'Scheduled' | 'Completed';\n  rowMultiplierIndex?: number;\n  rowMultiplier?: number;\n}\nexport interface TestChannelDeepChannel {\n  channelNumber: number;\n  status: 'Running' | 'Paused' | 'Stopped' | 'Scheduled' | 'Completed';\n  currentMultiplierIndex: number;\n  multiplier: number;\n  testFormats: TestFormat[];\n  rows?: RowInfo[];\n  chStartDate?: Date;\n  chEndDate?: Date;\n}\nexport interface _TestResultDeep {\n  _id?: string;\n  chamberName?: string;\n  createdOnChamber?: string;\n  testName?: string;\n  testDesc?: string;\n  status?: 'Running' | 'Paused' | 'Stopped' | 'Scheduled' | 'Completed';\n  channels: TestChannelDeepChannel[];\n  accessType: 'admin' | 'read' | 'write';\n  testStartDate?: Date;\n  testEndDate?: Date;\n  testScheduleDate?: Date;\n}\n\nexport interface MeasuredParameters {\n  current?: number[];\n  voltage?: number[];\n  chamberTemp?: number[];\n  chamberHum?: number[];\n  cellTemp?: SensorObj[];\n  time?: number[];\n}\nexport interface SensorObj {\n  sensorId: number;\n  values: number[];\n}\n\nexport interface RowInfo {\n  rowNo: number;\n  measuredParameters?: MeasuredParameters;\n  derivedParameters?: any;\n  status: 'Completed' | 'Running' | 'Scheduled' | 'Stopped' | 'Paused';\n  currentMultiplierIndex: number;\n  multiplier: number;\n  rowStartDate?: Date;\n  rowEndDate?: Date;\n}\n\nexport interface Channel {\n  rows?: RowInfo[];\n  channelNo: number;\n  status: 'Completed' | 'Running' | 'Scheduled' | 'Stopped' | 'Paused';\n  currentMultiplierIndex?: number;\n  multiplier?: number;\n}\n\nexport interface TestResultDocument {\n  channels: Channel[];\n}\n\nexport interface QuickResponseMeasurement {\n  channelNo: Number;\n  statusCh: 'Running' | 'Paused' | 'Stopped' | 'Scheduled' | 'Completed';\n  measuredParameters: MeasuredParameters;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/_User.html":{"url":"interfaces/_User.html","title":"interface - _User","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  _User\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/user.service.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            _id\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            email\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            name\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        _id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        _id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        email\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        email:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import {\n  HttpClient,\n  HttpErrorResponse,\n  HttpResponse,\n  HttpParams,\n} from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable, throwError } from 'rxjs';\nimport { retry, catchError, share } from 'rxjs/operators';\nimport { User } from '@auth0/auth0-angular';\nimport { environment } from 'src/environments/environment';\n\nexport interface _User {\n  _id?: string;\n  email?: string;\n  name?: string;\n}\nexport interface _UserLight {\n  _id?: string;\n  accessType?: 'admin' | 'write' | 'read';\n  name?: string;\n}\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class UserService {\n  constructor(private http: HttpClient) {}\n\n  verifyUser(user: User) {\n    let qParrams = new HttpParams();\n    qParrams = qParrams.append('sub', user.sub as any);\n    return this.http\n      .get(`${environment.apiUri}/api/users`, { params: qParrams })\n      .pipe(share(), catchError(this.errorHandler), retry(3));\n  }\n  createUser(user: User) {\n    return this.http\n      .post(`${environment.apiUri}/api/users`, { ...user })\n      .pipe(catchError(this.errorHandler), retry(3));\n  }\n\n  getUsers(searchStr: String): Observable {\n    return this.http\n      .post(`${environment.apiUri}/api/protected/assign/users`, {\n        searchStr: searchStr,\n      })\n      .pipe(retry(3), catchError(this.errorHandler));\n  }\n\n  private errorHandler(error: HttpErrorResponse) {\n    if (error.status === 0) {\n      console.error(\n        `Something went wrong with the network. Error status : ${error.status}`\n      );\n    } else {\n      console.error(`Backed has rejected the request. ${error.error}`);\n    }\n    return throwError(() => new Error(error.error));\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/_UserLight.html":{"url":"interfaces/_UserLight.html","title":"interface - _UserLight","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  _UserLight\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/user.service.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            _id\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            accessType\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            name\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        _id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        _id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        accessType\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        accessType:     \"admin\" | \"write\" | \"read\"\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     \"admin\" | \"write\" | \"read\"\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import {\n  HttpClient,\n  HttpErrorResponse,\n  HttpResponse,\n  HttpParams,\n} from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable, throwError } from 'rxjs';\nimport { retry, catchError, share } from 'rxjs/operators';\nimport { User } from '@auth0/auth0-angular';\nimport { environment } from 'src/environments/environment';\n\nexport interface _User {\n  _id?: string;\n  email?: string;\n  name?: string;\n}\nexport interface _UserLight {\n  _id?: string;\n  accessType?: 'admin' | 'write' | 'read';\n  name?: string;\n}\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class UserService {\n  constructor(private http: HttpClient) {}\n\n  verifyUser(user: User) {\n    let qParrams = new HttpParams();\n    qParrams = qParrams.append('sub', user.sub as any);\n    return this.http\n      .get(`${environment.apiUri}/api/users`, { params: qParrams })\n      .pipe(share(), catchError(this.errorHandler), retry(3));\n  }\n  createUser(user: User) {\n    return this.http\n      .post(`${environment.apiUri}/api/users`, { ...user })\n      .pipe(catchError(this.errorHandler), retry(3));\n  }\n\n  getUsers(searchStr: String): Observable {\n    return this.http\n      .post(`${environment.apiUri}/api/protected/assign/users`, {\n        searchStr: searchStr,\n      })\n      .pipe(retry(3), catchError(this.errorHandler));\n  }\n\n  private errorHandler(error: HttpErrorResponse) {\n    if (error.status === 0) {\n      console.error(\n        `Something went wrong with the network. Error status : ${error.status}`\n      );\n    } else {\n      console.error(`Backed has rejected the request. ${error.error}`);\n    }\n    return throwError(() => new Error(error.error));\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/app/app.component.ts\n            \n            component\n            AppComponent\n            \n                0 %\n                (0/11)\n            \n        \n        \n            \n                \n                src/app/components/body/battery-test/battery-test.component.ts\n            \n            component\n            BatteryTestComponent\n            \n                0 %\n                (0/12)\n            \n        \n        \n            \n                \n                src/app/components/body/battery-test/create-new-test/create-new-test.component.ts\n            \n            component\n            CreateNewTestComponent\n            \n                0 %\n                (0/41)\n            \n        \n        \n            \n                \n                src/app/components/body/battery-test/no-result/no-result.component.ts\n            \n            component\n            NoResultComponent\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/components/body/battery-test/show-all-tests-result/show-all-tests-result.component.ts\n            \n            component\n            ShowAllTestsResultComponent\n            \n                0 %\n                (0/15)\n            \n        \n        \n            \n                \n                src/app/components/body/battery-test/show-test-result/show-test-result.component.ts\n            \n            component\n            ShowTestResultComponent\n            \n                0 %\n                (0/41)\n            \n        \n        \n            \n                \n                src/app/components/body/battery-test/show-test-result/show-test-result.component.ts\n            \n            interface\n            Charts\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/components/body/dashboard/dashboard.component.ts\n            \n            component\n            DashboardComponent\n            \n                0 %\n                (0/12)\n            \n        \n        \n            \n                \n                src/app/components/body/dashboard/dashboard.component.ts\n            \n            interface\n            BreadCrumbs\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/components/body/dashboard/device-data/device-data.component.ts\n            \n            component\n            DeviceDataComponent\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/app/components/body/devices/battery-packs/add-battery-pack/add-battery-pack.component.ts\n            \n            component\n            AddBatteryPackComponent\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/components/body/devices/battery-packs/battery-packs.component.ts\n            \n            component\n            BatteryPacksComponent\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/components/body/devices/battery-packs/edit-battery-pack/edit-battery-pack.component.ts\n            \n            component\n            EditBatteryPackComponent\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/components/body/devices/battery-packs/view-battery-packs/view-battery-packs.component.ts\n            \n            component\n            ViewBatteryPacksComponent\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/components/body/devices/cells/add-cells/add-cells.component.ts\n            \n            component\n            AddCellsComponent\n            \n                0 %\n                (0/16)\n            \n        \n        \n            \n                \n                src/app/components/body/devices/cells/cells.component.ts\n            \n            component\n            CellsComponent\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/app/components/body/devices/cells/edit-cells/edit-cells.component.ts\n            \n            component\n            EditCellsComponent\n            \n                0 %\n                (0/23)\n            \n        \n        \n            \n                \n                src/app/components/body/devices/cells/view-cells/view-cells.component.ts\n            \n            component\n            ViewCellsComponent\n            \n                0 %\n                (0/14)\n            \n        \n        \n            \n                \n                src/app/components/body/devices/devices-default/devices-default.component.ts\n            \n            component\n            DevicesDefaultComponent\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/components/body/devices/devices.component.ts\n            \n            component\n            DevicesComponent\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/components/body/devices/test-chambers/add-test-chamber/add-test-chamber.component.ts\n            \n            component\n            AddTestChamberComponent\n            \n                0 %\n                (0/12)\n            \n        \n        \n            \n                \n                src/app/components/body/devices/test-chambers/edit-test-chamber/edit-test-chamber.component.ts\n            \n            component\n            EditTestChamberComponent\n            \n                0 %\n                (0/19)\n            \n        \n        \n            \n                \n                src/app/components/body/devices/test-chambers/test-chambers.component.ts\n            \n            component\n            TestChambersComponent\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/app/components/body/devices/test-chambers/view-test-chambers/view-test-chambers.component.ts\n            \n            component\n            ViewTestChambersComponent\n            \n                0 %\n                (0/21)\n            \n        \n        \n            \n                \n                src/app/components/body/docs/docs.component.ts\n            \n            component\n            DocsComponent\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/components/body/home/home.component.ts\n            \n            component\n            HomeComponent\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/components/body/home/home.component.ts\n            \n            class\n            Anim\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/app/components/body/home/home.component.ts\n            \n            class\n            Dot\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/components/footer/foot-nav/foot-nav.component.ts\n            \n            component\n            FootNavComponent\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/components/header/head-nav/head-nav.component.ts\n            \n            component\n            HeadNavComponent\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/app/guards/auth.guard.ts\n            \n            guard\n            AuthGuard\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/models/Cell.ts\n            \n            class\n            CellClass\n            \n                0 %\n                (0/15)\n            \n        \n        \n            \n                \n                src/app/models/Cell.ts\n            \n            interface\n            Cell\n            \n                0 %\n                (0/18)\n            \n        \n        \n            \n                \n                src/app/models/CellTemplate.ts\n            \n            interface\n            CellTemplate\n            \n                0 %\n                (0/12)\n            \n        \n        \n            \n                \n                src/app/models/DeviceData.ts\n            \n            interface\n            DeviceDataLight\n            \n                0 %\n                (0/12)\n            \n        \n        \n            \n                \n                src/app/models/DriveCycle.ts\n            \n            interface\n            DriveCycle\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/models/FormFields.ts\n            \n            interface\n            ChannelFields\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/app/models/FormFields.ts\n            \n            interface\n            FileField\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/app/models/FormFields.ts\n            \n            interface\n            InputField\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/app/models/FormFields.ts\n            \n            interface\n            PayLoad\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/models/FormFields.ts\n            \n            interface\n            SelectField\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/app/models/FormFields.ts\n            \n            interface\n            TestFormat\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/app/models/FormFields.ts\n            \n            interface\n            TextField\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/app/models/FormFields.ts\n            \n            variable\n            testFormats\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/models/Test.ts\n            \n            interface\n            Test\n            \n                0 %\n                (0/15)\n            \n        \n        \n            \n                \n                src/app/models/TestChamber.ts\n            \n            class\n            TestChamber\n            \n                0 %\n                (0/12)\n            \n        \n        \n            \n                \n                src/app/models/TestChamber.ts\n            \n            interface\n            _TestChamber\n            \n                0 %\n                (0/17)\n            \n        \n        \n            \n                \n                src/app/models/TestResult.ts\n            \n            interface\n            _TestResultDeep\n            \n                0 %\n                (0/12)\n            \n        \n        \n            \n                \n                src/app/models/TestResult.ts\n            \n            interface\n            _TestResultLight\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/app/models/TestResult.ts\n            \n            interface\n            Channel\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/app/models/TestResult.ts\n            \n            interface\n            MeasuredParameters\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/app/models/TestResult.ts\n            \n            interface\n            QuickResponseMeasurement\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/models/TestResult.ts\n            \n            interface\n            RowInfo\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/app/models/TestResult.ts\n            \n            interface\n            SensorObj\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/models/TestResult.ts\n            \n            interface\n            TestChannel\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                src/app/models/TestResult.ts\n            \n            interface\n            TestChannelDeepChannel\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/app/models/TestResult.ts\n            \n            interface\n            TestResultDocument\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app/models/ToastMsg.ts\n            \n            interface\n            ToastMsg\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/services/cell.service.ts\n            \n            injectable\n            CellService\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/app/services/component-store.service.ts\n            \n            injectable\n            ComponentStoreService\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/services/device-data.service.ts\n            \n            injectable\n            DeviceDataService\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/services/test-chamber.service.ts\n            \n            injectable\n            TestChamberService\n            \n                0 %\n                (0/17)\n            \n        \n        \n            \n                \n                src/app/services/test-data.service.ts\n            \n            injectable\n            TestDataService\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/services/test.service.ts\n            \n            injectable\n            TestService\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/services/user.service.ts\n            \n            injectable\n            UserService\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/app/services/user.service.ts\n            \n            interface\n            _User\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/services/user.service.ts\n            \n            interface\n            _UserLight\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/environments/environment.prod.ts\n            \n            variable\n            environment\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/environments/environment.prod.ts\n            \n            variable\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/environments/environment.ts\n            \n            variable\n            environment\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/environments/environment.ts\n            \n            variable\n            \n            \n                0 %\n                (0/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular/animations : ^15.1.4\n        \n            @angular/cdk : ~15.1.4\n        \n            @angular/common : ^15.1.4\n        \n            @angular/compiler : ^15.1.4\n        \n            @angular/core : ^15.1.4\n        \n            @angular/forms : ^15.1.4\n        \n            @angular/localize : ^15.1.4\n        \n            @angular/platform-browser : ^15.1.4\n        \n            @angular/platform-browser-dynamic : ^15.1.4\n        \n            @angular/router : ^15.1.4\n        \n            @auth0/auth0-angular : ^1.10.0\n        \n            @compodoc/compodoc : ^1.1.19\n        \n            @ng-bootstrap/ng-bootstrap : ^14.0.1\n        \n            @ng-select/ng-select : ^10.0.3\n        \n            @popperjs/core : ^2.10.2\n        \n            bootstrap : ^5.2.3\n        \n            bootstrap-icons : ^1.10.3\n        \n            chart.js : ^3.8.0\n        \n            file-saver : ^2.0.5\n        \n            ng-circle-progress : ^1.6.0\n        \n            ng2-charts : ^3.0.11\n        \n            papaparse : ^5.3.2\n        \n            rxjs : ~7.5.0\n        \n            tslib : ^2.3.0\n        \n            zone.js : ~0.11.4\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nIntelligentBMS\nThis project was generated with Angular CLI version 13.3.7.\nDevelopment server\nRun ng serve for a dev server. Navigate to http://localhost:4200/. The application will automatically reload if you change any of the source files.\nCode scaffolding\nRun ng generate component component-name to generate a new component. You can also use ng generate directive|pipe|service|class|guard|interface|enum|module.\nBuild\nRun ng build to build the project. The build artifacts will be stored in the dist/ directory.\nRunning unit tests\nRun ng test to execute the unit tests via Karma.\nRunning end-to-end tests\nRun ng e2e to execute the end-to-end tests via a platform of your choice. To use this command, you need to first add a package that implements end-to-end testing capabilities.\nFurther help\nTo get more help on the Angular CLI use ng help or go check out the Angular CLI Overview and Command Reference page.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AppRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        BatteryPacksModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        BatteryPacksRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        BatteryTestModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        BatteryTestRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        CellsModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        CellsRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        SharedModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        TestChambersModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        TestChambersRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\ncluster_BatteryPacksModule\n\n\n\ncluster_BatteryPacksModule_declarations\n\n\n\ncluster_BatteryPacksModule_imports\n\n\n\ncluster_BatteryTestModule\n\n\n\ncluster_BatteryTestModule_declarations\n\n\n\ncluster_BatteryTestModule_imports\n\n\n\ncluster_CellsModule\n\n\n\ncluster_CellsModule_declarations\n\n\n\ncluster_CellsModule_imports\n\n\n\ncluster_TestChambersModule\n\n\n\ncluster_TestChambersModule_declarations\n\n\n\ncluster_TestChambersModule_imports\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nDashboardComponent\n\nDashboardComponent\n\nAppModule -->\n\nDashboardComponent->AppModule\n\n\n\n\n\nDeviceDataComponent\n\nDeviceDataComponent\n\nAppModule -->\n\nDeviceDataComponent->AppModule\n\n\n\n\n\nDevicesComponent\n\nDevicesComponent\n\nAppModule -->\n\nDevicesComponent->AppModule\n\n\n\n\n\nDevicesDefaultComponent\n\nDevicesDefaultComponent\n\nAppModule -->\n\nDevicesDefaultComponent->AppModule\n\n\n\n\n\nDocsComponent\n\nDocsComponent\n\nAppModule -->\n\nDocsComponent->AppModule\n\n\n\n\n\nFootNavComponent\n\nFootNavComponent\n\nAppModule -->\n\nFootNavComponent->AppModule\n\n\n\n\n\nHeadNavComponent\n\nHeadNavComponent\n\nAppModule -->\n\nHeadNavComponent->AppModule\n\n\n\n\n\nHomeComponent\n\nHomeComponent\n\nAppModule -->\n\nHomeComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nAppRoutingModule\n\nAppRoutingModule\n\nAppModule -->\n\nAppRoutingModule->AppModule\n\n\n\n\n\nSharedModule\n\nSharedModule\n\nAppModule -->\n\nSharedModule->AppModule\n\n\n\n\n\nBatteryTestModule\n\nBatteryTestModule\n\nBatteryTestModule -->\n\nSharedModule->BatteryTestModule\n\n\n\n\n\nCellsModule\n\nCellsModule\n\nCellsModule -->\n\nSharedModule->CellsModule\n\n\n\n\n\nTestChambersModule\n\nTestChambersModule\n\nTestChambersModule -->\n\nSharedModule->TestChambersModule\n\n\n\n\n\nAddBatteryPackComponent\n\nAddBatteryPackComponent\n\n\n\nBatteryPacksModule\n\nBatteryPacksModule\n\nBatteryPacksModule -->\n\nAddBatteryPackComponent->BatteryPacksModule\n\n\n\n\n\nBatteryPacksComponent\n\nBatteryPacksComponent\n\nBatteryPacksModule -->\n\nBatteryPacksComponent->BatteryPacksModule\n\n\n\n\n\nEditBatteryPackComponent\n\nEditBatteryPackComponent\n\nBatteryPacksModule -->\n\nEditBatteryPackComponent->BatteryPacksModule\n\n\n\n\n\nViewBatteryPacksComponent\n\nViewBatteryPacksComponent\n\nBatteryPacksModule -->\n\nViewBatteryPacksComponent->BatteryPacksModule\n\n\n\n\n\nBatteryPacksRoutingModule\n\nBatteryPacksRoutingModule\n\nBatteryPacksModule -->\n\nBatteryPacksRoutingModule->BatteryPacksModule\n\n\n\n\n\nBatteryTestComponent\n\nBatteryTestComponent\n\nBatteryTestModule -->\n\nBatteryTestComponent->BatteryTestModule\n\n\n\n\n\nCreateNewTestComponent\n\nCreateNewTestComponent\n\nBatteryTestModule -->\n\nCreateNewTestComponent->BatteryTestModule\n\n\n\n\n\nNoResultComponent\n\nNoResultComponent\n\nBatteryTestModule -->\n\nNoResultComponent->BatteryTestModule\n\n\n\n\n\nShowAllTestsResultComponent\n\nShowAllTestsResultComponent\n\nBatteryTestModule -->\n\nShowAllTestsResultComponent->BatteryTestModule\n\n\n\n\n\nShowTestResultComponent\n\nShowTestResultComponent\n\nBatteryTestModule -->\n\nShowTestResultComponent->BatteryTestModule\n\n\n\n\n\nBatteryTestRoutingModule\n\nBatteryTestRoutingModule\n\nBatteryTestModule -->\n\nBatteryTestRoutingModule->BatteryTestModule\n\n\n\n\n\nNgbPagination\n\nNgbPagination\n\nBatteryTestModule -->\n\nNgbPagination->BatteryTestModule\n\n\n\nCellsModule -->\n\nNgbPagination->CellsModule\n\n\n\nTestChambersModule -->\n\nNgbPagination->TestChambersModule\n\n\n\n\n\nAddCellsComponent\n\nAddCellsComponent\n\nCellsModule -->\n\nAddCellsComponent->CellsModule\n\n\n\n\n\nCellsComponent\n\nCellsComponent\n\nCellsModule -->\n\nCellsComponent->CellsModule\n\n\n\n\n\nEditCellsComponent\n\nEditCellsComponent\n\nCellsModule -->\n\nEditCellsComponent->CellsModule\n\n\n\n\n\nViewCellsComponent\n\nViewCellsComponent\n\nCellsModule -->\n\nViewCellsComponent->CellsModule\n\n\n\n\n\nCellsRoutingModule\n\nCellsRoutingModule\n\nCellsModule -->\n\nCellsRoutingModule->CellsModule\n\n\n\n\n\nAddTestChamberComponent\n\nAddTestChamberComponent\n\nTestChambersModule -->\n\nAddTestChamberComponent->TestChambersModule\n\n\n\n\n\nEditTestChamberComponent\n\nEditTestChamberComponent\n\nTestChambersModule -->\n\nEditTestChamberComponent->TestChambersModule\n\n\n\n\n\nTestChambersComponent\n\nTestChambersComponent\n\nTestChambersModule -->\n\nTestChambersComponent->TestChambersModule\n\n\n\n\n\nViewTestChambersComponent\n\nViewTestChambersComponent\n\nTestChambersModule -->\n\nViewTestChambersComponent->TestChambersModule\n\n\n\n\n\nTestChambersRoutingModule\n\nTestChambersRoutingModule\n\nTestChambersModule -->\n\nTestChambersRoutingModule->TestChambersModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        11 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    26 Components\n                \n            \n        \n        \n            \n                \n                    \n                    7 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    4 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    1 Guard\n                \n            \n        \n        \n            \n                \n                    \n                    28 Interfaces\n                \n            \n        \n        \n            \n                \n                    \n                    \n                        48 Routes\n                    \n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 0.0.0\n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"routes.html":{"url":"routes.html","title":"routes - routes","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Routes\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            environment   (src/.../environment.prod.ts)\n                        \n                        \n                            environment   (src/.../environment.ts)\n                        \n                        \n                            testFormats   (src/.../FormFields.ts)\n                        \n                        \n                               (src/.../environment.prod.ts)\n                        \n                        \n                               (src/.../environment.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/environments/environment.prod.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        environment\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n  production: true,\n  auth: {\n    domain,\n    clientId,\n    ...(audience && audience !== 'YOUR_API_IDENTIFIER' ? { audience } : null),\n    redirectUri: window.location.origin,\n    errorPath,\n  },\n  httpInterceptor: {\n    allowedList: [`${apiUri}/*`],\n  },\n  appUri: appUri,\n  apiUri: apiUri,\n}\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        \n                    \n                \n            \n                \n                    \n                        Default value : config as {\n  domain: string;\n  clientId: string;\n  audience?: string;\n  appUri: string;\n  apiUri: string;\n  errorPath: string;\n}\n                    \n                \n\n\n        \n    \n\n    src/environments/environment.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        environment\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n  production: false,\n  auth: {\n    domain,\n    clientId,\n    ...(audience && audience !== 'YOUR_API_IDENTIFIER' ? { audience } : null),\n    redirectUri: window.location.origin,\n    errorPath,\n  },\n  httpInterceptor: {\n    allowedList: [`${apiUri}/*`],\n  },\n  appUri: appUri,\n  apiUri: apiUri,\n}\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        \n                    \n                \n            \n                \n                    \n                        Default value : config as {\n  domain: string;\n  clientId: string;\n  audience?: string;\n  appUri: string;\n  apiUri: string;\n  errorPath: string;\n}\n                    \n                \n\n\n        \n    \n\n    src/app/models/FormFields.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        testFormats\n                        \n                    \n                \n            \n                \n                    \n                        Type :     TestFormat[]\n\n                    \n                \n                \n                    \n                        Default value : [\n  {\n    name: 'Do this for this long.',\n    value: 1,\n    fields: [\n      {\n        id: 1,\n        type: 'select',\n        options: ['Charge', 'Discharge', 'Rest', 'Hold'],\n        value: 'Charge',\n        visibility: true,\n        template_width: 2,\n      } as SelectField,\n      {\n        id: 2,\n        type: 'text',\n        value: 'at',\n        visibility: true,\n        template_width: 1,\n      } as TextField,\n      {\n        id: 3,\n        type: 'input',\n        value: null,\n        visibility: true,\n        template_width: 2,\n      } as InputField,\n      {\n        id: 4,\n        type: 'select',\n        options: ['C', 'A', 'W'],\n        value: 'C',\n        visibility: true,\n        template_width: 2,\n      } as SelectField,\n      {\n        id: 5,\n        type: 'text',\n        value: 'for',\n        visibility: true,\n        template_width: 1,\n      } as TextField,\n      {\n        id: 6,\n        type: 'input',\n        value: null,\n        visibility: true,\n        template_width: 2,\n      } as InputField,\n      {\n        id: 7,\n        type: 'select',\n        options: ['hours.', 'minutes.', 'seconds.'],\n        value: 'hours.',\n        visibility: true,\n        template_width: 2,\n      } as SelectField,\n    ],\n    multiplier: 1,\n    ambTemp: 25,\n  },\n  {\n    name: 'Do this until this happen.',\n    value: 2,\n    fields: [\n      {\n        id: 1,\n        type: 'select',\n        options: ['Charge', 'Discharge'],\n        value: 'Charge',\n        visibility: true,\n        template_width: 2,\n      } as SelectField,\n      {\n        id: 2,\n        type: 'text',\n        value: 'at',\n        visibility: true,\n        template_width: 1,\n      } as SelectField,\n      {\n        id: 3,\n        type: 'input',\n        value: null,\n        visibility: true,\n        template_width: 2,\n      } as InputField,\n      {\n        id: 4,\n        type: 'select',\n        options: ['C', 'A', 'W'],\n        value: 'C',\n        visibility: true,\n        template_width: 2,\n      } as SelectField,\n      {\n        id: 5,\n        type: 'text',\n        value: 'until',\n        visibility: true,\n        template_width: 1,\n      } as TextField,\n      {\n        id: 6,\n        type: 'input',\n        value: null,\n        visibility: true,\n        template_width: 2,\n      } as InputField,\n      {\n        id: 7,\n        type: 'text',\n        value: 'volt.',\n        visibility: true,\n        template_width: 2,\n      } as TextField,\n    ],\n    multiplier: 1,\n    ambTemp: 25,\n  },\n  {\n    name: 'Run X.',\n    value: 3,\n    fields: [\n      {\n        id: 1,\n        type: 'text',\n        value: 'Run',\n        visibility: true,\n        template_width: 1,\n      } as TextField,\n      {\n        id: 2,\n        type: 'file',\n        value: null,\n        visibility: true,\n        template_width: 4,\n      } as FileField,\n      {\n        id: 3,\n        type: 'text',\n        value: 'for',\n        visibility: true,\n        template_width: 1,\n      } as TextField,\n      {\n        id: 4,\n        type: 'input',\n        value: null,\n        visibility: true,\n        template_width: 3,\n      } as InputField,\n      {\n        id: 3,\n        type: 'select',\n        options: ['hours.', 'minutes.', 'seconds.'],\n        value: 'hours.',\n        visibility: true,\n        template_width: 2,\n      } as SelectField,\n    ],\n    multiplier: 1,\n    ambTemp: 25,\n  },\n]\n                    \n                \n\n\n        \n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
